ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyFlash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  18              		.align	2
  19              		.global	CySysFlashWriteRow
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysFlashWriteRow, %function
  23              	CySysFlashWriteRow:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyFlash.c"
   1:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyFlash.c **** * File Name: CyFlash.c
   3:.\Generated_Source\PSoC4/CyFlash.c **** * Version 5.0
   4:.\Generated_Source\PSoC4/CyFlash.c **** *
   5:.\Generated_Source\PSoC4/CyFlash.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyFlash.c **** *   Provides an API for the FLASH.
   7:.\Generated_Source\PSoC4/CyFlash.c **** *
   8:.\Generated_Source\PSoC4/CyFlash.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyFlash.c **** *   This code is endian agnostic.
  10:.\Generated_Source\PSoC4/CyFlash.c **** *
  11:.\Generated_Source\PSoC4/CyFlash.c **** *  Note:
  12:.\Generated_Source\PSoC4/CyFlash.c **** *   Documentation of the API's in this file is located in the
  13:.\Generated_Source\PSoC4/CyFlash.c **** *   System Reference Guide provided with PSoC Creator.
  14:.\Generated_Source\PSoC4/CyFlash.c **** *
  15:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  16:.\Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  17:.\Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  18:.\Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  19:.\Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  20:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  21:.\Generated_Source\PSoC4/CyFlash.c **** 
  22:.\Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyFlash.c **** 
  24:.\Generated_Source\PSoC4/CyFlash.c **** 
  25:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/CyFlash.c **** * Cypress identified a defect with the Flash write functionality of the
  27:.\Generated_Source\PSoC4/CyFlash.c **** * PSoC 4000, PSoC 4100, and PSoC 4200 devices. The CySysFlashWriteRow() function
  28:.\Generated_Source\PSoC4/CyFlash.c **** * now checks the data to be written and, if necessary, modifies it to have a
  29:.\Generated_Source\PSoC4/CyFlash.c **** * non-zero checksum. After writing to Flash, the modified data is replaced
  30:.\Generated_Source\PSoC4/CyFlash.c **** * (Flash program) with the correct (original) data.
  31:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  32:.\Generated_Source\PSoC4/CyFlash.c **** #define CY_FLASH_CHECKSUM_WORKAROUND    (CY_PSOC4_4000 || CY_PSOC4_4100 || CY_PSOC4_4200)
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 2


  33:.\Generated_Source\PSoC4/CyFlash.c **** 
  34:.\Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FM || (CY_IP_FMLT && CY_IP_SPCIF_SYNCHRONOUS))
  35:.\Generated_Source\PSoC4/CyFlash.c ****     static CY_SYS_FLASH_CLOCK_BACKUP_STRUCT cySysFlashBackup;
  36:.\Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FM || (CY_IP_FMLT && CY_IP_SPCIF_SYNCHRONOUS)) */
  37:.\Generated_Source\PSoC4/CyFlash.c **** 
  38:.\Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void);
  39:.\Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void);
  40:.\Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FMLT)
  41:.\Generated_Source\PSoC4/CyFlash.c ****     static cystatus CySysFlashClockConfig(void);
  42:.\Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FMLT) */
  43:.\Generated_Source\PSoC4/CyFlash.c **** 
  44:.\Generated_Source\PSoC4/CyFlash.c **** 
  45:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  46:.\Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  47:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  48:.\Generated_Source\PSoC4/CyFlash.c **** *
  49:.\Generated_Source\PSoC4/CyFlash.c **** * Summary:
  50:.\Generated_Source\PSoC4/CyFlash.c **** *  Erases a row of Flash and programs it with the new data.
  51:.\Generated_Source\PSoC4/CyFlash.c **** *
  52:.\Generated_Source\PSoC4/CyFlash.c **** * Parameters:
  53:.\Generated_Source\PSoC4/CyFlash.c **** *  uint16 rowNum:
  54:.\Generated_Source\PSoC4/CyFlash.c **** *   The flash row number. The number of the flash rows is defined by the
  55:.\Generated_Source\PSoC4/CyFlash.c **** *   CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the device
  56:.\Generated_Source\PSoC4/CyFlash.c **** *   datasheet for the details.
  57:.\Generated_Source\PSoC4/CyFlash.c **** *
  58:.\Generated_Source\PSoC4/CyFlash.c **** *  uint8* rowData:
  59:.\Generated_Source\PSoC4/CyFlash.c **** *   Array of bytes to write. The size of the array must be equal to the flash
  60:.\Generated_Source\PSoC4/CyFlash.c **** *   row size. The flash row size for the selected device is defined by
  61:.\Generated_Source\PSoC4/CyFlash.c **** *   the CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
  62:.\Generated_Source\PSoC4/CyFlash.c **** *   details.
  63:.\Generated_Source\PSoC4/CyFlash.c **** *
  64:.\Generated_Source\PSoC4/CyFlash.c **** * Return:
  65:.\Generated_Source\PSoC4/CyFlash.c **** *  Status
  66:.\Generated_Source\PSoC4/CyFlash.c **** *     Value                     Description
  67:.\Generated_Source\PSoC4/CyFlash.c **** *    CY_SYS_FLASH_SUCCESS           Successful
  68:.\Generated_Source\PSoC4/CyFlash.c **** *    CY_SYS_FLASH_INVALID_ADDR      Specified flash row address is invalid
  69:.\Generated_Source\PSoC4/CyFlash.c **** *    CY_SYS_FLASH_PROTECTED         Specified flash row is protected
  70:.\Generated_Source\PSoC4/CyFlash.c **** *    Other non-zero                 Failure
  71:.\Generated_Source\PSoC4/CyFlash.c **** *
  72:.\Generated_Source\PSoC4/CyFlash.c **** * Side Effects:
  73:.\Generated_Source\PSoC4/CyFlash.c **** *   The IMO must be enabled before calling this function. The operation of the
  74:.\Generated_Source\PSoC4/CyFlash.c **** *   flash writing hardware is dependent on the IMO.
  75:.\Generated_Source\PSoC4/CyFlash.c **** *
  76:.\Generated_Source\PSoC4/CyFlash.c **** *   For PSoC 4000, PSoC 4100 BLE and PSoC 4200 BLE devices (PSoC 4100 BLE and
  77:.\Generated_Source\PSoC4/CyFlash.c **** *   PSoC 4200 BLE devices with 256K of Flash memory are not affected), this API
  78:.\Generated_Source\PSoC4/CyFlash.c **** *   will automatically modify the clock settings for the device. Writing to
  79:.\Generated_Source\PSoC4/CyFlash.c **** *   flash requires that changes be made to the IMO and HFCLK settings. The
  80:.\Generated_Source\PSoC4/CyFlash.c **** *   configuration is restored before returning. This will impact the operation
  81:.\Generated_Source\PSoC4/CyFlash.c **** *   of most of the hardware in the device.
  82:.\Generated_Source\PSoC4/CyFlash.c **** *
  83:.\Generated_Source\PSoC4/CyFlash.c **** *   For PSoC 4000 devices this API will automatically modify the clock settings
  84:.\Generated_Source\PSoC4/CyFlash.c **** *   for the device. Writing to flash requires that changes be made to the IMO
  85:.\Generated_Source\PSoC4/CyFlash.c **** *   and HFCLK settings. The configuration is restored before returning. HFCLK
  86:.\Generated_Source\PSoC4/CyFlash.c **** *   will have several frequency changes during the operation of this API between
  87:.\Generated_Source\PSoC4/CyFlash.c **** *   a minimum frequency of the current IMO frequency divided by 8 and a maximum
  88:.\Generated_Source\PSoC4/CyFlash.c **** *   frequency of 12 MHz. This will impact the operation of most of the hardware
  89:.\Generated_Source\PSoC4/CyFlash.c **** *   in the device.
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 3


  90:.\Generated_Source\PSoC4/CyFlash.c **** *
  91:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  92:.\Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  93:.\Generated_Source\PSoC4/CyFlash.c **** {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28 0000 90B5     		push	{r4, r7, lr}
  29              		.cfi_def_cfa_offset 12
  30              		.cfi_offset 4, -12
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 A9B0     		sub	sp, sp, #164
  34              		.cfi_def_cfa_offset 176
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37 0006 7860     		str	r0, [r7, #4]
  38 0008 3960     		str	r1, [r7]
  94:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  39              		.loc 1 94 0
  40 000a 0023     		mov	r3, #0
  41 000c 9822     		mov	r2, #152
  42 000e D219     		add	r2, r2, r7
  43 0010 1360     		str	r3, [r2]
  95:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
  44              		.loc 1 95 0
  45 0012 0023     		mov	r3, #0
  46 0014 9422     		mov	r2, #148
  47 0016 D219     		add	r2, r2, r7
  48 0018 1360     		str	r3, [r2]
  96:.\Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
  97:.\Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  98:.\Generated_Source\PSoC4/CyFlash.c **** 
  99:.\Generated_Source\PSoC4/CyFlash.c ****     #if (CY_FLASH_CHECKSUM_WORKAROUND)
 100:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 needChecksumWorkaround = 0u;
 101:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 savedIndex = 0u;
 102:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 savedValue = 0u;
 103:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 checksum = 0u;
 104:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 bits = 0u;
 105:.\Generated_Source\PSoC4/CyFlash.c ****         uint32 i;
 106:.\Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 107:.\Generated_Source\PSoC4/CyFlash.c **** 
 108:.\Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  49              		.loc 1 108 0
  50 001a 7A68     		ldr	r2, [r7, #4]
  51 001c 4D4B     		ldr	r3, .L15
  52 001e 9A42     		cmp	r2, r3
  53 0020 00D9     		bls	.LCB26
  54 0022 8CE0     		b	.L2	@long jump
  55              	.LCB26:
  56              		.loc 1 108 0 is_stmt 0 discriminator 1
  57 0024 3B68     		ldr	r3, [r7]
  58 0026 002B     		cmp	r3, #0
  59 0028 00D1     		bne	.LCB29
  60 002a 88E0     		b	.L2	@long jump
  61              	.LCB29:
 109:.\Generated_Source\PSoC4/CyFlash.c ****     {
 110:.\Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 4


 111:.\Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
  62              		.loc 1 111 0 is_stmt 1
  63 002c 3B1C     		mov	r3, r7
  64 002e 0C33     		add	r3, r3, #12
  65 0030 1A1C     		mov	r2, r3
  66 0032 0832     		add	r2, r2, #8
  67 0034 3B68     		ldr	r3, [r7]
  68 0036 101C     		mov	r0, r2
  69 0038 191C     		mov	r1, r3
  70 003a 8022     		mov	r2, #128
  71 003c FFF7FEFF 		bl	memcpy
 112:.\Generated_Source\PSoC4/CyFlash.c **** 
 113:.\Generated_Source\PSoC4/CyFlash.c ****         #if (CY_FLASH_CHECKSUM_WORKAROUND)
 114:.\Generated_Source\PSoC4/CyFlash.c **** 
 115:.\Generated_Source\PSoC4/CyFlash.c ****             for (i = 2u; i < ((CY_FLASH_SIZEOF_ROW / sizeof(uint32)) + 2u); i++)
 116:.\Generated_Source\PSoC4/CyFlash.c ****             {
 117:.\Generated_Source\PSoC4/CyFlash.c ****                 uint32 tmp = parameters[i];
 118:.\Generated_Source\PSoC4/CyFlash.c ****                 if (tmp != 0u)
 119:.\Generated_Source\PSoC4/CyFlash.c ****                 {
 120:.\Generated_Source\PSoC4/CyFlash.c ****                     checksum += tmp;
 121:.\Generated_Source\PSoC4/CyFlash.c ****                     bits |= tmp;
 122:.\Generated_Source\PSoC4/CyFlash.c ****                     savedIndex = i;
 123:.\Generated_Source\PSoC4/CyFlash.c ****                 }
 124:.\Generated_Source\PSoC4/CyFlash.c ****             }
 125:.\Generated_Source\PSoC4/CyFlash.c **** 
 126:.\Generated_Source\PSoC4/CyFlash.c ****             needChecksumWorkaround = ((checksum == 0u) && (bits != 0u)) ? 1u : 0u;
 127:.\Generated_Source\PSoC4/CyFlash.c ****             if (needChecksumWorkaround != 0u)
 128:.\Generated_Source\PSoC4/CyFlash.c ****             {
 129:.\Generated_Source\PSoC4/CyFlash.c ****                 savedValue = parameters[savedIndex];
 130:.\Generated_Source\PSoC4/CyFlash.c ****                 parameters[savedIndex] = 0u;
 131:.\Generated_Source\PSoC4/CyFlash.c ****             }
 132:.\Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 133:.\Generated_Source\PSoC4/CyFlash.c **** 
 134:.\Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 135:.\Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 136:.\Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 137:.\Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
  72              		.loc 1 137 0
  73 0040 7A68     		ldr	r2, [r7, #4]
  74 0042 454B     		ldr	r3, .L15+4
  75 0044 9A42     		cmp	r2, r3
  76 0046 01D9     		bls	.L3
  77              		.loc 1 137 0 is_stmt 0 discriminator 1
  78 0048 444A     		ldr	r2, .L15+8
  79 004a 00E0     		b	.L4
  80              	.L3:
  81              		.loc 1 137 0 discriminator 2
  82 004c 444A     		ldr	r2, .L15+12
  83              	.L4:
 135:.\Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
  84              		.loc 1 135 0 is_stmt 1
  85 004e 3B1C     		mov	r3, r7
  86 0050 0C33     		add	r3, r3, #12
  87 0052 1A60     		str	r2, [r3]
 138:.\Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 139:.\Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
  88              		.loc 1 139 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 5


  89 0054 3B1C     		mov	r3, r7
  90 0056 0C33     		add	r3, r3, #12
  91 0058 7F22     		mov	r2, #127
  92 005a 5A60     		str	r2, [r3, #4]
 140:.\Generated_Source\PSoC4/CyFlash.c **** 
 141:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
  93              		.loc 1 141 0
  94 005c 414B     		ldr	r3, .L15+16
  95 005e 3A1C     		mov	r2, r7
  96 0060 0C32     		add	r2, r2, #12
  97 0062 1A60     		str	r2, [r3]
 142:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
  98              		.loc 1 142 0
  99 0064 404B     		ldr	r3, .L15+20
 100 0066 414A     		ldr	r2, .L15+24
 101 0068 1A60     		str	r2, [r3]
 143:.\Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 102              		.loc 1 143 0
 103 006a 3E4B     		ldr	r3, .L15+16
 104 006c 1B68     		ldr	r3, [r3]
 105 006e 1B0F     		lsr	r3, r3, #28
 106 0070 1A07     		lsl	r2, r3, #28
 107 0072 A023     		mov	r3, #160
 108 0074 1B06     		lsl	r3, r3, #24
 109 0076 9A42     		cmp	r2, r3
 110 0078 04D0     		beq	.L5
 111              		.loc 1 143 0 is_stmt 0 discriminator 1
 112 007a 3A4B     		ldr	r3, .L15+16
 113 007c 1A68     		ldr	r2, [r3]
 114 007e 0F23     		mov	r3, #15
 115 0080 1340     		and	r3, r2
 116 0082 00E0     		b	.L6
 117              	.L5:
 118              		.loc 1 143 0 discriminator 2
 119 0084 0023     		mov	r3, #0
 120              	.L6:
 121              		.loc 1 143 0 discriminator 3
 122 0086 9822     		mov	r2, #152
 123 0088 D219     		add	r2, r2, r7
 124 008a 1360     		str	r3, [r2]
 144:.\Generated_Source\PSoC4/CyFlash.c **** 
 145:.\Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 125              		.loc 1 145 0 is_stmt 1 discriminator 3
 126 008c 9822     		mov	r2, #152
 127 008e D219     		add	r2, r2, r7
 128 0090 1368     		ldr	r3, [r2]
 129 0092 002B     		cmp	r3, #0
 130 0094 52D1     		bne	.L7
 146:.\Generated_Source\PSoC4/CyFlash.c ****         {
 147:.\Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 148:.\Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 149:.\Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 150:.\Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 151:.\Generated_Source\PSoC4/CyFlash.c ****             * context.
 152:.\Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 153:.\Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 131              		.loc 1 153 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 6


 132 0096 3C1C     		mov	r4, r7
 133 0098 9F34     		add	r4, r4, #159
 134 009a FFF7FEFF 		bl	CyEnterCriticalSection
 135 009e 031C     		mov	r3, r0
 136 00a0 2370     		strb	r3, [r4]
 154:.\Generated_Source\PSoC4/CyFlash.c **** 
 155:.\Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 137              		.loc 1 155 0
 138 00a2 FFF7FEFF 		bl	CySysFlashClockBackup
 139 00a6 031C     		mov	r3, r0
 140 00a8 9422     		mov	r2, #148
 141 00aa D219     		add	r2, r2, r7
 142 00ac 1360     		str	r3, [r2]
 156:.\Generated_Source\PSoC4/CyFlash.c **** 
 157:.\Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_FMLT)
 158:.\Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 143              		.loc 1 158 0
 144 00ae 9422     		mov	r2, #148
 145 00b0 D219     		add	r2, r2, r7
 146 00b2 1368     		ldr	r3, [r2]
 147 00b4 002B     		cmp	r3, #0
 148 00b6 05D1     		bne	.L8
 159:.\Generated_Source\PSoC4/CyFlash.c ****             {
 160:.\Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 149              		.loc 1 160 0
 150 00b8 FFF7FEFF 		bl	CySysFlashClockConfig
 151 00bc 031C     		mov	r3, r0
 152 00be 9822     		mov	r2, #152
 153 00c0 D219     		add	r2, r2, r7
 154 00c2 1360     		str	r3, [r2]
 155              	.L8:
 161:.\Generated_Source\PSoC4/CyFlash.c ****             }
 162:.\Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_FMLT) */
 163:.\Generated_Source\PSoC4/CyFlash.c **** 
 164:.\Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 156              		.loc 1 164 0
 157 00c4 9822     		mov	r2, #152
 158 00c6 D219     		add	r2, r2, r7
 159 00c8 1368     		ldr	r3, [r2]
 160 00ca 002B     		cmp	r3, #0
 161 00cc 24D1     		bne	.L9
 165:.\Generated_Source\PSoC4/CyFlash.c ****             {
 166:.\Generated_Source\PSoC4/CyFlash.c ****                 /* Write Row */
 167:.\Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_RO
 162              		.loc 1 167 0
 163 00ce 3B1C     		mov	r3, r7
 164 00d0 0C33     		add	r3, r3, #12
 165 00d2 274A     		ldr	r2, .L15+28
 166 00d4 1A60     		str	r2, [r3]
 168:.\Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 167              		.loc 1 168 0
 168 00d6 3B1C     		mov	r3, r7
 169 00d8 0C33     		add	r3, r3, #12
 170 00da 1A68     		ldr	r2, [r3]
 171 00dc 7B68     		ldr	r3, [r7, #4]
 172 00de 1B04     		lsl	r3, r3, #16
 173 00e0 1A43     		orr	r2, r3
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 7


 174 00e2 3B1C     		mov	r3, r7
 175 00e4 0C33     		add	r3, r3, #12
 176 00e6 1A60     		str	r2, [r3]
 169:.\Generated_Source\PSoC4/CyFlash.c **** 
 170:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 177              		.loc 1 170 0
 178 00e8 1E4B     		ldr	r3, .L15+16
 179 00ea 3A1C     		mov	r2, r7
 180 00ec 0C32     		add	r2, r2, #12
 181 00ee 1A60     		str	r2, [r3]
 171:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 182              		.loc 1 171 0
 183 00f0 1D4B     		ldr	r3, .L15+20
 184 00f2 204A     		ldr	r2, .L15+32
 185 00f4 1A60     		str	r2, [r3]
 172:.\Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 186              		.loc 1 172 0
 187 00f6 1B4B     		ldr	r3, .L15+16
 188 00f8 1B68     		ldr	r3, [r3]
 189 00fa 1B0F     		lsr	r3, r3, #28
 190 00fc 1A07     		lsl	r2, r3, #28
 191 00fe A023     		mov	r3, #160
 192 0100 1B06     		lsl	r3, r3, #24
 193 0102 9A42     		cmp	r2, r3
 194 0104 04D0     		beq	.L10
 195              		.loc 1 172 0 is_stmt 0 discriminator 1
 196 0106 174B     		ldr	r3, .L15+16
 197 0108 1A68     		ldr	r2, [r3]
 198 010a 0F23     		mov	r3, #15
 199 010c 1340     		and	r3, r2
 200 010e 00E0     		b	.L11
 201              	.L10:
 202              		.loc 1 172 0 discriminator 2
 203 0110 0023     		mov	r3, #0
 204              	.L11:
 205              		.loc 1 172 0 discriminator 3
 206 0112 9822     		mov	r2, #152
 207 0114 D219     		add	r2, r2, r7
 208 0116 1360     		str	r3, [r2]
 209              	.L9:
 173:.\Generated_Source\PSoC4/CyFlash.c ****             }
 174:.\Generated_Source\PSoC4/CyFlash.c **** 
 175:.\Generated_Source\PSoC4/CyFlash.c ****             #if (CY_FLASH_CHECKSUM_WORKAROUND)
 176:.\Generated_Source\PSoC4/CyFlash.c **** 
 177:.\Generated_Source\PSoC4/CyFlash.c ****                 if ((retValue == CYRET_SUCCESS) && (needChecksumWorkaround != 0u))
 178:.\Generated_Source\PSoC4/CyFlash.c ****                 {
 179:.\Generated_Source\PSoC4/CyFlash.c ****                     (void)memset((void *)&parameters[2u], 0, CY_FLASH_SIZEOF_ROW);
 180:.\Generated_Source\PSoC4/CyFlash.c ****                     parameters[savedIndex] = savedValue;
 181:.\Generated_Source\PSoC4/CyFlash.c **** 
 182:.\Generated_Source\PSoC4/CyFlash.c ****                     /* Load Flash Bytes */
 183:.\Generated_Source\PSoC4/CyFlash.c ****                     parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLA
 184:.\Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLA
 185:.\Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLA
 186:.\Generated_Source\PSoC4/CyFlash.c ****                                      CY_FLASH_KEY_ONE;
 187:.\Generated_Source\PSoC4/CyFlash.c ****                     parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 188:.\Generated_Source\PSoC4/CyFlash.c **** 
 189:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 8


 190:.\Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD
 191:.\Generated_Source\PSoC4/CyFlash.c ****                     retValue = CY_FLASH_API_RETURN;
 192:.\Generated_Source\PSoC4/CyFlash.c **** 
 193:.\Generated_Source\PSoC4/CyFlash.c **** 
 194:.\Generated_Source\PSoC4/CyFlash.c ****                     if(retValue == CY_SYS_FLASH_SUCCESS)
 195:.\Generated_Source\PSoC4/CyFlash.c ****                     {
 196:.\Generated_Source\PSoC4/CyFlash.c ****                         /* Program Row */
 197:.\Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u]  =
 198:.\Generated_Source\PSoC4/CyFlash.c ****                             (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_PROGRAM_ROW) <
 199:.\Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_O
 200:.\Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u] |= (uint32)(rowNum << 16u);
 201:.\Generated_Source\PSoC4/CyFlash.c **** 
 202:.\Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 203:.\Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_
 204:.\Generated_Source\PSoC4/CyFlash.c ****                         retValue = CY_FLASH_API_RETURN;
 205:.\Generated_Source\PSoC4/CyFlash.c ****                     }
 206:.\Generated_Source\PSoC4/CyFlash.c ****                 }
 207:.\Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 208:.\Generated_Source\PSoC4/CyFlash.c **** 
 209:.\Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 210              		.loc 1 209 0 is_stmt 1
 211 0118 9422     		mov	r2, #148
 212 011a D219     		add	r2, r2, r7
 213 011c 1368     		ldr	r3, [r2]
 214 011e 002B     		cmp	r3, #0
 215 0120 05D1     		bne	.L12
 210:.\Generated_Source\PSoC4/CyFlash.c ****             {
 211:.\Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 216              		.loc 1 211 0
 217 0122 FFF7FEFF 		bl	CySysFlashClockRestore
 218 0126 031C     		mov	r3, r0
 219 0128 9422     		mov	r2, #148
 220 012a D219     		add	r2, r2, r7
 221 012c 1360     		str	r3, [r2]
 222              	.L12:
 212:.\Generated_Source\PSoC4/CyFlash.c ****             }
 213:.\Generated_Source\PSoC4/CyFlash.c **** 
 214:.\Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 223              		.loc 1 214 0
 224 012e 3B1C     		mov	r3, r7
 225 0130 9F33     		add	r3, r3, #159
 226 0132 1B78     		ldrb	r3, [r3]
 227 0134 181C     		mov	r0, r3
 228 0136 FFF7FEFF 		bl	CyExitCriticalSection
 145:.\Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 229              		.loc 1 145 0
 230 013a 04E0     		b	.L13
 231              	.L7:
 145:.\Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 232              		.loc 1 145 0 is_stmt 0 discriminator 1
 233 013c 03E0     		b	.L13
 234              	.L2:
 215:.\Generated_Source\PSoC4/CyFlash.c ****         }
 216:.\Generated_Source\PSoC4/CyFlash.c ****     }
 217:.\Generated_Source\PSoC4/CyFlash.c ****     else
 218:.\Generated_Source\PSoC4/CyFlash.c ****     {
 219:.\Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 9


 235              		.loc 1 219 0 is_stmt 1
 236 013e 0423     		mov	r3, #4
 237 0140 9822     		mov	r2, #152
 238 0142 D219     		add	r2, r2, r7
 239 0144 1360     		str	r3, [r2]
 240              	.L13:
 220:.\Generated_Source\PSoC4/CyFlash.c ****     }
 221:.\Generated_Source\PSoC4/CyFlash.c **** 
 222:.\Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 241              		.loc 1 222 0
 242 0146 9822     		mov	r2, #152
 243 0148 D219     		add	r2, r2, r7
 244 014a 1368     		ldr	r3, [r2]
 223:.\Generated_Source\PSoC4/CyFlash.c **** }
 245              		.loc 1 223 0
 246 014c 181C     		mov	r0, r3
 247 014e BD46     		mov	sp, r7
 248 0150 29B0     		add	sp, sp, #164
 249              		@ sp needed
 250 0152 90BD     		pop	{r4, r7, pc}
 251              	.L16:
 252              		.align	2
 253              	.L15:
 254 0154 FF030000 		.word	1023
 255 0158 FF010000 		.word	511
 256 015c B6D70001 		.word	16832438
 257 0160 B6D70000 		.word	55222
 258 0164 08001040 		.word	1074790408
 259 0168 04001040 		.word	1074790404
 260 016c 04000080 		.word	-2147483644
 261 0170 B6D80000 		.word	55478
 262 0174 05000080 		.word	-2147483643
 263              		.cfi_endproc
 264              	.LFE1:
 265              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 266              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 267              		.align	2
 268              		.global	CySysFlashSetWaitCycles
 269              		.code	16
 270              		.thumb_func
 271              		.type	CySysFlashSetWaitCycles, %function
 272              	CySysFlashSetWaitCycles:
 273              	.LFB2:
 224:.\Generated_Source\PSoC4/CyFlash.c **** 
 225:.\Generated_Source\PSoC4/CyFlash.c **** 
 226:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashSetWaitCycles
 228:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/CyFlash.c **** *
 230:.\Generated_Source\PSoC4/CyFlash.c **** * Summary:
 231:.\Generated_Source\PSoC4/CyFlash.c **** *  Sets the number of clock cycles the cache will wait before it samples data
 232:.\Generated_Source\PSoC4/CyFlash.c **** *  coming back from Flash. This function must be called before increasing the
 233:.\Generated_Source\PSoC4/CyFlash.c **** *  SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 234:.\Generated_Source\PSoC4/CyFlash.c **** *  clock frequency in order to improve the CPU performance.
 235:.\Generated_Source\PSoC4/CyFlash.c **** *
 236:.\Generated_Source\PSoC4/CyFlash.c **** * Parameters:
 237:.\Generated_Source\PSoC4/CyFlash.c **** *  freq: The System clock frequency in MHz. Note: Invalid frequency will be
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 10


 238:.\Generated_Source\PSoC4/CyFlash.c **** *  ignored in Release mode and the CPU will be halted if project is compiled in
 239:.\Generated_Source\PSoC4/CyFlash.c **** *  Debug mode.
 240:.\Generated_Source\PSoC4/CyFlash.c **** *
 241:.\Generated_Source\PSoC4/CyFlash.c **** * Return:
 242:.\Generated_Source\PSoC4/CyFlash.c **** *  None
 243:.\Generated_Source\PSoC4/CyFlash.c **** *
 244:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 245:.\Generated_Source\PSoC4/CyFlash.c **** void CySysFlashSetWaitCycles(uint32 freq)
 246:.\Generated_Source\PSoC4/CyFlash.c **** {
 274              		.loc 1 246 0
 275              		.cfi_startproc
 276 0000 90B5     		push	{r4, r7, lr}
 277              		.cfi_def_cfa_offset 12
 278              		.cfi_offset 4, -12
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 85B0     		sub	sp, sp, #20
 282              		.cfi_def_cfa_offset 32
 283 0004 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
 247:.\Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 248:.\Generated_Source\PSoC4/CyFlash.c **** 
 249:.\Generated_Source\PSoC4/CyFlash.c ****     interruptState = CyEnterCriticalSection();
 286              		.loc 1 249 0
 287 0008 3C1C     		mov	r4, r7
 288 000a 0F34     		add	r4, r4, #15
 289 000c FFF7FEFF 		bl	CyEnterCriticalSection
 290 0010 031C     		mov	r3, r0
 291 0012 2370     		strb	r3, [r4]
 250:.\Generated_Source\PSoC4/CyFlash.c **** 
 251:.\Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_CPUSS)
 252:.\Generated_Source\PSoC4/CyFlash.c **** 
 253:.\Generated_Source\PSoC4/CyFlash.c ****         if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 254:.\Generated_Source\PSoC4/CyFlash.c ****         {
 255:.\Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 256:.\Generated_Source\PSoC4/CyFlash.c ****         }
 257:.\Generated_Source\PSoC4/CyFlash.c ****         else
 258:.\Generated_Source\PSoC4/CyFlash.c ****         {
 259:.\Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 260:.\Generated_Source\PSoC4/CyFlash.c ****         }
 261:.\Generated_Source\PSoC4/CyFlash.c ****     #else
 262:.\Generated_Source\PSoC4/CyFlash.c ****         if (freq <= CY_FLASH_CTL_WS_0_FREQ_MAX)
 292              		.loc 1 262 0
 293 0014 7B68     		ldr	r3, [r7, #4]
 294 0016 102B     		cmp	r3, #16
 295 0018 06D8     		bhi	.L18
 263:.\Generated_Source\PSoC4/CyFlash.c ****         {
 264:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_0_VALUE
 296              		.loc 1 264 0
 297 001a 154B     		ldr	r3, .L22
 298 001c 144A     		ldr	r2, .L22
 299 001e 1268     		ldr	r2, [r2]
 300 0020 0321     		mov	r1, #3
 301 0022 8A43     		bic	r2, r1
 302 0024 1A60     		str	r2, [r3]
 303 0026 1AE0     		b	.L19
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 11


 304              	.L18:
 265:.\Generated_Source\PSoC4/CyFlash.c ****         } else
 266:.\Generated_Source\PSoC4/CyFlash.c ****         if (freq <= CY_FLASH_CTL_WS_1_FREQ_MAX)
 305              		.loc 1 266 0
 306 0028 7B68     		ldr	r3, [r7, #4]
 307 002a 202B     		cmp	r3, #32
 308 002c 08D8     		bhi	.L20
 267:.\Generated_Source\PSoC4/CyFlash.c ****         {
 268:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_1_VALUE
 309              		.loc 1 268 0
 310 002e 104B     		ldr	r3, .L22
 311 0030 0F4A     		ldr	r2, .L22
 312 0032 1268     		ldr	r2, [r2]
 313 0034 0321     		mov	r1, #3
 314 0036 8A43     		bic	r2, r1
 315 0038 0121     		mov	r1, #1
 316 003a 0A43     		orr	r2, r1
 317 003c 1A60     		str	r2, [r3]
 318 003e 0EE0     		b	.L19
 319              	.L20:
 269:.\Generated_Source\PSoC4/CyFlash.c ****         } else
 270:.\Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_FMLT || CY_IP_S8FS)
 271:.\Generated_Source\PSoC4/CyFlash.c ****         if (freq <= CY_FLASH_CTL_WS_2_FREQ_MAX)
 320              		.loc 1 271 0
 321 0040 7B68     		ldr	r3, [r7, #4]
 322 0042 302B     		cmp	r3, #48
 323 0044 08D8     		bhi	.L21
 272:.\Generated_Source\PSoC4/CyFlash.c ****         {
 273:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_2_VALUE
 324              		.loc 1 273 0
 325 0046 0A4B     		ldr	r3, .L22
 326 0048 094A     		ldr	r2, .L22
 327 004a 1268     		ldr	r2, [r2]
 328 004c 0321     		mov	r1, #3
 329 004e 8A43     		bic	r2, r1
 330 0050 0221     		mov	r1, #2
 331 0052 0A43     		orr	r2, r1
 332 0054 1A60     		str	r2, [r3]
 333 0056 02E0     		b	.L19
 334              	.L21:
 274:.\Generated_Source\PSoC4/CyFlash.c ****         }
 275:.\Generated_Source\PSoC4/CyFlash.c ****         else
 276:.\Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_FMLT || CY_IP_S8FS) */
 277:.\Generated_Source\PSoC4/CyFlash.c ****         {
 278:.\Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 279:.\Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 335              		.loc 1 279 0 discriminator 1
 336 0058 0020     		mov	r0, #0
 337 005a FFF7FEFF 		bl	CyHalt
 338              	.L19:
 280:.\Generated_Source\PSoC4/CyFlash.c ****         }
 281:.\Generated_Source\PSoC4/CyFlash.c **** 
 282:.\Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_CPUSS) */
 283:.\Generated_Source\PSoC4/CyFlash.c **** 
 284:.\Generated_Source\PSoC4/CyFlash.c ****     CyExitCriticalSection(interruptState);
 339              		.loc 1 284 0
 340 005e 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 12


 341 0060 0F33     		add	r3, r3, #15
 342 0062 1B78     		ldrb	r3, [r3]
 343 0064 181C     		mov	r0, r3
 344 0066 FFF7FEFF 		bl	CyExitCriticalSection
 285:.\Generated_Source\PSoC4/CyFlash.c **** }
 345              		.loc 1 285 0
 346 006a BD46     		mov	sp, r7
 347 006c 05B0     		add	sp, sp, #20
 348              		@ sp needed
 349 006e 90BD     		pop	{r4, r7, pc}
 350              	.L23:
 351              		.align	2
 352              	.L22:
 353 0070 30001040 		.word	1074790448
 354              		.cfi_endproc
 355              	.LFE2:
 356              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 357              		.section	.text.CySysFlashClockBackup,"ax",%progbits
 358              		.align	2
 359              		.code	16
 360              		.thumb_func
 361              		.type	CySysFlashClockBackup, %function
 362              	CySysFlashClockBackup:
 363              	.LFB3:
 286:.\Generated_Source\PSoC4/CyFlash.c **** 
 287:.\Generated_Source\PSoC4/CyFlash.c **** 
 288:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 289:.\Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockBackup
 290:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
 291:.\Generated_Source\PSoC4/CyFlash.c **** *
 292:.\Generated_Source\PSoC4/CyFlash.c **** * Summary:
 293:.\Generated_Source\PSoC4/CyFlash.c **** *  Backups the device clock configuration.
 294:.\Generated_Source\PSoC4/CyFlash.c **** *
 295:.\Generated_Source\PSoC4/CyFlash.c **** * Parameters:
 296:.\Generated_Source\PSoC4/CyFlash.c **** *  None
 297:.\Generated_Source\PSoC4/CyFlash.c **** *
 298:.\Generated_Source\PSoC4/CyFlash.c **** * Return:
 299:.\Generated_Source\PSoC4/CyFlash.c **** *  The same as CySysFlashWriteRow().
 300:.\Generated_Source\PSoC4/CyFlash.c **** *
 301:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void)
 303:.\Generated_Source\PSoC4/CyFlash.c **** {
 364              		.loc 1 303 0
 365              		.cfi_startproc
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 82B0     		sub	sp, sp, #8
 371              		.cfi_def_cfa_offset 16
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 374              		.loc 1 304 0
 375 0006 0023     		mov	r3, #0
 376 0008 7B60     		str	r3, [r7, #4]
 305:.\Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 13


 306:.\Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 307:.\Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 308:.\Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 309:.\Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 310:.\Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 311:.\Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 312:.\Generated_Source\PSoC4/CyFlash.c **** 
 313:.\Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 314:.\Generated_Source\PSoC4/CyFlash.c **** 
 315:.\Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 316:.\Generated_Source\PSoC4/CyFlash.c ****     * Preserve IMO configuration that could be changed during
 317:.\Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 318:.\Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 319:.\Generated_Source\PSoC4/CyFlash.c ****     cySysFlashBackup.imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 320:.\Generated_Source\PSoC4/CyFlash.c **** 
 321:.\Generated_Source\PSoC4/CyFlash.c **** #else   /* (CY_IP_FMLT) */
 322:.\Generated_Source\PSoC4/CyFlash.c **** 
 323:.\Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 324:.\Generated_Source\PSoC4/CyFlash.c **** 
 325:.\Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 326:.\Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings backup for the PSOC4 4000 devices (the
 327:.\Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 328:.\Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 329:.\Generated_Source\PSoC4/CyFlash.c **** 
 330:.\Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 331:.\Generated_Source\PSoC4/CyFlash.c ****         * The registers listed below are modified by CySysFlashClockConfig().
 332:.\Generated_Source\PSoC4/CyFlash.c ****         *
 333:.\Generated_Source\PSoC4/CyFlash.c ****         * The registers to be saved:
 334:.\Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_CONFIG_REG - IMO enable state.
 335:.\Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_SELECT_REG     - HFCLK source, divider, pump source. Save
 336:.\Generated_Source\PSoC4/CyFlash.c ****         *                               entire register as it can be directly
 337:.\Generated_Source\PSoC4/CyFlash.c ****         *                               written on restore (no special
 338:.\Generated_Source\PSoC4/CyFlash.c ****         *                               requirements).
 339:.\Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_SELECT_REG - Save IMO frequency.
 340:.\Generated_Source\PSoC4/CyFlash.c ****         *
 341:.\Generated_Source\PSoC4/CyFlash.c ****         * The registers not to be saved:
 342:.\Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM1_REG  - No need to save. Function of frequency.
 343:.\Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 344:.\Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM3_REG  - No need to save. Function of frequency.
 345:.\Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 346:.\Generated_Source\PSoC4/CyFlash.c ****         * - REG_CPUSS_FLASH_CTL       - Flash wait cycles. Unmodified due to system
 347:.\Generated_Source\PSoC4/CyFlash.c ****         *                               clock 16 MHz limit.
 348:.\Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 349:.\Generated_Source\PSoC4/CyFlash.c **** 
 350:.\Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkSelectReg = CY_SYS_CLK_SELECT_REG;
 351:.\Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
 352:.\Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG <<
 353:.\Generated_Source\PSoC4/CyFlash.c **** 
 354:.\Generated_Source\PSoC4/CyFlash.c ****     #else
 355:.\Generated_Source\PSoC4/CyFlash.c **** 
 356:.\Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 357:.\Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Backup System Call */
 358:.\Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 359:.\Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_BACKUP) <<  CY_FLASH_PARAM_KEY_
 360:.\Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 361:.\Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 362:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 14


 363:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_BACKUP;
 364:.\Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 365:.\Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 366:.\Generated_Source\PSoC4/CyFlash.c **** 
 367:.\Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 368:.\Generated_Source\PSoC4/CyFlash.c **** 
 369:.\Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 370:.\Generated_Source\PSoC4/CyFlash.c **** 
 371:.\Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 377              		.loc 1 371 0
 378 000a 7B68     		ldr	r3, [r7, #4]
 372:.\Generated_Source\PSoC4/CyFlash.c **** }
 379              		.loc 1 372 0
 380 000c 181C     		mov	r0, r3
 381 000e BD46     		mov	sp, r7
 382 0010 02B0     		add	sp, sp, #8
 383              		@ sp needed
 384 0012 80BD     		pop	{r7, pc}
 385              		.cfi_endproc
 386              	.LFE3:
 387              		.size	CySysFlashClockBackup, .-CySysFlashClockBackup
 388              		.section	.text.CySysFlashClockConfig,"ax",%progbits
 389              		.align	2
 390              		.code	16
 391              		.thumb_func
 392              		.type	CySysFlashClockConfig, %function
 393              	CySysFlashClockConfig:
 394              	.LFB4:
 373:.\Generated_Source\PSoC4/CyFlash.c **** 
 374:.\Generated_Source\PSoC4/CyFlash.c **** 
 375:.\Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FMLT)
 376:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockConfig
 378:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/CyFlash.c **** *
 380:.\Generated_Source\PSoC4/CyFlash.c **** * Summary:
 381:.\Generated_Source\PSoC4/CyFlash.c **** *  Configures the device clocks for the flash writing.
 382:.\Generated_Source\PSoC4/CyFlash.c **** *
 383:.\Generated_Source\PSoC4/CyFlash.c **** * Parameters:
 384:.\Generated_Source\PSoC4/CyFlash.c **** *  None
 385:.\Generated_Source\PSoC4/CyFlash.c **** *
 386:.\Generated_Source\PSoC4/CyFlash.c **** * Return:
 387:.\Generated_Source\PSoC4/CyFlash.c **** *  The same as CySysFlashWriteRow().
 388:.\Generated_Source\PSoC4/CyFlash.c **** *
 389:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 390:.\Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockConfig(void)
 391:.\Generated_Source\PSoC4/CyFlash.c **** {
 395              		.loc 1 391 0
 396              		.cfi_startproc
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 82B0     		sub	sp, sp, #8
 402              		.cfi_def_cfa_offset 16
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 15


 392:.\Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 405              		.loc 1 392 0
 406 0006 0023     		mov	r3, #0
 407 0008 7B60     		str	r3, [r7, #4]
 393:.\Generated_Source\PSoC4/CyFlash.c **** 
 394:.\Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 395:.\Generated_Source\PSoC4/CyFlash.c ****     * The FM-Lite IP uses the IMO at 48MHz for the pump clock and SPC timer
 396:.\Generated_Source\PSoC4/CyFlash.c ****     * clock. The PUMP_SEL and HF clock must be set to IMO before calling Flash
 397:.\Generated_Source\PSoC4/CyFlash.c ****     * write or erase operation.
 398:.\Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 399:.\Generated_Source\PSoC4/CyFlash.c **** #if (CY_PSOC4_4000)
 400:.\Generated_Source\PSoC4/CyFlash.c **** 
 401:.\Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 402:.\Generated_Source\PSoC4/CyFlash.c ****     * Perform firmware clock settings setup for the PSOC4 4000 devices (the
 403:.\Generated_Source\PSoC4/CyFlash.c ****     * corresponding system call is not reliable):
 404:.\Generated_Source\PSoC4/CyFlash.c ****     * - The IMO frequency should be 48 MHz
 405:.\Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be source for the HFCLK
 406:.\Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be the source for the charge pump clock
 407:.\Generated_Source\PSoC4/CyFlash.c ****     *
 408:.\Generated_Source\PSoC4/CyFlash.c ****     * Note The structure members used below are initialized by
 409:.\Generated_Source\PSoC4/CyFlash.c ****     * the CySysFlashClockBackup() function.
 410:.\Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 411:.\Generated_Source\PSoC4/CyFlash.c ****     if ((cySysFlashBackup.clkImoFreq != 48u) ||
 412:.\Generated_Source\PSoC4/CyFlash.c ****         ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IM
 413:.\Generated_Source\PSoC4/CyFlash.c ****         (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_P
 414:.\Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 415:.\Generated_Source\PSoC4/CyFlash.c ****     {
 416:.\Generated_Source\PSoC4/CyFlash.c ****         /***********************************************************************
 417:.\Generated_Source\PSoC4/CyFlash.c ****          Set HFCLK divider to divide-by-4 to ensure that System clock frequency
 418:.\Generated_Source\PSoC4/CyFlash.c ****         * is within the valid limit (16 MHz for the PSoC4 4000).
 419:.\Generated_Source\PSoC4/CyFlash.c ****         ***********************************************************************/
 420:.\Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 421:.\Generated_Source\PSoC4/CyFlash.c **** 
 422:.\Generated_Source\PSoC4/CyFlash.c ****         /* The IMO frequency should be 48 MHz */
 423:.\Generated_Source\PSoC4/CyFlash.c ****         if (cySysFlashBackup.clkImoFreq != 48u)
 424:.\Generated_Source\PSoC4/CyFlash.c ****         {
 425:.\Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteImoFreq(48u);
 426:.\Generated_Source\PSoC4/CyFlash.c ****         }
 427:.\Generated_Source\PSoC4/CyFlash.c ****         CySysClkImoStart();
 428:.\Generated_Source\PSoC4/CyFlash.c **** 
 429:.\Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be source for the HFCLK */
 430:.\Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 431:.\Generated_Source\PSoC4/CyFlash.c **** 
 432:.\Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be the source for the charge pump clock */
 433:.\Generated_Source\PSoC4/CyFlash.c ****         CY_SYS_CLK_SELECT_REG =  (CY_SYS_CLK_SELECT_REG &
 434:.\Generated_Source\PSoC4/CyFlash.c ****             ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT)
 435:.\Generated_Source\PSoC4/CyFlash.c ****             ((uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT));
 436:.\Generated_Source\PSoC4/CyFlash.c ****     }
 437:.\Generated_Source\PSoC4/CyFlash.c **** 
 438:.\Generated_Source\PSoC4/CyFlash.c **** #else
 439:.\Generated_Source\PSoC4/CyFlash.c **** 
 440:.\Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_SPCIF_SYNCHRONOUS)
 441:.\Generated_Source\PSoC4/CyFlash.c ****         /* FM-Lite Clock Configuration */
 442:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG =
 443:.\Generated_Source\PSoC4/CyFlash.c ****             (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_CONFIG) <<  CY_FLASH_PARAM_KEY_TWO_
 444:.\Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_KEY_ONE);
 445:.\Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_CONFIG;
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 16


 446:.\Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 447:.\Generated_Source\PSoC4/CyFlash.c ****     #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 448:.\Generated_Source\PSoC4/CyFlash.c **** 
 449:.\Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_PSOC4_4000) */
 450:.\Generated_Source\PSoC4/CyFlash.c **** 
 451:.\Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 408              		.loc 1 451 0
 409 000a 7B68     		ldr	r3, [r7, #4]
 452:.\Generated_Source\PSoC4/CyFlash.c **** }
 410              		.loc 1 452 0
 411 000c 181C     		mov	r0, r3
 412 000e BD46     		mov	sp, r7
 413 0010 02B0     		add	sp, sp, #8
 414              		@ sp needed
 415 0012 80BD     		pop	{r7, pc}
 416              		.cfi_endproc
 417              	.LFE4:
 418              		.size	CySysFlashClockConfig, .-CySysFlashClockConfig
 419              		.section	.text.CySysFlashClockRestore,"ax",%progbits
 420              		.align	2
 421              		.code	16
 422              		.thumb_func
 423              		.type	CySysFlashClockRestore, %function
 424              	CySysFlashClockRestore:
 425              	.LFB5:
 453:.\Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FMLT) */
 454:.\Generated_Source\PSoC4/CyFlash.c **** 
 455:.\Generated_Source\PSoC4/CyFlash.c **** 
 456:.\Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockRestore
 458:.\Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/CyFlash.c **** *
 460:.\Generated_Source\PSoC4/CyFlash.c **** * Summary:
 461:.\Generated_Source\PSoC4/CyFlash.c **** *  Restores the device clock configuration.
 462:.\Generated_Source\PSoC4/CyFlash.c **** *
 463:.\Generated_Source\PSoC4/CyFlash.c **** * Parameters:
 464:.\Generated_Source\PSoC4/CyFlash.c **** *  None
 465:.\Generated_Source\PSoC4/CyFlash.c **** *
 466:.\Generated_Source\PSoC4/CyFlash.c **** * Return:
 467:.\Generated_Source\PSoC4/CyFlash.c **** *  The same as CySysFlashWriteRow().
 468:.\Generated_Source\PSoC4/CyFlash.c **** *
 469:.\Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 470:.\Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void)
 471:.\Generated_Source\PSoC4/CyFlash.c **** {
 426              		.loc 1 471 0
 427              		.cfi_startproc
 428 0000 80B5     		push	{r7, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 82B0     		sub	sp, sp, #8
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 472:.\Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 436              		.loc 1 472 0
 437 0006 0023     		mov	r3, #0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 17


 438 0008 7B60     		str	r3, [r7, #4]
 473:.\Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 474:.\Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 475:.\Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 476:.\Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 477:.\Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 478:.\Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 479:.\Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 480:.\Generated_Source\PSoC4/CyFlash.c **** 
 481:.\Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 482:.\Generated_Source\PSoC4/CyFlash.c **** 
 483:.\Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 484:.\Generated_Source\PSoC4/CyFlash.c ****     * Restore IMO configuration that could be changed during
 485:.\Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 486:.\Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 487:.\Generated_Source\PSoC4/CyFlash.c ****     CY_SYS_CLK_IMO_CONFIG_REG = cySysFlashBackup.imoConfigReg;
 488:.\Generated_Source\PSoC4/CyFlash.c **** 
 489:.\Generated_Source\PSoC4/CyFlash.c **** #else
 490:.\Generated_Source\PSoC4/CyFlash.c **** 
 491:.\Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 492:.\Generated_Source\PSoC4/CyFlash.c **** 
 493:.\Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 494:.\Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings restore for the PSOC4 4000 devices (the
 495:.\Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 496:.\Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 497:.\Generated_Source\PSoC4/CyFlash.c **** 
 498:.\Generated_Source\PSoC4/CyFlash.c ****         /* Restore clock settings */
 499:.\Generated_Source\PSoC4/CyFlash.c ****         if ((cySysFlashBackup.clkImoFreq != 48u) ||
 500:.\Generated_Source\PSoC4/CyFlash.c ****             ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCL
 501:.\Generated_Source\PSoC4/CyFlash.c ****             (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELE
 502:.\Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 503:.\Generated_Source\PSoC4/CyFlash.c ****         {
 504:.\Generated_Source\PSoC4/CyFlash.c ****             /* Restore IMO frequency if needed */
 505:.\Generated_Source\PSoC4/CyFlash.c ****             if (cySysFlashBackup.clkImoFreq != 48u)
 506:.\Generated_Source\PSoC4/CyFlash.c ****             {
 507:.\Generated_Source\PSoC4/CyFlash.c ****                 CySysClkWriteImoFreq(cySysFlashBackup.clkImoFreq);
 508:.\Generated_Source\PSoC4/CyFlash.c ****             }
 509:.\Generated_Source\PSoC4/CyFlash.c **** 
 510:.\Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK clock source */
 511:.\Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteHfclkDirect(cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_M
 512:.\Generated_Source\PSoC4/CyFlash.c **** 
 513:.\Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK divider and source for pump  */
 514:.\Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG = cySysFlashBackup.clkSelectReg;
 515:.\Generated_Source\PSoC4/CyFlash.c **** 
 516:.\Generated_Source\PSoC4/CyFlash.c ****             /* Stop IMO if needed */
 517:.\Generated_Source\PSoC4/CyFlash.c ****             if (0u == cySysFlashBackup.clkImoEna)
 518:.\Generated_Source\PSoC4/CyFlash.c ****             {
 519:.\Generated_Source\PSoC4/CyFlash.c ****                 CySysClkImoStop();
 520:.\Generated_Source\PSoC4/CyFlash.c ****             }
 521:.\Generated_Source\PSoC4/CyFlash.c ****         }
 522:.\Generated_Source\PSoC4/CyFlash.c **** 
 523:.\Generated_Source\PSoC4/CyFlash.c ****     #else
 524:.\Generated_Source\PSoC4/CyFlash.c **** 
 525:.\Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 526:.\Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Restore */
 527:.\Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 528:.\Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 18


 529:.\Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 530:.\Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 531:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 532:.\Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 533:.\Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 534:.\Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 535:.\Generated_Source\PSoC4/CyFlash.c **** 
 536:.\Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 537:.\Generated_Source\PSoC4/CyFlash.c **** 
 538:.\Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 539:.\Generated_Source\PSoC4/CyFlash.c **** 
 540:.\Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 439              		.loc 1 540 0
 440 000a 7B68     		ldr	r3, [r7, #4]
 541:.\Generated_Source\PSoC4/CyFlash.c **** }
 441              		.loc 1 541 0
 442 000c 181C     		mov	r0, r3
 443 000e BD46     		mov	sp, r7
 444 0010 02B0     		add	sp, sp, #8
 445              		@ sp needed
 446 0012 80BD     		pop	{r7, pc}
 447              		.cfi_endproc
 448              	.LFE5:
 449              		.size	CySysFlashClockRestore, .-CySysFlashClockRestore
 450              		.text
 451              	.Letext0:
 452              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 453              		.section	.debug_info,"",%progbits
 454              	.Ldebug_info0:
 455 0000 FF010000 		.4byte	0x1ff
 456 0004 0400     		.2byte	0x4
 457 0006 00000000 		.4byte	.Ldebug_abbrev0
 458 000a 04       		.byte	0x4
 459 000b 01       		.uleb128 0x1
 460 000c 6A000000 		.4byte	.LASF27
 461 0010 01       		.byte	0x1
 462 0011 2E000000 		.4byte	.LASF28
 463 0015 92010000 		.4byte	.LASF29
 464 0019 00000000 		.4byte	.Ldebug_ranges0+0
 465 001d 00000000 		.4byte	0
 466 0021 00000000 		.4byte	.Ldebug_line0
 467 0025 02       		.uleb128 0x2
 468 0026 01       		.byte	0x1
 469 0027 06       		.byte	0x6
 470 0028 2C020000 		.4byte	.LASF0
 471 002c 02       		.uleb128 0x2
 472 002d 01       		.byte	0x1
 473 002e 08       		.byte	0x8
 474 002f E6000000 		.4byte	.LASF1
 475 0033 02       		.uleb128 0x2
 476 0034 02       		.byte	0x2
 477 0035 05       		.byte	0x5
 478 0036 26010000 		.4byte	.LASF2
 479 003a 02       		.uleb128 0x2
 480 003b 02       		.byte	0x2
 481 003c 07       		.byte	0x7
 482 003d 51000000 		.4byte	.LASF3
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 19


 483 0041 02       		.uleb128 0x2
 484 0042 04       		.byte	0x4
 485 0043 05       		.byte	0x5
 486 0044 23020000 		.4byte	.LASF4
 487 0048 02       		.uleb128 0x2
 488 0049 04       		.byte	0x4
 489 004a 07       		.byte	0x7
 490 004b 07010000 		.4byte	.LASF5
 491 004f 02       		.uleb128 0x2
 492 0050 08       		.byte	0x8
 493 0051 05       		.byte	0x5
 494 0052 7A010000 		.4byte	.LASF6
 495 0056 02       		.uleb128 0x2
 496 0057 08       		.byte	0x8
 497 0058 07       		.byte	0x7
 498 0059 4B010000 		.4byte	.LASF7
 499 005d 03       		.uleb128 0x3
 500 005e 04       		.byte	0x4
 501 005f 05       		.byte	0x5
 502 0060 696E7400 		.ascii	"int\000"
 503 0064 02       		.uleb128 0x2
 504 0065 04       		.byte	0x4
 505 0066 07       		.byte	0x7
 506 0067 3E010000 		.4byte	.LASF8
 507 006b 04       		.uleb128 0x4
 508 006c 19010000 		.4byte	.LASF9
 509 0070 02       		.byte	0x2
 510 0071 B3       		.byte	0xb3
 511 0072 2C000000 		.4byte	0x2c
 512 0076 04       		.uleb128 0x4
 513 0077 30010000 		.4byte	.LASF10
 514 007b 02       		.byte	0x2
 515 007c B4       		.byte	0xb4
 516 007d 3A000000 		.4byte	0x3a
 517 0081 04       		.uleb128 0x4
 518 0082 37010000 		.4byte	.LASF11
 519 0086 02       		.byte	0x2
 520 0087 B5       		.byte	0xb5
 521 0088 48000000 		.4byte	0x48
 522 008c 02       		.uleb128 0x2
 523 008d 04       		.byte	0x4
 524 008e 04       		.byte	0x4
 525 008f 64000000 		.4byte	.LASF12
 526 0093 02       		.uleb128 0x2
 527 0094 08       		.byte	0x8
 528 0095 04       		.byte	0x4
 529 0096 1F010000 		.4byte	.LASF13
 530 009a 02       		.uleb128 0x2
 531 009b 01       		.byte	0x1
 532 009c 08       		.byte	0x8
 533 009d 88010000 		.4byte	.LASF14
 534 00a1 05       		.uleb128 0x5
 535 00a2 00000000 		.4byte	.LASF15
 536 00a6 02       		.byte	0x2
 537 00a7 5501     		.2byte	0x155
 538 00a9 48000000 		.4byte	0x48
 539 00ad 05       		.uleb128 0x5
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 20


 540 00ae 09000000 		.4byte	.LASF16
 541 00b2 02       		.byte	0x2
 542 00b3 5F01     		.2byte	0x15f
 543 00b5 B9000000 		.4byte	0xb9
 544 00b9 06       		.uleb128 0x6
 545 00ba 81000000 		.4byte	0x81
 546 00be 02       		.uleb128 0x2
 547 00bf 04       		.byte	0x4
 548 00c0 07       		.byte	0x7
 549 00c1 71010000 		.4byte	.LASF17
 550 00c5 07       		.uleb128 0x7
 551 00c6 38020000 		.4byte	.LASF30
 552 00ca 01       		.byte	0x1
 553 00cb 5C       		.byte	0x5c
 554 00cc 81000000 		.4byte	0x81
 555 00d0 00000000 		.4byte	.LFB1
 556 00d4 78010000 		.4byte	.LFE1-.LFB1
 557 00d8 01       		.uleb128 0x1
 558 00d9 9C       		.byte	0x9c
 559 00da 36010000 		.4byte	0x136
 560 00de 08       		.uleb128 0x8
 561 00df 18000000 		.4byte	.LASF18
 562 00e3 01       		.byte	0x1
 563 00e4 5C       		.byte	0x5c
 564 00e5 81000000 		.4byte	0x81
 565 00e9 03       		.uleb128 0x3
 566 00ea 91       		.byte	0x91
 567 00eb D47E     		.sleb128 -172
 568 00ed 08       		.uleb128 0x8
 569 00ee F4000000 		.4byte	.LASF19
 570 00f2 01       		.byte	0x1
 571 00f3 5C       		.byte	0x5c
 572 00f4 36010000 		.4byte	0x136
 573 00f8 03       		.uleb128 0x3
 574 00f9 91       		.byte	0x91
 575 00fa D07E     		.sleb128 -176
 576 00fc 09       		.uleb128 0x9
 577 00fd 0F000000 		.4byte	.LASF20
 578 0101 01       		.byte	0x1
 579 0102 5E       		.byte	0x5e
 580 0103 B9000000 		.4byte	0xb9
 581 0107 02       		.uleb128 0x2
 582 0108 91       		.byte	0x91
 583 0109 68       		.sleb128 -24
 584 010a 09       		.uleb128 0x9
 585 010b 1F000000 		.4byte	.LASF21
 586 010f 01       		.byte	0x1
 587 0110 5F       		.byte	0x5f
 588 0111 B9000000 		.4byte	0xb9
 589 0115 02       		.uleb128 0x2
 590 0116 91       		.byte	0x91
 591 0117 64       		.sleb128 -28
 592 0118 09       		.uleb128 0x9
 593 0119 FC000000 		.4byte	.LASF22
 594 011d 01       		.byte	0x1
 595 011e 60       		.byte	0x60
 596 011f 51010000 		.4byte	0x151
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 21


 597 0123 03       		.uleb128 0x3
 598 0124 91       		.byte	0x91
 599 0125 DC7E     		.sleb128 -164
 600 0127 09       		.uleb128 0x9
 601 0128 62010000 		.4byte	.LASF23
 602 012c 01       		.byte	0x1
 603 012d 61       		.byte	0x61
 604 012e 6B000000 		.4byte	0x6b
 605 0132 02       		.uleb128 0x2
 606 0133 91       		.byte	0x91
 607 0134 6F       		.sleb128 -17
 608 0135 00       		.byte	0
 609 0136 0A       		.uleb128 0xa
 610 0137 04       		.byte	0x4
 611 0138 3C010000 		.4byte	0x13c
 612 013c 0B       		.uleb128 0xb
 613 013d 6B000000 		.4byte	0x6b
 614 0141 0C       		.uleb128 0xc
 615 0142 81000000 		.4byte	0x81
 616 0146 51010000 		.4byte	0x151
 617 014a 0D       		.uleb128 0xd
 618 014b BE000000 		.4byte	0xbe
 619 014f 21       		.byte	0x21
 620 0150 00       		.byte	0
 621 0151 06       		.uleb128 0x6
 622 0152 41010000 		.4byte	0x141
 623 0156 0E       		.uleb128 0xe
 624 0157 4B020000 		.4byte	.LASF31
 625 015b 01       		.byte	0x1
 626 015c F5       		.byte	0xf5
 627 015d 00000000 		.4byte	.LFB2
 628 0161 74000000 		.4byte	.LFE2-.LFB2
 629 0165 01       		.uleb128 0x1
 630 0166 9C       		.byte	0x9c
 631 0167 88010000 		.4byte	0x188
 632 016b 08       		.uleb128 0x8
 633 016c 8D010000 		.4byte	.LASF24
 634 0170 01       		.byte	0x1
 635 0171 F5       		.byte	0xf5
 636 0172 81000000 		.4byte	0x81
 637 0176 02       		.uleb128 0x2
 638 0177 91       		.byte	0x91
 639 0178 64       		.sleb128 -28
 640 0179 09       		.uleb128 0x9
 641 017a 62010000 		.4byte	.LASF23
 642 017e 01       		.byte	0x1
 643 017f F7       		.byte	0xf7
 644 0180 6B000000 		.4byte	0x6b
 645 0184 02       		.uleb128 0x2
 646 0185 91       		.byte	0x91
 647 0186 6F       		.sleb128 -17
 648 0187 00       		.byte	0
 649 0188 0F       		.uleb128 0xf
 650 0189 0D020000 		.4byte	.LASF25
 651 018d 01       		.byte	0x1
 652 018e 2E01     		.2byte	0x12e
 653 0190 A1000000 		.4byte	0xa1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 22


 654 0194 00000000 		.4byte	.LFB3
 655 0198 14000000 		.4byte	.LFE3-.LFB3
 656 019c 01       		.uleb128 0x1
 657 019d 9C       		.byte	0x9c
 658 019e B2010000 		.4byte	0x1b2
 659 01a2 10       		.uleb128 0x10
 660 01a3 0F000000 		.4byte	.LASF20
 661 01a7 01       		.byte	0x1
 662 01a8 3001     		.2byte	0x130
 663 01aa A1000000 		.4byte	0xa1
 664 01ae 02       		.uleb128 0x2
 665 01af 91       		.byte	0x91
 666 01b0 74       		.sleb128 -12
 667 01b1 00       		.byte	0
 668 01b2 0F       		.uleb128 0xf
 669 01b3 E0010000 		.4byte	.LASF26
 670 01b7 01       		.byte	0x1
 671 01b8 8601     		.2byte	0x186
 672 01ba A1000000 		.4byte	0xa1
 673 01be 00000000 		.4byte	.LFB4
 674 01c2 14000000 		.4byte	.LFE4-.LFB4
 675 01c6 01       		.uleb128 0x1
 676 01c7 9C       		.byte	0x9c
 677 01c8 DC010000 		.4byte	0x1dc
 678 01cc 10       		.uleb128 0x10
 679 01cd 0F000000 		.4byte	.LASF20
 680 01d1 01       		.byte	0x1
 681 01d2 8801     		.2byte	0x188
 682 01d4 A1000000 		.4byte	0xa1
 683 01d8 02       		.uleb128 0x2
 684 01d9 91       		.byte	0x91
 685 01da 74       		.sleb128 -12
 686 01db 00       		.byte	0
 687 01dc 11       		.uleb128 0x11
 688 01dd F6010000 		.4byte	.LASF32
 689 01e1 01       		.byte	0x1
 690 01e2 D601     		.2byte	0x1d6
 691 01e4 A1000000 		.4byte	0xa1
 692 01e8 00000000 		.4byte	.LFB5
 693 01ec 14000000 		.4byte	.LFE5-.LFB5
 694 01f0 01       		.uleb128 0x1
 695 01f1 9C       		.byte	0x9c
 696 01f2 10       		.uleb128 0x10
 697 01f3 0F000000 		.4byte	.LASF20
 698 01f7 01       		.byte	0x1
 699 01f8 D801     		.2byte	0x1d8
 700 01fa A1000000 		.4byte	0xa1
 701 01fe 02       		.uleb128 0x2
 702 01ff 91       		.byte	0x91
 703 0200 74       		.sleb128 -12
 704 0201 00       		.byte	0
 705 0202 00       		.byte	0
 706              		.section	.debug_abbrev,"",%progbits
 707              	.Ldebug_abbrev0:
 708 0000 01       		.uleb128 0x1
 709 0001 11       		.uleb128 0x11
 710 0002 01       		.byte	0x1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 23


 711 0003 25       		.uleb128 0x25
 712 0004 0E       		.uleb128 0xe
 713 0005 13       		.uleb128 0x13
 714 0006 0B       		.uleb128 0xb
 715 0007 03       		.uleb128 0x3
 716 0008 0E       		.uleb128 0xe
 717 0009 1B       		.uleb128 0x1b
 718 000a 0E       		.uleb128 0xe
 719 000b 55       		.uleb128 0x55
 720 000c 17       		.uleb128 0x17
 721 000d 11       		.uleb128 0x11
 722 000e 01       		.uleb128 0x1
 723 000f 10       		.uleb128 0x10
 724 0010 17       		.uleb128 0x17
 725 0011 00       		.byte	0
 726 0012 00       		.byte	0
 727 0013 02       		.uleb128 0x2
 728 0014 24       		.uleb128 0x24
 729 0015 00       		.byte	0
 730 0016 0B       		.uleb128 0xb
 731 0017 0B       		.uleb128 0xb
 732 0018 3E       		.uleb128 0x3e
 733 0019 0B       		.uleb128 0xb
 734 001a 03       		.uleb128 0x3
 735 001b 0E       		.uleb128 0xe
 736 001c 00       		.byte	0
 737 001d 00       		.byte	0
 738 001e 03       		.uleb128 0x3
 739 001f 24       		.uleb128 0x24
 740 0020 00       		.byte	0
 741 0021 0B       		.uleb128 0xb
 742 0022 0B       		.uleb128 0xb
 743 0023 3E       		.uleb128 0x3e
 744 0024 0B       		.uleb128 0xb
 745 0025 03       		.uleb128 0x3
 746 0026 08       		.uleb128 0x8
 747 0027 00       		.byte	0
 748 0028 00       		.byte	0
 749 0029 04       		.uleb128 0x4
 750 002a 16       		.uleb128 0x16
 751 002b 00       		.byte	0
 752 002c 03       		.uleb128 0x3
 753 002d 0E       		.uleb128 0xe
 754 002e 3A       		.uleb128 0x3a
 755 002f 0B       		.uleb128 0xb
 756 0030 3B       		.uleb128 0x3b
 757 0031 0B       		.uleb128 0xb
 758 0032 49       		.uleb128 0x49
 759 0033 13       		.uleb128 0x13
 760 0034 00       		.byte	0
 761 0035 00       		.byte	0
 762 0036 05       		.uleb128 0x5
 763 0037 16       		.uleb128 0x16
 764 0038 00       		.byte	0
 765 0039 03       		.uleb128 0x3
 766 003a 0E       		.uleb128 0xe
 767 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 24


 768 003c 0B       		.uleb128 0xb
 769 003d 3B       		.uleb128 0x3b
 770 003e 05       		.uleb128 0x5
 771 003f 49       		.uleb128 0x49
 772 0040 13       		.uleb128 0x13
 773 0041 00       		.byte	0
 774 0042 00       		.byte	0
 775 0043 06       		.uleb128 0x6
 776 0044 35       		.uleb128 0x35
 777 0045 00       		.byte	0
 778 0046 49       		.uleb128 0x49
 779 0047 13       		.uleb128 0x13
 780 0048 00       		.byte	0
 781 0049 00       		.byte	0
 782 004a 07       		.uleb128 0x7
 783 004b 2E       		.uleb128 0x2e
 784 004c 01       		.byte	0x1
 785 004d 3F       		.uleb128 0x3f
 786 004e 19       		.uleb128 0x19
 787 004f 03       		.uleb128 0x3
 788 0050 0E       		.uleb128 0xe
 789 0051 3A       		.uleb128 0x3a
 790 0052 0B       		.uleb128 0xb
 791 0053 3B       		.uleb128 0x3b
 792 0054 0B       		.uleb128 0xb
 793 0055 27       		.uleb128 0x27
 794 0056 19       		.uleb128 0x19
 795 0057 49       		.uleb128 0x49
 796 0058 13       		.uleb128 0x13
 797 0059 11       		.uleb128 0x11
 798 005a 01       		.uleb128 0x1
 799 005b 12       		.uleb128 0x12
 800 005c 06       		.uleb128 0x6
 801 005d 40       		.uleb128 0x40
 802 005e 18       		.uleb128 0x18
 803 005f 9642     		.uleb128 0x2116
 804 0061 19       		.uleb128 0x19
 805 0062 01       		.uleb128 0x1
 806 0063 13       		.uleb128 0x13
 807 0064 00       		.byte	0
 808 0065 00       		.byte	0
 809 0066 08       		.uleb128 0x8
 810 0067 05       		.uleb128 0x5
 811 0068 00       		.byte	0
 812 0069 03       		.uleb128 0x3
 813 006a 0E       		.uleb128 0xe
 814 006b 3A       		.uleb128 0x3a
 815 006c 0B       		.uleb128 0xb
 816 006d 3B       		.uleb128 0x3b
 817 006e 0B       		.uleb128 0xb
 818 006f 49       		.uleb128 0x49
 819 0070 13       		.uleb128 0x13
 820 0071 02       		.uleb128 0x2
 821 0072 18       		.uleb128 0x18
 822 0073 00       		.byte	0
 823 0074 00       		.byte	0
 824 0075 09       		.uleb128 0x9
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 25


 825 0076 34       		.uleb128 0x34
 826 0077 00       		.byte	0
 827 0078 03       		.uleb128 0x3
 828 0079 0E       		.uleb128 0xe
 829 007a 3A       		.uleb128 0x3a
 830 007b 0B       		.uleb128 0xb
 831 007c 3B       		.uleb128 0x3b
 832 007d 0B       		.uleb128 0xb
 833 007e 49       		.uleb128 0x49
 834 007f 13       		.uleb128 0x13
 835 0080 02       		.uleb128 0x2
 836 0081 18       		.uleb128 0x18
 837 0082 00       		.byte	0
 838 0083 00       		.byte	0
 839 0084 0A       		.uleb128 0xa
 840 0085 0F       		.uleb128 0xf
 841 0086 00       		.byte	0
 842 0087 0B       		.uleb128 0xb
 843 0088 0B       		.uleb128 0xb
 844 0089 49       		.uleb128 0x49
 845 008a 13       		.uleb128 0x13
 846 008b 00       		.byte	0
 847 008c 00       		.byte	0
 848 008d 0B       		.uleb128 0xb
 849 008e 26       		.uleb128 0x26
 850 008f 00       		.byte	0
 851 0090 49       		.uleb128 0x49
 852 0091 13       		.uleb128 0x13
 853 0092 00       		.byte	0
 854 0093 00       		.byte	0
 855 0094 0C       		.uleb128 0xc
 856 0095 01       		.uleb128 0x1
 857 0096 01       		.byte	0x1
 858 0097 49       		.uleb128 0x49
 859 0098 13       		.uleb128 0x13
 860 0099 01       		.uleb128 0x1
 861 009a 13       		.uleb128 0x13
 862 009b 00       		.byte	0
 863 009c 00       		.byte	0
 864 009d 0D       		.uleb128 0xd
 865 009e 21       		.uleb128 0x21
 866 009f 00       		.byte	0
 867 00a0 49       		.uleb128 0x49
 868 00a1 13       		.uleb128 0x13
 869 00a2 2F       		.uleb128 0x2f
 870 00a3 0B       		.uleb128 0xb
 871 00a4 00       		.byte	0
 872 00a5 00       		.byte	0
 873 00a6 0E       		.uleb128 0xe
 874 00a7 2E       		.uleb128 0x2e
 875 00a8 01       		.byte	0x1
 876 00a9 3F       		.uleb128 0x3f
 877 00aa 19       		.uleb128 0x19
 878 00ab 03       		.uleb128 0x3
 879 00ac 0E       		.uleb128 0xe
 880 00ad 3A       		.uleb128 0x3a
 881 00ae 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 26


 882 00af 3B       		.uleb128 0x3b
 883 00b0 0B       		.uleb128 0xb
 884 00b1 27       		.uleb128 0x27
 885 00b2 19       		.uleb128 0x19
 886 00b3 11       		.uleb128 0x11
 887 00b4 01       		.uleb128 0x1
 888 00b5 12       		.uleb128 0x12
 889 00b6 06       		.uleb128 0x6
 890 00b7 40       		.uleb128 0x40
 891 00b8 18       		.uleb128 0x18
 892 00b9 9642     		.uleb128 0x2116
 893 00bb 19       		.uleb128 0x19
 894 00bc 01       		.uleb128 0x1
 895 00bd 13       		.uleb128 0x13
 896 00be 00       		.byte	0
 897 00bf 00       		.byte	0
 898 00c0 0F       		.uleb128 0xf
 899 00c1 2E       		.uleb128 0x2e
 900 00c2 01       		.byte	0x1
 901 00c3 03       		.uleb128 0x3
 902 00c4 0E       		.uleb128 0xe
 903 00c5 3A       		.uleb128 0x3a
 904 00c6 0B       		.uleb128 0xb
 905 00c7 3B       		.uleb128 0x3b
 906 00c8 05       		.uleb128 0x5
 907 00c9 27       		.uleb128 0x27
 908 00ca 19       		.uleb128 0x19
 909 00cb 49       		.uleb128 0x49
 910 00cc 13       		.uleb128 0x13
 911 00cd 11       		.uleb128 0x11
 912 00ce 01       		.uleb128 0x1
 913 00cf 12       		.uleb128 0x12
 914 00d0 06       		.uleb128 0x6
 915 00d1 40       		.uleb128 0x40
 916 00d2 18       		.uleb128 0x18
 917 00d3 9742     		.uleb128 0x2117
 918 00d5 19       		.uleb128 0x19
 919 00d6 01       		.uleb128 0x1
 920 00d7 13       		.uleb128 0x13
 921 00d8 00       		.byte	0
 922 00d9 00       		.byte	0
 923 00da 10       		.uleb128 0x10
 924 00db 34       		.uleb128 0x34
 925 00dc 00       		.byte	0
 926 00dd 03       		.uleb128 0x3
 927 00de 0E       		.uleb128 0xe
 928 00df 3A       		.uleb128 0x3a
 929 00e0 0B       		.uleb128 0xb
 930 00e1 3B       		.uleb128 0x3b
 931 00e2 05       		.uleb128 0x5
 932 00e3 49       		.uleb128 0x49
 933 00e4 13       		.uleb128 0x13
 934 00e5 02       		.uleb128 0x2
 935 00e6 18       		.uleb128 0x18
 936 00e7 00       		.byte	0
 937 00e8 00       		.byte	0
 938 00e9 11       		.uleb128 0x11
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 27


 939 00ea 2E       		.uleb128 0x2e
 940 00eb 01       		.byte	0x1
 941 00ec 03       		.uleb128 0x3
 942 00ed 0E       		.uleb128 0xe
 943 00ee 3A       		.uleb128 0x3a
 944 00ef 0B       		.uleb128 0xb
 945 00f0 3B       		.uleb128 0x3b
 946 00f1 05       		.uleb128 0x5
 947 00f2 27       		.uleb128 0x27
 948 00f3 19       		.uleb128 0x19
 949 00f4 49       		.uleb128 0x49
 950 00f5 13       		.uleb128 0x13
 951 00f6 11       		.uleb128 0x11
 952 00f7 01       		.uleb128 0x1
 953 00f8 12       		.uleb128 0x12
 954 00f9 06       		.uleb128 0x6
 955 00fa 40       		.uleb128 0x40
 956 00fb 18       		.uleb128 0x18
 957 00fc 9742     		.uleb128 0x2117
 958 00fe 19       		.uleb128 0x19
 959 00ff 00       		.byte	0
 960 0100 00       		.byte	0
 961 0101 00       		.byte	0
 962              		.section	.debug_aranges,"",%progbits
 963 0000 3C000000 		.4byte	0x3c
 964 0004 0200     		.2byte	0x2
 965 0006 00000000 		.4byte	.Ldebug_info0
 966 000a 04       		.byte	0x4
 967 000b 00       		.byte	0
 968 000c 0000     		.2byte	0
 969 000e 0000     		.2byte	0
 970 0010 00000000 		.4byte	.LFB1
 971 0014 78010000 		.4byte	.LFE1-.LFB1
 972 0018 00000000 		.4byte	.LFB2
 973 001c 74000000 		.4byte	.LFE2-.LFB2
 974 0020 00000000 		.4byte	.LFB3
 975 0024 14000000 		.4byte	.LFE3-.LFB3
 976 0028 00000000 		.4byte	.LFB4
 977 002c 14000000 		.4byte	.LFE4-.LFB4
 978 0030 00000000 		.4byte	.LFB5
 979 0034 14000000 		.4byte	.LFE5-.LFB5
 980 0038 00000000 		.4byte	0
 981 003c 00000000 		.4byte	0
 982              		.section	.debug_ranges,"",%progbits
 983              	.Ldebug_ranges0:
 984 0000 00000000 		.4byte	.LFB1
 985 0004 78010000 		.4byte	.LFE1
 986 0008 00000000 		.4byte	.LFB2
 987 000c 74000000 		.4byte	.LFE2
 988 0010 00000000 		.4byte	.LFB3
 989 0014 14000000 		.4byte	.LFE3
 990 0018 00000000 		.4byte	.LFB4
 991 001c 14000000 		.4byte	.LFE4
 992 0020 00000000 		.4byte	.LFB5
 993 0024 14000000 		.4byte	.LFE5
 994 0028 00000000 		.4byte	0
 995 002c 00000000 		.4byte	0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 28


 996              		.section	.debug_line,"",%progbits
 997              	.Ldebug_line0:
 998 0000 25010000 		.section	.debug_str,"MS",%progbits,1
 998      02004600 
 998      00000201 
 998      FB0E0D00 
 998      01010101 
 999              	.LASF15:
 1000 0000 63797374 		.ascii	"cystatus\000"
 1000      61747573 
 1000      00
 1001              	.LASF16:
 1002 0009 72656733 		.ascii	"reg32\000"
 1002      3200
 1003              	.LASF20:
 1004 000f 72657456 		.ascii	"retValue\000"
 1004      616C7565 
 1004      00
 1005              	.LASF18:
 1006 0018 726F774E 		.ascii	"rowNum\000"
 1006      756D00
 1007              	.LASF21:
 1008 001f 636C6B43 		.ascii	"clkCnfRetValue\000"
 1008      6E665265 
 1008      7456616C 
 1008      756500
 1009              	.LASF28:
 1010 002e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyFlash.c\000"
 1010      6E657261 
 1010      7465645F 
 1010      536F7572 
 1010      63655C50 
 1011              	.LASF3:
 1012 0051 73686F72 		.ascii	"short unsigned int\000"
 1012      7420756E 
 1012      7369676E 
 1012      65642069 
 1012      6E7400
 1013              	.LASF12:
 1014 0064 666C6F61 		.ascii	"float\000"
 1014      7400
 1015              	.LASF27:
 1016 006a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1016      4320342E 
 1016      382E3420 
 1016      32303134 
 1016      30353236 
 1017 009d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1017      20726576 
 1017      6973696F 
 1017      6E203231 
 1017      31333538 
 1018 00d0 30202D66 		.ascii	"0 -ffunction-sections\000"
 1018      66756E63 
 1018      74696F6E 
 1018      2D736563 
 1018      74696F6E 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 29


 1019              	.LASF1:
 1020 00e6 756E7369 		.ascii	"unsigned char\000"
 1020      676E6564 
 1020      20636861 
 1020      7200
 1021              	.LASF19:
 1022 00f4 726F7744 		.ascii	"rowData\000"
 1022      61746100 
 1023              	.LASF22:
 1024 00fc 70617261 		.ascii	"parameters\000"
 1024      6D657465 
 1024      727300
 1025              	.LASF5:
 1026 0107 6C6F6E67 		.ascii	"long unsigned int\000"
 1026      20756E73 
 1026      69676E65 
 1026      6420696E 
 1026      7400
 1027              	.LASF9:
 1028 0119 75696E74 		.ascii	"uint8\000"
 1028      3800
 1029              	.LASF13:
 1030 011f 646F7562 		.ascii	"double\000"
 1030      6C6500
 1031              	.LASF2:
 1032 0126 73686F72 		.ascii	"short int\000"
 1032      7420696E 
 1032      7400
 1033              	.LASF10:
 1034 0130 75696E74 		.ascii	"uint16\000"
 1034      313600
 1035              	.LASF11:
 1036 0137 75696E74 		.ascii	"uint32\000"
 1036      333200
 1037              	.LASF8:
 1038 013e 756E7369 		.ascii	"unsigned int\000"
 1038      676E6564 
 1038      20696E74 
 1038      00
 1039              	.LASF7:
 1040 014b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1040      206C6F6E 
 1040      6720756E 
 1040      7369676E 
 1040      65642069 
 1041              	.LASF23:
 1042 0162 696E7465 		.ascii	"interruptState\000"
 1042      72727570 
 1042      74537461 
 1042      746500
 1043              	.LASF17:
 1044 0171 73697A65 		.ascii	"sizetype\000"
 1044      74797065 
 1044      00
 1045              	.LASF6:
 1046 017a 6C6F6E67 		.ascii	"long long int\000"
 1046      206C6F6E 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 30


 1046      6720696E 
 1046      7400
 1047              	.LASF14:
 1048 0188 63686172 		.ascii	"char\000"
 1048      00
 1049              	.LASF24:
 1050 018d 66726571 		.ascii	"freq\000"
 1050      00
 1051              	.LASF29:
 1052 0192 433A5C55 		.ascii	"C:\\Users\\Matty\\Documents\\PSoC Creator\\RF_Switc"
 1052      73657273 
 1052      5C4D6174 
 1052      74795C44 
 1052      6F63756D 
 1053 01c0 685F4D61 		.ascii	"h_Matrix\\RF_Switch_Matrix.cydsn\000"
 1053      74726978 
 1053      5C52465F 
 1053      53776974 
 1053      63685F4D 
 1054              	.LASF26:
 1055 01e0 43795379 		.ascii	"CySysFlashClockConfig\000"
 1055      73466C61 
 1055      7368436C 
 1055      6F636B43 
 1055      6F6E6669 
 1056              	.LASF32:
 1057 01f6 43795379 		.ascii	"CySysFlashClockRestore\000"
 1057      73466C61 
 1057      7368436C 
 1057      6F636B52 
 1057      6573746F 
 1058              	.LASF25:
 1059 020d 43795379 		.ascii	"CySysFlashClockBackup\000"
 1059      73466C61 
 1059      7368436C 
 1059      6F636B42 
 1059      61636B75 
 1060              	.LASF4:
 1061 0223 6C6F6E67 		.ascii	"long int\000"
 1061      20696E74 
 1061      00
 1062              	.LASF0:
 1063 022c 7369676E 		.ascii	"signed char\000"
 1063      65642063 
 1063      68617200 
 1064              	.LASF30:
 1065 0238 43795379 		.ascii	"CySysFlashWriteRow\000"
 1065      73466C61 
 1065      73685772 
 1065      69746552 
 1065      6F7700
 1066              	.LASF31:
 1067 024b 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 1067      73466C61 
 1067      73685365 
 1067      74576169 
 1067      74437963 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\ccnbDzQS.s 			page 31


 1068              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
