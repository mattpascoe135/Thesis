ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 60E31600 		.word	1500000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 DC050000 		.word	1500
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 02       		.byte	2
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000EE02 		.word	49152000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103 002e 0000     		.section	.text.CySysClkImoStart,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStart
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStart, %function
 109              	CySysClkImoStart:
 110              	.LFB1:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 3


 111              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.0
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the clocking, interrupts, and watchdog timer.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/CyLib.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/CyLib.c **** *
  12:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2 && CY_IP_FMLT)
  22:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  24:.\Generated_Source\PSoC4/CyLib.c **** 
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void);
  38:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  39:.\Generated_Source\PSoC4/CyLib.c **** 
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  42:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  43:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  44:.\Generated_Source\PSoC4/CyLib.c **** *
  45:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  46:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  47:.\Generated_Source\PSoC4/CyLib.c **** *
  48:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  49:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  51:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  52:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  53:.\Generated_Source\PSoC4/CyLib.c **** 
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  56:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 4


  57:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  58:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  70:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  71:.\Generated_Source\PSoC4/CyLib.c **** 
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  74:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  75:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  76:.\Generated_Source\PSoC4/CyLib.c **** *
  77:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  78:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  79:.\Generated_Source\PSoC4/CyLib.c **** *
  80:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  81:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
  82:.\Generated_Source\PSoC4/CyLib.c **** *
  83:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
  84:.\Generated_Source\PSoC4/CyLib.c **** *  None
  85:.\Generated_Source\PSoC4/CyLib.c **** *
  86:.\Generated_Source\PSoC4/CyLib.c **** * Return:
  87:.\Generated_Source\PSoC4/CyLib.c **** *  None
  88:.\Generated_Source\PSoC4/CyLib.c **** *
  89:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  90:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  91:.\Generated_Source\PSoC4/CyLib.c **** {
 112              		.loc 1 91 0
 113              		.cfi_startproc
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
  92:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 120              		.loc 1 92 0
 121 0004 044B     		ldr	r3, .L2
 122 0006 044A     		ldr	r2, .L2
 123 0008 1268     		ldr	r2, [r2]
 124 000a 8021     		mov	r1, #128
 125 000c 0906     		lsl	r1, r1, #24
 126 000e 0A43     		orr	r2, r1
 127 0010 1A60     		str	r2, [r3]
  93:.\Generated_Source\PSoC4/CyLib.c **** 
  94:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  95:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
  96:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
  97:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 5


  98:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  99:.\Generated_Source\PSoC4/CyLib.c **** 
 100:.\Generated_Source\PSoC4/CyLib.c **** }
 128              		.loc 1 100 0
 129 0012 BD46     		mov	sp, r7
 130              		@ sp needed
 131 0014 80BD     		pop	{r7, pc}
 132              	.L3:
 133 0016 C046     		.align	2
 134              	.L2:
 135 0018 08010B40 		.word	1074462984
 136              		.cfi_endproc
 137              	.LFE1:
 138              		.size	CySysClkImoStart, .-CySysClkImoStart
 139              		.section	.text.CySysClkImoStop,"ax",%progbits
 140              		.align	2
 141              		.global	CySysClkImoStop
 142              		.code	16
 143              		.thumb_func
 144              		.type	CySysClkImoStop, %function
 145              	CySysClkImoStop:
 146              	.LFB2:
 101:.\Generated_Source\PSoC4/CyLib.c **** 
 102:.\Generated_Source\PSoC4/CyLib.c **** 
 103:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 105:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices , this function will also disable WCO lock
 111:.\Generated_Source\PSoC4/CyLib.c **** *  if already enabled.
 112:.\Generated_Source\PSoC4/CyLib.c **** *
 113:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 114:.\Generated_Source\PSoC4/CyLib.c **** *  None
 115:.\Generated_Source\PSoC4/CyLib.c **** *
 116:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 117:.\Generated_Source\PSoC4/CyLib.c **** *  None
 118:.\Generated_Source\PSoC4/CyLib.c **** *
 119:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 121:.\Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 121 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 123:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 155              		.loc 1 123 0
 156 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 124:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 125:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 6


 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 157              		.loc 1 126 0
 158 0008 034B     		ldr	r3, .L5
 159 000a 034A     		ldr	r2, .L5
 160 000c 1268     		ldr	r2, [r2]
 161 000e 5200     		lsl	r2, r2, #1
 162 0010 5208     		lsr	r2, r2, #1
 163 0012 1A60     		str	r2, [r3]
 127:.\Generated_Source\PSoC4/CyLib.c **** }
 164              		.loc 1 127 0
 165 0014 BD46     		mov	sp, r7
 166              		@ sp needed
 167 0016 80BD     		pop	{r7, pc}
 168              	.L6:
 169              		.align	2
 170              	.L5:
 171 0018 08010B40 		.word	1074462984
 172              		.cfi_endproc
 173              	.LFE2:
 174              		.size	CySysClkImoStop, .-CySysClkImoStop
 175              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 176              		.align	2
 177              		.global	CySysClkImoEnableWcoLock
 178              		.code	16
 179              		.thumb_func
 180              		.type	CySysClkImoEnableWcoLock, %function
 181              	CySysClkImoEnableWcoLock:
 182              	.LFB3:
 128:.\Generated_Source\PSoC4/CyLib.c **** 
 129:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 133:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c ****     *
 135:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 137:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 138:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 139:.\Generated_Source\PSoC4/CyLib.c ****     *
 140:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 141:.\Generated_Source\PSoC4/CyLib.c ****     *
 142:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 144:.\Generated_Source\PSoC4/CyLib.c ****     *
 145:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 146:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 147:.\Generated_Source\PSoC4/CyLib.c ****     *
 148:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 150:.\Generated_Source\PSoC4/CyLib.c ****     {
 183              		.loc 1 150 0
 184              		.cfi_startproc
 185 0000 90B5     		push	{r4, r7, lr}
 186              		.cfi_def_cfa_offset 12
 187              		.cfi_offset 4, -12
 188              		.cfi_offset 7, -8
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 7


 189              		.cfi_offset 14, -4
 190 0002 87B0     		sub	sp, sp, #28
 191              		.cfi_def_cfa_offset 40
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 151:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 194              		.loc 1 152 0
 195 0006 0323     		mov	r3, #3
 196 0008 3B61     		str	r3, [r7, #16]
 153:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 154:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 155:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 156:.\Generated_Source\PSoC4/CyLib.c **** 
 157:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 197              		.loc 1 157 0
 198 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 199 000e 031C     		mov	r3, r0
 200 0010 002B     		cmp	r3, #0
 201 0012 60D0     		beq	.L7
 158:.\Generated_Source\PSoC4/CyLib.c ****         {
 159:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 202              		.loc 1 159 0
 203 0014 3C1C     		mov	r4, r7
 204 0016 0F34     		add	r4, r4, #15
 205 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 206 001c 031C     		mov	r3, r0
 207 001e 2370     		strb	r3, [r4]
 160:.\Generated_Source\PSoC4/CyLib.c **** 
 161:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 208              		.loc 1 162 0
 209 0020 0023     		mov	r3, #0
 210 0022 7B61     		str	r3, [r7, #20]
 211 0024 12E0     		b	.L9
 212              	.L12:
 163:.\Generated_Source\PSoC4/CyLib.c ****             {
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 213              		.loc 1 164 0
 214 0026 2D4B     		ldr	r3, .L14
 215 0028 1B68     		ldr	r3, [r3]
 216 002a DBB2     		uxtb	r3, r3
 217 002c 1A1C     		mov	r2, r3
 218 002e 3F23     		mov	r3, #63
 219 0030 1A40     		and	r2, r3
 220 0032 2B49     		ldr	r1, .L14+4
 221 0034 7B69     		ldr	r3, [r7, #20]
 222 0036 CB18     		add	r3, r1, r3
 223 0038 1B78     		ldrb	r3, [r3]
 224 003a 9A42     		cmp	r2, r3
 225 003c 03D1     		bne	.L10
 165:.\Generated_Source\PSoC4/CyLib.c ****                 {
 166:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 226              		.loc 1 166 0
 227 003e 7B69     		ldr	r3, [r7, #20]
 228 0040 0333     		add	r3, r3, #3
 229 0042 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 8


 167:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 230              		.loc 1 167 0
 231 0044 05E0     		b	.L11
 232              	.L10:
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 233              		.loc 1 162 0
 234 0046 7B69     		ldr	r3, [r7, #20]
 235 0048 0133     		add	r3, r3, #1
 236 004a 7B61     		str	r3, [r7, #20]
 237              	.L9:
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 238              		.loc 1 162 0 is_stmt 0 discriminator 1
 239 004c 7B69     		ldr	r3, [r7, #20]
 240 004e 2D2B     		cmp	r3, #45
 241 0050 E9D9     		bls	.L12
 242              	.L11:
 168:.\Generated_Source\PSoC4/CyLib.c ****                 }
 169:.\Generated_Source\PSoC4/CyLib.c ****             }
 170:.\Generated_Source\PSoC4/CyLib.c **** 
 171:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 243              		.loc 1 171 0 is_stmt 1
 244 0052 244B     		ldr	r3, .L14+8
 245 0054 1A68     		ldr	r2, [r3]
 246 0056 1F23     		mov	r3, #31
 247 0058 1340     		and	r3, r2
 248 005a 07D1     		bne	.L13
 172:.\Generated_Source\PSoC4/CyLib.c ****             {
 173:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 249              		.loc 1 173 0
 250 005c 214B     		ldr	r3, .L14+8
 251 005e 214A     		ldr	r2, .L14+8
 252 0060 1268     		ldr	r2, [r2]
 253 0062 1F21     		mov	r1, #31
 254 0064 8A43     		bic	r2, r1
 255 0066 0C21     		mov	r1, #12
 256 0068 0A43     		orr	r2, r1
 257 006a 1A60     		str	r2, [r3]
 258              	.L13:
 174:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_GAIN;
 175:.\Generated_Source\PSoC4/CyLib.c ****             }
 176:.\Generated_Source\PSoC4/CyLib.c **** 
 177:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 259              		.loc 1 177 0
 260 006c 1E4B     		ldr	r3, .L14+12
 261 006e 1A68     		ldr	r2, [r3]
 262 0070 1E4B     		ldr	r3, .L14+16
 263 0072 1340     		and	r3, r2
 264 0074 BB60     		str	r3, [r7, #8]
 178:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 179:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK);
 180:.\Generated_Source\PSoC4/CyLib.c **** 
 181:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 182:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 265              		.loc 1 182 0
 266 0076 3B69     		ldr	r3, [r7, #16]
 267 0078 1D4A     		ldr	r2, .L14+20
 268 007a 5343     		mul	r3, r2
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 9


 269 007c 8022     		mov	r2, #128
 270 007e D201     		lsl	r2, r2, #7
 271 0080 9B18     		add	r3, r3, r2
 272 0082 DB0B     		lsr	r3, r3, #15
 273 0084 013B     		sub	r3, r3, #1
 274 0086 5B05     		lsl	r3, r3, #21
 275 0088 5B0D     		lsr	r3, r3, #21
 276 008a BA68     		ldr	r2, [r7, #8]
 277 008c 1343     		orr	r3, r2
 278 008e BB60     		str	r3, [r7, #8]
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 185:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 279              		.loc 1 185 0
 280 0090 BB68     		ldr	r3, [r7, #8]
 281 0092 A022     		mov	r2, #160
 282 0094 5203     		lsl	r2, r2, #13
 283 0096 1343     		orr	r3, r2
 284 0098 BB60     		str	r3, [r7, #8]
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 187:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 285              		.loc 1 187 0
 286 009a 134B     		ldr	r3, .L14+12
 287 009c BA68     		ldr	r2, [r7, #8]
 288 009e 1A60     		str	r2, [r3]
 188:.\Generated_Source\PSoC4/CyLib.c **** 
 189:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 289              		.loc 1 189 0
 290 00a0 144B     		ldr	r3, .L14+24
 291 00a2 1B68     		ldr	r3, [r3]
 292 00a4 7B60     		str	r3, [r7, #4]
 190:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 293              		.loc 1 190 0
 294 00a6 3020     		mov	r0, #48
 295 00a8 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 191:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 296              		.loc 1 191 0
 297 00ac 124B     		ldr	r3, .L14+28
 298 00ae 124A     		ldr	r2, .L14+28
 299 00b0 1268     		ldr	r2, [r2]
 300 00b2 8021     		mov	r1, #128
 301 00b4 C905     		lsl	r1, r1, #23
 302 00b6 0A43     		orr	r2, r1
 303 00b8 1A60     		str	r2, [r3]
 192:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(320u);
 304              		.loc 1 192 0
 305 00ba A023     		mov	r3, #160
 306 00bc 5B00     		lsl	r3, r3, #1
 307 00be 181C     		mov	r0, r3
 308 00c0 FFF7FEFF 		bl	CyDelay
 193:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 309              		.loc 1 193 0
 310 00c4 0B4B     		ldr	r3, .L14+24
 311 00c6 7A68     		ldr	r2, [r7, #4]
 312 00c8 1A60     		str	r2, [r3]
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 10


 313              		.loc 1 195 0
 314 00ca 3B1C     		mov	r3, r7
 315 00cc 0F33     		add	r3, r3, #15
 316 00ce 1B78     		ldrb	r3, [r3]
 317 00d0 181C     		mov	r0, r3
 318 00d2 FFF7FEFF 		bl	CyExitCriticalSection
 319              	.L7:
 196:.\Generated_Source\PSoC4/CyLib.c ****         }
 197:.\Generated_Source\PSoC4/CyLib.c ****     }
 320              		.loc 1 197 0
 321 00d6 BD46     		mov	sp, r7
 322 00d8 07B0     		add	sp, sp, #28
 323              		@ sp needed
 324 00da 90BD     		pop	{r4, r7, pc}
 325              	.L15:
 326              		.align	2
 327              	.L14:
 328 00dc 2CFF0B40 		.word	1074528044
 329 00e0 00000000 		.word	cyImoFreqMhz2Reg
 330 00e4 34FF0B40 		.word	1074528052
 331 00e8 08002240 		.word	1075970056
 332 00ec 00F8C0FF 		.word	-4130816
 333 00f0 40420F00 		.word	1000000
 334 00f4 30001040 		.word	1074790448
 335 00f8 00002240 		.word	1075970048
 336              		.cfi_endproc
 337              	.LFE3:
 338              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 339              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 340              		.align	2
 341              		.global	CySysClkImoDisableWcoLock
 342              		.code	16
 343              		.thumb_func
 344              		.type	CySysClkImoDisableWcoLock, %function
 345              	CySysClkImoDisableWcoLock:
 346              	.LFB4:
 198:.\Generated_Source\PSoC4/CyLib.c **** 
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 201:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 202:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 203:.\Generated_Source\PSoC4/CyLib.c ****     *
 204:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 205:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 206:.\Generated_Source\PSoC4/CyLib.c ****     *
 207:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 208:.\Generated_Source\PSoC4/CyLib.c ****     *
 209:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 210:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 211:.\Generated_Source\PSoC4/CyLib.c ****     *
 212:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 213:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 214:.\Generated_Source\PSoC4/CyLib.c ****     *
 215:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 216:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 217:.\Generated_Source\PSoC4/CyLib.c ****     {
 347              		.loc 1 217 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 11


 348              		.cfi_startproc
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 218:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 355              		.loc 1 218 0
 356 0004 034B     		ldr	r3, .L17
 357 0006 034A     		ldr	r2, .L17
 358 0008 1168     		ldr	r1, [r2]
 359 000a 034A     		ldr	r2, .L17+4
 360 000c 0A40     		and	r2, r1
 361 000e 1A60     		str	r2, [r3]
 219:.\Generated_Source\PSoC4/CyLib.c ****     }
 362              		.loc 1 219 0
 363 0010 BD46     		mov	sp, r7
 364              		@ sp needed
 365 0012 80BD     		pop	{r7, pc}
 366              	.L18:
 367              		.align	2
 368              	.L17:
 369 0014 00002240 		.word	1075970048
 370 0018 FFFFFFBF 		.word	-1073741825
 371              		.cfi_endproc
 372              	.LFE4:
 373              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 374              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 375              		.align	2
 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkImoGetWcoLock, %function
 379              	CySysClkImoGetWcoLock:
 380              	.LFB5:
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c **** 
 222:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 224:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/CyLib.c ****     *
 226:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 227:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 228:.\Generated_Source\PSoC4/CyLib.c ****     *
 229:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 230:.\Generated_Source\PSoC4/CyLib.c ****     *
 231:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 232:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 233:.\Generated_Source\PSoC4/CyLib.c ****     *
 234:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 236:.\Generated_Source\PSoC4/CyLib.c ****     *
 237:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void)
 239:.\Generated_Source\PSoC4/CyLib.c ****     {
 381              		.loc 1 239 0
 382              		.cfi_startproc
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 12


 383 0000 80B5     		push	{r7, lr}
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 7, -8
 386              		.cfi_offset 14, -4
 387 0002 00AF     		add	r7, sp, #0
 388              		.cfi_def_cfa_register 7
 240:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 389              		.loc 1 240 0
 390 0004 054B     		ldr	r3, .L23
 391 0006 1A68     		ldr	r2, [r3]
 392 0008 8023     		mov	r3, #128
 393 000a DB05     		lsl	r3, r3, #23
 394 000c 1340     		and	r3, r2
 241:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 395              		.loc 1 241 0
 396 000e 01D0     		beq	.L20
 397              		.loc 1 241 0 is_stmt 0 discriminator 1
 398 0010 0123     		mov	r3, #1
 399 0012 00E0     		b	.L21
 400              	.L20:
 401              		.loc 1 241 0 discriminator 2
 402 0014 0023     		mov	r3, #0
 403              	.L21:
 242:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 243:.\Generated_Source\PSoC4/CyLib.c ****     }
 404              		.loc 1 243 0 is_stmt 1
 405 0016 181C     		mov	r0, r3
 406 0018 BD46     		mov	sp, r7
 407              		@ sp needed
 408 001a 80BD     		pop	{r7, pc}
 409              	.L24:
 410              		.align	2
 411              	.L23:
 412 001c 00002240 		.word	1075970048
 413              		.cfi_endproc
 414              	.LFE5:
 415              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 416              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 417              		.align	2
 418              		.global	CySysClkWriteHfclkDirect
 419              		.code	16
 420              		.thumb_func
 421              		.type	CySysClkWriteHfclkDirect, %function
 422              	CySysClkWriteHfclkDirect:
 423              	.LFB6:
 244:.\Generated_Source\PSoC4/CyLib.c **** 
 245:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 246:.\Generated_Source\PSoC4/CyLib.c **** 
 247:.\Generated_Source\PSoC4/CyLib.c **** 
 248:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 250:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CyLib.c **** *
 252:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 253:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 254:.\Generated_Source\PSoC4/CyLib.c **** *
 255:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 13


 256:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 257:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 258:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 259:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 260:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 261:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 262:.\Generated_Source\PSoC4/CyLib.c **** *
 263:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 264:.\Generated_Source\PSoC4/CyLib.c **** *  None
 265:.\Generated_Source\PSoC4/CyLib.c **** *
 266:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 267:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 268:.\Generated_Source\PSoC4/CyLib.c **** *
 269:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 270:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 271:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 272:.\Generated_Source\PSoC4/CyLib.c **** *
 273:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 274:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 275:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 276:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 277:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 278:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 279:.\Generated_Source\PSoC4/CyLib.c **** *
 280:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 282:.\Generated_Source\PSoC4/CyLib.c **** {
 424              		.loc 1 282 0
 425              		.cfi_startproc
 426 0000 90B5     		push	{r4, r7, lr}
 427              		.cfi_def_cfa_offset 12
 428              		.cfi_offset 4, -12
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 85B0     		sub	sp, sp, #20
 432              		.cfi_def_cfa_offset 32
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 435 0006 7860     		str	r0, [r7, #4]
 283:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 284:.\Generated_Source\PSoC4/CyLib.c **** 
 285:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 436              		.loc 1 285 0
 437 0008 3C1C     		mov	r4, r7
 438 000a 0F34     		add	r4, r4, #15
 439 000c FFF7FEFF 		bl	CyEnterCriticalSection
 440 0010 031C     		mov	r3, r0
 441 0012 2370     		strb	r3, [r4]
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 442              		.loc 1 287 0
 443 0014 0A4B     		ldr	r3, .L26
 444 0016 0A4A     		ldr	r2, .L26
 445 0018 1268     		ldr	r2, [r2]
 446 001a 0721     		mov	r1, #7
 447 001c 101C     		mov	r0, r2
 448 001e 8843     		bic	r0, r1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 14


 449 0020 011C     		mov	r1, r0
 288:.\Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
 450              		.loc 1 288 0
 451 0022 7868     		ldr	r0, [r7, #4]
 452 0024 0122     		mov	r2, #1
 453 0026 0240     		and	r2, r0
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 454              		.loc 1 287 0
 455 0028 0A43     		orr	r2, r1
 456 002a 1A60     		str	r2, [r3]
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 457              		.loc 1 290 0
 458 002c 3B1C     		mov	r3, r7
 459 002e 0F33     		add	r3, r3, #15
 460 0030 1B78     		ldrb	r3, [r3]
 461 0032 181C     		mov	r0, r3
 462 0034 FFF7FEFF 		bl	CyExitCriticalSection
 291:.\Generated_Source\PSoC4/CyLib.c **** }
 463              		.loc 1 291 0
 464 0038 BD46     		mov	sp, r7
 465 003a 05B0     		add	sp, sp, #20
 466              		@ sp needed
 467 003c 90BD     		pop	{r4, r7, pc}
 468              	.L27:
 469 003e C046     		.align	2
 470              	.L26:
 471 0040 00010B40 		.word	1074462976
 472              		.cfi_endproc
 473              	.LFE6:
 474              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 475              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 476              		.align	2
 477              		.global	CySysClkWriteSysclkDiv
 478              		.code	16
 479              		.thumb_func
 480              		.type	CySysClkWriteSysclkDiv, %function
 481              	CySysClkWriteSysclkDiv:
 482              	.LFB7:
 292:.\Generated_Source\PSoC4/CyLib.c **** 
 293:.\Generated_Source\PSoC4/CyLib.c **** 
 294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 296:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 297:.\Generated_Source\PSoC4/CyLib.c **** *
 298:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 299:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 300:.\Generated_Source\PSoC4/CyLib.c **** *
 301:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 302:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 303:.\Generated_Source\PSoC4/CyLib.c **** *
 304:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 305:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 306:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 307:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 308:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 309:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 15


 310:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 311:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 312:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 313:.\Generated_Source\PSoC4/CyLib.c **** *
 314:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 315:.\Generated_Source\PSoC4/CyLib.c **** *  None
 316:.\Generated_Source\PSoC4/CyLib.c **** *
 317:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 318:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 319:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 320:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 321:.\Generated_Source\PSoC4/CyLib.c **** *
 322:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 323:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 324:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 325:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 326:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 327:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 328:.\Generated_Source\PSoC4/CyLib.c **** *
 329:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 331:.\Generated_Source\PSoC4/CyLib.c **** {
 483              		.loc 1 331 0
 484              		.cfi_startproc
 485 0000 90B5     		push	{r4, r7, lr}
 486              		.cfi_def_cfa_offset 12
 487              		.cfi_offset 4, -12
 488              		.cfi_offset 7, -8
 489              		.cfi_offset 14, -4
 490 0002 85B0     		sub	sp, sp, #20
 491              		.cfi_def_cfa_offset 32
 492 0004 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 494 0006 7860     		str	r0, [r7, #4]
 332:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 333:.\Generated_Source\PSoC4/CyLib.c **** 
 334:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 495              		.loc 1 334 0
 496 0008 3C1C     		mov	r4, r7
 497 000a 0F34     		add	r4, r4, #15
 498 000c FFF7FEFF 		bl	CyEnterCriticalSection
 499 0010 031C     		mov	r3, r0
 500 0012 2370     		strb	r3, [r4]
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 501              		.loc 1 336 0
 502 0014 094B     		ldr	r3, .L29
 503 0016 7968     		ldr	r1, [r7, #4]
 504 0018 0722     		mov	r2, #7
 505 001a 0A40     		and	r2, r1
 506 001c D104     		lsl	r1, r2, #19
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 338:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 507              		.loc 1 338 0
 508 001e 074A     		ldr	r2, .L29
 509 0020 1068     		ldr	r0, [r2]
 510 0022 074A     		ldr	r2, .L29+4
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 16


 511 0024 0240     		and	r2, r0
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 512              		.loc 1 337 0
 513 0026 0A43     		orr	r2, r1
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 514              		.loc 1 336 0
 515 0028 1A60     		str	r2, [r3]
 339:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 340:.\Generated_Source\PSoC4/CyLib.c **** 
 341:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 516              		.loc 1 341 0
 517 002a 3B1C     		mov	r3, r7
 518 002c 0F33     		add	r3, r3, #15
 519 002e 1B78     		ldrb	r3, [r3]
 520 0030 181C     		mov	r0, r3
 521 0032 FFF7FEFF 		bl	CyExitCriticalSection
 342:.\Generated_Source\PSoC4/CyLib.c **** }
 522              		.loc 1 342 0
 523 0036 BD46     		mov	sp, r7
 524 0038 05B0     		add	sp, sp, #20
 525              		@ sp needed
 526 003a 90BD     		pop	{r4, r7, pc}
 527              	.L30:
 528              		.align	2
 529              	.L29:
 530 003c 00010B40 		.word	1074462976
 531 0040 FFFFC7FF 		.word	-3670017
 532              		.cfi_endproc
 533              	.LFE7:
 534              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 535              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 536              		.align	2
 537              		.global	CySysClkWriteImoFreq
 538              		.code	16
 539              		.thumb_func
 540              		.type	CySysClkWriteImoFreq, %function
 541              	CySysClkWriteImoFreq:
 542              	.LFB8:
 343:.\Generated_Source\PSoC4/CyLib.c **** 
 344:.\Generated_Source\PSoC4/CyLib.c **** 
 345:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 347:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c **** *
 349:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 350:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 351:.\Generated_Source\PSoC4/CyLib.c **** *
 352:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 353:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 354:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 355:.\Generated_Source\PSoC4/CyLib.c **** *
 356:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 357:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 358:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 359:.\Generated_Source\PSoC4/CyLib.c **** *
 360:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, if WCO lock feature is enabled then this
 361:.\Generated_Source\PSoC4/CyLib.c **** *  API will disable the lock, write the new IMO frequency and then re-enable the
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 17


 362:.\Generated_Source\PSoC4/CyLib.c **** *  lock.
 363:.\Generated_Source\PSoC4/CyLib.c **** *
 364:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 365:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 366:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 367:.\Generated_Source\PSoC4/CyLib.c **** *
 368:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 369:.\Generated_Source\PSoC4/CyLib.c **** *
 370:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 371:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 372:.\Generated_Source\PSoC4/CyLib.c **** *
 373:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 374:.\Generated_Source\PSoC4/CyLib.c **** *  None
 375:.\Generated_Source\PSoC4/CyLib.c **** *
 376:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 377:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 378:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 379:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 380:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 381:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 382:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 383:.\Generated_Source\PSoC4/CyLib.c **** *
 384:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 385:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 386:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 387:.\Generated_Source\PSoC4/CyLib.c **** *
 388:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 390:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 543              		.loc 1 391 0
 544              		.cfi_startproc
 545 0000 90B5     		push	{r4, r7, lr}
 546              		.cfi_def_cfa_offset 12
 547              		.cfi_offset 4, -12
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 8BB0     		sub	sp, sp, #44
 551              		.cfi_def_cfa_offset 56
 552 0004 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 554 0006 7860     		str	r0, [r7, #4]
 392:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 393:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 394:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 395:.\Generated_Source\PSoC4/CyLib.c ****         #else
 396:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 397:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 398:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 399:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 400:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 401:.\Generated_Source\PSoC4/CyLib.c **** 
 402:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 403:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 555              		.loc 1 403 0
 556 0008 0023     		mov	r3, #0
 557 000a 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 18


 404:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 405:.\Generated_Source\PSoC4/CyLib.c **** 
 406:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 407:.\Generated_Source\PSoC4/CyLib.c **** 
 408:.\Generated_Source\PSoC4/CyLib.c **** 
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 558              		.loc 1 409 0
 559 000c 3C1C     		mov	r4, r7
 560 000e 2334     		add	r4, r4, #35
 561 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 562 0014 031C     		mov	r3, r0
 563 0016 2370     		strb	r3, [r4]
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 412:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 564              		.loc 1 412 0
 565 0018 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 566 001c 031C     		mov	r3, r0
 567 001e 002B     		cmp	r3, #0
 568 0020 03D0     		beq	.L32
 413:.\Generated_Source\PSoC4/CyLib.c ****             {
 414:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 569              		.loc 1 414 0
 570 0022 0123     		mov	r3, #1
 571 0024 7B62     		str	r3, [r7, #36]
 415:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 572              		.loc 1 415 0
 573 0026 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 574              	.L32:
 416:.\Generated_Source\PSoC4/CyLib.c ****             }
 417:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 418:.\Generated_Source\PSoC4/CyLib.c **** 
 419:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 420:.\Generated_Source\PSoC4/CyLib.c **** 
 421:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 422:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 575              		.loc 1 422 0
 576 002a 1B4B     		ldr	r3, .L34
 577 002c 1A68     		ldr	r2, [r3]
 578 002e 3B1C     		mov	r3, r7
 579 0030 0833     		add	r3, r3, #8
 580 0032 1A60     		str	r2, [r3]
 423:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 581              		.loc 1 423 0
 582 0034 194B     		ldr	r3, .L34+4
 583 0036 1A68     		ldr	r2, [r3]
 584 0038 3B1C     		mov	r3, r7
 585 003a 0833     		add	r3, r3, #8
 586 003c 5A60     		str	r2, [r3, #4]
 424:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 587              		.loc 1 424 0
 588 003e 7B68     		ldr	r3, [r7, #4]
 589 0040 033B     		sub	r3, r3, #3
 590 0042 174A     		ldr	r2, .L34+8
 591 0044 D35C     		ldrb	r3, [r2, r3]
 592 0046 1A1C     		mov	r2, r3
 593 0048 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 19


 594 004a 0833     		add	r3, r3, #8
 595 004c 9A60     		str	r2, [r3, #8]
 425:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 596              		.loc 1 425 0
 597 004e 154B     		ldr	r3, .L34+12
 598 0050 1A68     		ldr	r2, [r3]
 599 0052 3B1C     		mov	r3, r7
 600 0054 0833     		add	r3, r3, #8
 601 0056 DA60     		str	r2, [r3, #12]
 426:.\Generated_Source\PSoC4/CyLib.c **** 
 427:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 602              		.loc 1 427 0
 603 0058 3B1C     		mov	r3, r7
 604 005a 1833     		add	r3, r3, #24
 605 005c 124A     		ldr	r2, .L34+16
 606 005e 1A60     		str	r2, [r3]
 428:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 429:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 430:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 607              		.loc 1 430 0
 608 0060 3A1C     		mov	r2, r7
 609 0062 0832     		add	r2, r2, #8
 610 0064 3B1C     		mov	r3, r7
 611 0066 1833     		add	r3, r3, #24
 612 0068 5A60     		str	r2, [r3, #4]
 431:.\Generated_Source\PSoC4/CyLib.c **** 
 432:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 613              		.loc 1 432 0
 614 006a 104B     		ldr	r3, .L34+20
 615 006c 3A1C     		mov	r2, r7
 616 006e 1832     		add	r2, r2, #24
 617 0070 1A60     		str	r2, [r3]
 433:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 618              		.loc 1 433 0
 619 0072 0F4B     		ldr	r3, .L34+24
 620 0074 0F4A     		ldr	r2, .L34+28
 621 0076 1A60     		str	r2, [r3]
 434:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 622              		.loc 1 434 0
 623 0078 0C4B     		ldr	r3, .L34+20
 624 007a 1B68     		ldr	r3, [r3]
 435:.\Generated_Source\PSoC4/CyLib.c **** 
 436:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 437:.\Generated_Source\PSoC4/CyLib.c **** 
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 439:.\Generated_Source\PSoC4/CyLib.c ****         {
 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 441:.\Generated_Source\PSoC4/CyLib.c ****             {
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 444:.\Generated_Source\PSoC4/CyLib.c ****             }
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 446:.\Generated_Source\PSoC4/CyLib.c ****             {
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 449:.\Generated_Source\PSoC4/CyLib.c ****             }
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 20


 451:.\Generated_Source\PSoC4/CyLib.c ****             {
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 454:.\Generated_Source\PSoC4/CyLib.c ****             }
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 456:.\Generated_Source\PSoC4/CyLib.c ****             {
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 459:.\Generated_Source\PSoC4/CyLib.c ****             }
 460:.\Generated_Source\PSoC4/CyLib.c ****             else
 461:.\Generated_Source\PSoC4/CyLib.c ****             {
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 464:.\Generated_Source\PSoC4/CyLib.c ****             }
 465:.\Generated_Source\PSoC4/CyLib.c **** 
 466:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 468:.\Generated_Source\PSoC4/CyLib.c **** 
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c ****             /**********************************************`*****************************
 471:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 472:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 473:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 474:.\Generated_Source\PSoC4/CyLib.c ****             *
 475:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 476:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 477:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 478:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 480:.\Generated_Source\PSoC4/CyLib.c ****             {
 481:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 483:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 484:.\Generated_Source\PSoC4/CyLib.c **** 
 485:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 488:.\Generated_Source\PSoC4/CyLib.c ****             }
 489:.\Generated_Source\PSoC4/CyLib.c ****             else
 490:.\Generated_Source\PSoC4/CyLib.c ****             {
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 492:.\Generated_Source\PSoC4/CyLib.c ****             }
 493:.\Generated_Source\PSoC4/CyLib.c **** 
 494:.\Generated_Source\PSoC4/CyLib.c **** 
 495:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 496:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 497:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 498:.\Generated_Source\PSoC4/CyLib.c ****             *
 499:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 500:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 501:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 502:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 504:.\Generated_Source\PSoC4/CyLib.c ****             {
 505:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 21


 508:.\Generated_Source\PSoC4/CyLib.c ****             }
 509:.\Generated_Source\PSoC4/CyLib.c **** 
 510:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 515:.\Generated_Source\PSoC4/CyLib.c **** 
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 517:.\Generated_Source\PSoC4/CyLib.c ****             {
 518:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 521:.\Generated_Source\PSoC4/CyLib.c ****             }
 522:.\Generated_Source\PSoC4/CyLib.c ****         }
 523:.\Generated_Source\PSoC4/CyLib.c ****         else
 524:.\Generated_Source\PSoC4/CyLib.c ****         {
 525:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 526:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 527:.\Generated_Source\PSoC4/CyLib.c ****         }
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 530:.\Generated_Source\PSoC4/CyLib.c **** 
 531:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 532:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 625              		.loc 1 532 0
 626 007c 7B6A     		ldr	r3, [r7, #36]
 627 007e 012B     		cmp	r3, #1
 628 0080 01D1     		bne	.L33
 533:.\Generated_Source\PSoC4/CyLib.c ****             {
 534:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 629              		.loc 1 534 0
 630 0082 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 631              	.L33:
 535:.\Generated_Source\PSoC4/CyLib.c ****             }
 536:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 537:.\Generated_Source\PSoC4/CyLib.c **** 
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 632              		.loc 1 538 0
 633 0086 3B1C     		mov	r3, r7
 634 0088 2333     		add	r3, r3, #35
 635 008a 1B78     		ldrb	r3, [r3]
 636 008c 181C     		mov	r0, r3
 637 008e FFF7FEFF 		bl	CyExitCriticalSection
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 638              		.loc 1 539 0
 639 0092 BD46     		mov	sp, r7
 640 0094 0BB0     		add	sp, sp, #44
 641              		@ sp needed
 642 0096 90BD     		pop	{r4, r7, pc}
 643              	.L35:
 644              		.align	2
 645              	.L34:
 646 0098 08010B40 		.word	1074462984
 647 009c 00010B40 		.word	1074462976
 648 00a0 00000000 		.word	cyImoFreqMhz2Reg
 649 00a4 30001040 		.word	1074790448
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 22


 650 00a8 B6EA0000 		.word	60086
 651 00ac 08001040 		.word	1074790408
 652 00b0 04001040 		.word	1074790404
 653 00b4 17000080 		.word	-2147483625
 654              		.cfi_endproc
 655              	.LFE8:
 656              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 657              		.section	.text.CySysLvdEnable,"ax",%progbits
 658              		.align	2
 659              		.global	CySysLvdEnable
 660              		.code	16
 661              		.thumb_func
 662              		.type	CySysLvdEnable, %function
 663              	CySysLvdEnable:
 664              	.LFB9:
 540:.\Generated_Source\PSoC4/CyLib.c **** 
 541:.\Generated_Source\PSoC4/CyLib.c **** #else
 542:.\Generated_Source\PSoC4/CyLib.c **** 
 543:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 544:.\Generated_Source\PSoC4/CyLib.c ****     {
 545:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 546:.\Generated_Source\PSoC4/CyLib.c **** 
 547:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 548:.\Generated_Source\PSoC4/CyLib.c ****         {
 549:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 550:.\Generated_Source\PSoC4/CyLib.c **** 
 551:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 552:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 553:.\Generated_Source\PSoC4/CyLib.c **** 
 554:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 555:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 556:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 559:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 560:.\Generated_Source\PSoC4/CyLib.c **** 
 561:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 562:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 563:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 566:.\Generated_Source\PSoC4/CyLib.c **** 
 567:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 568:.\Generated_Source\PSoC4/CyLib.c ****             {
 569:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 570:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 571:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 572:.\Generated_Source\PSoC4/CyLib.c **** 
 573:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 574:.\Generated_Source\PSoC4/CyLib.c **** 
 575:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 576:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 577:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 578:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 579:.\Generated_Source\PSoC4/CyLib.c ****             }
 580:.\Generated_Source\PSoC4/CyLib.c **** 
 581:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 23


 582:.\Generated_Source\PSoC4/CyLib.c ****         }
 583:.\Generated_Source\PSoC4/CyLib.c ****         else
 584:.\Generated_Source\PSoC4/CyLib.c ****         {
 585:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 586:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 587:.\Generated_Source\PSoC4/CyLib.c ****         }
 588:.\Generated_Source\PSoC4/CyLib.c ****     }
 589:.\Generated_Source\PSoC4/CyLib.c **** 
 590:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 591:.\Generated_Source\PSoC4/CyLib.c **** 
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 594:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 595:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 596:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 597:.\Generated_Source\PSoC4/CyLib.c ****     *
 598:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 599:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 600:.\Generated_Source\PSoC4/CyLib.c ****     *
 601:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 602:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 603:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 604:.\Generated_Source\PSoC4/CyLib.c ****     *
 605:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 606:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 607:.\Generated_Source\PSoC4/CyLib.c ****     *
 608:.\Generated_Source\PSoC4/CyLib.c ****     *
 609:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 610:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 611:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 612:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 613:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 614:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 615:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 616:.\Generated_Source\PSoC4/CyLib.c ****     *
 617:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 618:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 619:.\Generated_Source\PSoC4/CyLib.c ****     *
 620:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 621:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 622:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 623:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 624:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 625:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 626:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 627:.\Generated_Source\PSoC4/CyLib.c ****     *
 628:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 629:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 630:.\Generated_Source\PSoC4/CyLib.c ****     {
 631:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 636:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 637:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 638:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 24


 639:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 640:.\Generated_Source\PSoC4/CyLib.c ****     }
 641:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 647:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 648:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 649:.\Generated_Source\PSoC4/CyLib.c ****     *
 650:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 651:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 652:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 653:.\Generated_Source\PSoC4/CyLib.c ****     *
 654:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 655:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 656:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 657:.\Generated_Source\PSoC4/CyLib.c ****     *
 658:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 659:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 660:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 661:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 662:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 663:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 664:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 665:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 666:.\Generated_Source\PSoC4/CyLib.c ****     *
 667:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 668:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 669:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 670:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 671:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 672:.\Generated_Source\PSoC4/CyLib.c ****     *
 673:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 674:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 675:.\Generated_Source\PSoC4/CyLib.c ****     {
 676:.\Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the RF oscillator band gap */
 679:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c ****         /* Update trimming register */
 682:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 683:.\Generated_Source\PSoC4/CyLib.c **** 
 684:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the Crystal */
 685:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 686:.\Generated_Source\PSoC4/CyLib.c **** 
 687:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 688:.\Generated_Source\PSoC4/CyLib.c ****         {
 689:.\Generated_Source\PSoC4/CyLib.c ****             status = CYRET_TIMEOUT;
 690:.\Generated_Source\PSoC4/CyLib.c **** 
 691:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 694:.\Generated_Source\PSoC4/CyLib.c **** 
 695:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 25


 696:.\Generated_Source\PSoC4/CyLib.c ****                 {
 697:.\Generated_Source\PSoC4/CyLib.c ****                     status = CYRET_SUCCESS;
 698:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 699:.\Generated_Source\PSoC4/CyLib.c ****                 }
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c **** 
 702:.\Generated_Source\PSoC4/CyLib.c ****         }
 703:.\Generated_Source\PSoC4/CyLib.c **** 
 704:.\Generated_Source\PSoC4/CyLib.c ****         return(status);
 705:.\Generated_Source\PSoC4/CyLib.c ****     }
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c **** 
 708:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 709:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
 710:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 711:.\Generated_Source\PSoC4/CyLib.c ****     *
 712:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 713:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
 714:.\Generated_Source\PSoC4/CyLib.c ****     *
 715:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 716:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 717:.\Generated_Source\PSoC4/CyLib.c ****     *
 718:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 719:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 720:.\Generated_Source\PSoC4/CyLib.c ****     *
 721:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 722:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
 723:.\Generated_Source\PSoC4/CyLib.c ****     {
 724:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the RF oscillator band gap */
 725:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the Crystal */
 728:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 729:.\Generated_Source\PSoC4/CyLib.c ****     }
 730:.\Generated_Source\PSoC4/CyLib.c **** 
 731:.\Generated_Source\PSoC4/CyLib.c **** 
 732:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 733:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
 734:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 735:.\Generated_Source\PSoC4/CyLib.c ****     *
 736:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 737:.\Generated_Source\PSoC4/CyLib.c ****     *  Read status bit (50 ppm reached) for the megahertz crystal.
 738:.\Generated_Source\PSoC4/CyLib.c ****     *
 739:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 740:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 741:.\Generated_Source\PSoC4/CyLib.c ****     *
 742:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 743:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that XTAL output reached 50 ppm.
 744:.\Generated_Source\PSoC4/CyLib.c ****     *
 745:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 746:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
 747:.\Generated_Source\PSoC4/CyLib.c ****     {
 748:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT);
 749:.\Generated_Source\PSoC4/CyLib.c ****     }
 750:.\Generated_Source\PSoC4/CyLib.c **** 
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 26


 753:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteEcoDiv
 754:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 755:.\Generated_Source\PSoC4/CyLib.c ****     *
 756:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 757:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects value for the ECO divider.
 758:.\Generated_Source\PSoC4/CyLib.c ****     *
 759:.\Generated_Source\PSoC4/CyLib.c ****     *  The ECO must not be the HFCLK clock source when this function is called.
 760:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK source can be changed to the other clock source by call to the
 761:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
 762:.\Generated_Source\PSoC4/CyLib.c ****     *  function will not have any effect if compiler in release mode, and halt the
 763:.\Generated_Source\PSoC4/CyLib.c ****     *  CPU when compiler in debug mode.
 764:.\Generated_Source\PSoC4/CyLib.c ****     *
 765:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 766:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: Power of 2 divider selection.
 767:.\Generated_Source\PSoC4/CyLib.c ****     *
 768:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 769:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
 770:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
 771:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
 772:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
 773:.\Generated_Source\PSoC4/CyLib.c ****     *
 774:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 775:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 776:.\Generated_Source\PSoC4/CyLib.c ****     *
 777:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 778:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 779:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 780:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 781:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 782:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 783:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 784:.\Generated_Source\PSoC4/CyLib.c ****     *
 785:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 786:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteEcoDiv(uint32 divider)
 787:.\Generated_Source\PSoC4/CyLib.c ****     {
 788:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:.\Generated_Source\PSoC4/CyLib.c **** 
 790:.\Generated_Source\PSoC4/CyLib.c ****         if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK))
 791:.\Generated_Source\PSoC4/CyLib.c ****         {
 792:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 795:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 796:.\Generated_Source\PSoC4/CyLib.c **** 
 797:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 798:.\Generated_Source\PSoC4/CyLib.c ****         }
 799:.\Generated_Source\PSoC4/CyLib.c ****         else
 800:.\Generated_Source\PSoC4/CyLib.c ****         {
 801:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if ECO sources HFCLK */
 802:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 803:.\Generated_Source\PSoC4/CyLib.c ****         }
 804:.\Generated_Source\PSoC4/CyLib.c ****     }
 805:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 806:.\Generated_Source\PSoC4/CyLib.c **** 
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c **** 
 809:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 27


 810:.\Generated_Source\PSoC4/CyLib.c **** 
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 815:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
 816:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 817:.\Generated_Source\PSoC4/CyLib.c ****     *
 818:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 819:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
 820:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
 821:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
 822:.\Generated_Source\PSoC4/CyLib.c ****     *
 823:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 824:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
 825:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
 826:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
 827:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
 828:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
 829:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
 830:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
 831:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
 832:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
 833:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
 834:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
 835:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
 836:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
 837:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
 838:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
 839:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
 840:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
 841:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
 842:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
 843:.\Generated_Source\PSoC4/CyLib.c ****     *
 844:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 845:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 846:.\Generated_Source\PSoC4/CyLib.c ****     *
 847:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 848:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 665              		.loc 1 849 0
 666              		.cfi_startproc
 667 0000 80B5     		push	{r7, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 82B0     		sub	sp, sp, #8
 672              		.cfi_def_cfa_offset 16
 673 0004 00AF     		add	r7, sp, #0
 674              		.cfi_def_cfa_register 7
 675 0006 7860     		str	r0, [r7, #4]
 850:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 676              		.loc 1 851 0
 677 0008 144B     		ldr	r3, .L37
 678 000a 144A     		ldr	r2, .L37
 679 000c 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 28


 680 000e 0221     		mov	r1, #2
 681 0010 8A43     		bic	r2, r1
 682 0012 1A60     		str	r2, [r3]
 852:.\Generated_Source\PSoC4/CyLib.c **** 
 853:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 683              		.loc 1 854 0
 684 0014 124B     		ldr	r3, .L37+4
 685 0016 124A     		ldr	r2, .L37+4
 686 0018 1268     		ldr	r2, [r2]
 687 001a 1E21     		mov	r1, #30
 688 001c 101C     		mov	r0, r2
 689 001e 8843     		bic	r0, r1
 690 0020 011C     		mov	r1, r0
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 691              		.loc 1 855 0
 692 0022 7A68     		ldr	r2, [r7, #4]
 693 0024 5000     		lsl	r0, r2, #1
 694 0026 1E22     		mov	r2, #30
 695 0028 0240     		and	r2, r0
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 696              		.loc 1 854 0
 697 002a 0A43     		orr	r2, r1
 698 002c 1A60     		str	r2, [r3]
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 699              		.loc 1 858 0
 700 002e 0C4B     		ldr	r3, .L37+4
 701 0030 0B4A     		ldr	r2, .L37+4
 702 0032 1268     		ldr	r2, [r2]
 703 0034 0121     		mov	r1, #1
 704 0036 0A43     		orr	r2, r1
 705 0038 1A60     		str	r2, [r3]
 859:.\Generated_Source\PSoC4/CyLib.c **** 
 860:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 706              		.loc 1 861 0
 707 003a FA23     		mov	r3, #250
 708 003c 9B00     		lsl	r3, r3, #2
 709 003e 181C     		mov	r0, r3
 710 0040 FFF7FEFF 		bl	CyDelayUs
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 863:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 711              		.loc 1 864 0
 712 0044 FFF7FEFF 		bl	CySysLvdClearInterrupt
 865:.\Generated_Source\PSoC4/CyLib.c **** 
 866:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 713              		.loc 1 867 0
 714 0048 044B     		ldr	r3, .L37
 715 004a 044A     		ldr	r2, .L37
 716 004c 1268     		ldr	r2, [r2]
 717 004e 0221     		mov	r1, #2
 718 0050 0A43     		orr	r2, r1
 719 0052 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 29


 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 720              		.loc 1 868 0
 721 0054 BD46     		mov	sp, r7
 722 0056 02B0     		add	sp, sp, #8
 723              		@ sp needed
 724 0058 80BD     		pop	{r7, pc}
 725              	.L38:
 726 005a C046     		.align	2
 727              	.L37:
 728 005c 08000B40 		.word	1074462728
 729 0060 18000B40 		.word	1074462744
 730              		.cfi_endproc
 731              	.LFE9:
 732              		.size	CySysLvdEnable, .-CySysLvdEnable
 733              		.section	.text.CySysLvdDisable,"ax",%progbits
 734              		.align	2
 735              		.global	CySysLvdDisable
 736              		.code	16
 737              		.thumb_func
 738              		.type	CySysLvdDisable, %function
 739              	CySysLvdDisable:
 740              	.LFB10:
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 871:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 872:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
 873:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 874:.\Generated_Source\PSoC4/CyLib.c ****     *
 875:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 876:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
 877:.\Generated_Source\PSoC4/CyLib.c ****     *
 878:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 879:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 880:.\Generated_Source\PSoC4/CyLib.c ****     *
 881:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 882:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 883:.\Generated_Source\PSoC4/CyLib.c ****     *
 884:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 885:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
 886:.\Generated_Source\PSoC4/CyLib.c ****     {
 741              		.loc 1 886 0
 742              		.cfi_startproc
 743 0000 80B5     		push	{r7, lr}
 744              		.cfi_def_cfa_offset 8
 745              		.cfi_offset 7, -8
 746              		.cfi_offset 14, -4
 747 0002 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 887:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 749              		.loc 1 887 0
 750 0004 064B     		ldr	r3, .L40
 751 0006 064A     		ldr	r2, .L40
 752 0008 1268     		ldr	r2, [r2]
 753 000a 0221     		mov	r1, #2
 754 000c 8A43     		bic	r2, r1
 755 000e 1A60     		str	r2, [r3]
 888:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 30


 756              		.loc 1 888 0
 757 0010 044B     		ldr	r3, .L40+4
 758 0012 044A     		ldr	r2, .L40+4
 759 0014 1268     		ldr	r2, [r2]
 760 0016 0121     		mov	r1, #1
 761 0018 8A43     		bic	r2, r1
 762 001a 1A60     		str	r2, [r3]
 889:.\Generated_Source\PSoC4/CyLib.c ****     }
 763              		.loc 1 889 0
 764 001c BD46     		mov	sp, r7
 765              		@ sp needed
 766 001e 80BD     		pop	{r7, pc}
 767              	.L41:
 768              		.align	2
 769              	.L40:
 770 0020 08000B40 		.word	1074462728
 771 0024 18000B40 		.word	1074462744
 772              		.cfi_endproc
 773              	.LFE10:
 774              		.size	CySysLvdDisable, .-CySysLvdDisable
 775              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 776              		.align	2
 777              		.global	CySysLvdGetInterruptSource
 778              		.code	16
 779              		.thumb_func
 780              		.type	CySysLvdGetInterruptSource, %function
 781              	CySysLvdGetInterruptSource:
 782              	.LFB11:
 890:.\Generated_Source\PSoC4/CyLib.c **** 
 891:.\Generated_Source\PSoC4/CyLib.c **** 
 892:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
 894:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 895:.\Generated_Source\PSoC4/CyLib.c ****     *
 896:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 897:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
 898:.\Generated_Source\PSoC4/CyLib.c ****     *
 899:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 900:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 901:.\Generated_Source\PSoC4/CyLib.c ****     *
 902:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 903:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
 904:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
 905:.\Generated_Source\PSoC4/CyLib.c ****     *
 906:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 907:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
 908:.\Generated_Source\PSoC4/CyLib.c ****     {
 783              		.loc 1 908 0
 784              		.cfi_startproc
 785 0000 80B5     		push	{r7, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789 0002 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
 909:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 791              		.loc 1 909 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 31


 792 0004 034B     		ldr	r3, .L44
 793 0006 1A68     		ldr	r2, [r3]
 794 0008 0223     		mov	r3, #2
 795 000a 1340     		and	r3, r2
 910:.\Generated_Source\PSoC4/CyLib.c ****     }
 796              		.loc 1 910 0
 797 000c 181C     		mov	r0, r3
 798 000e BD46     		mov	sp, r7
 799              		@ sp needed
 800 0010 80BD     		pop	{r7, pc}
 801              	.L45:
 802 0012 C046     		.align	2
 803              	.L44:
 804 0014 04000B40 		.word	1074462724
 805              		.cfi_endproc
 806              	.LFE11:
 807              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 808              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 809              		.align	2
 810              		.global	CySysLvdClearInterrupt
 811              		.code	16
 812              		.thumb_func
 813              		.type	CySysLvdClearInterrupt, %function
 814              	CySysLvdClearInterrupt:
 815              	.LFB12:
 911:.\Generated_Source\PSoC4/CyLib.c **** 
 912:.\Generated_Source\PSoC4/CyLib.c **** 
 913:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 914:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
 915:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 916:.\Generated_Source\PSoC4/CyLib.c ****     *
 917:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 918:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
 919:.\Generated_Source\PSoC4/CyLib.c ****     *
 920:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 921:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 922:.\Generated_Source\PSoC4/CyLib.c ****     *
 923:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 924:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 927:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
 928:.\Generated_Source\PSoC4/CyLib.c ****     {
 816              		.loc 1 928 0
 817              		.cfi_startproc
 818 0000 80B5     		push	{r7, lr}
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 7, -8
 821              		.cfi_offset 14, -4
 822 0002 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 824              		.loc 1 929 0
 825 0004 024B     		ldr	r3, .L47
 826 0006 0222     		mov	r2, #2
 827 0008 1A60     		str	r2, [r3]
 930:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 32


 828              		.loc 1 930 0
 829 000a BD46     		mov	sp, r7
 830              		@ sp needed
 831 000c 80BD     		pop	{r7, pc}
 832              	.L48:
 833 000e C046     		.align	2
 834              	.L47:
 835 0010 04000B40 		.word	1074462724
 836              		.cfi_endproc
 837              	.LFE12:
 838              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 839              		.section	.text.CySysGetResetReason,"ax",%progbits
 840              		.align	2
 841              		.global	CySysGetResetReason
 842              		.code	16
 843              		.thumb_func
 844              		.type	CySysGetResetReason, %function
 845              	CySysGetResetReason:
 846              	.LFB13:
 931:.\Generated_Source\PSoC4/CyLib.c **** 
 932:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 933:.\Generated_Source\PSoC4/CyLib.c **** 
 934:.\Generated_Source\PSoC4/CyLib.c **** 
 935:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 936:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
 937:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 938:.\Generated_Source\PSoC4/CyLib.c **** *
 939:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 940:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
 941:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
 942:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
 943:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
 944:.\Generated_Source\PSoC4/CyLib.c **** *
 945:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 946:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
 947:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
 948:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
 949:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
 950:.\Generated_Source\PSoC4/CyLib.c **** *
 951:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 952:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
 953:.\Generated_Source\PSoC4/CyLib.c **** *
 954:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 955:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
 956:.\Generated_Source\PSoC4/CyLib.c **** {
 847              		.loc 1 956 0
 848              		.cfi_startproc
 849 0000 80B5     		push	{r7, lr}
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 84B0     		sub	sp, sp, #16
 854              		.cfi_def_cfa_offset 24
 855 0004 00AF     		add	r7, sp, #0
 856              		.cfi_def_cfa_register 7
 857 0006 7860     		str	r0, [r7, #4]
 957:.\Generated_Source\PSoC4/CyLib.c ****     uint32 status;
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 33


 958:.\Generated_Source\PSoC4/CyLib.c **** 
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 858              		.loc 1 959 0
 859 0008 7A68     		ldr	r2, [r7, #4]
 860 000a 1923     		mov	r3, #25
 861 000c 1340     		and	r3, r2
 862 000e 7B60     		str	r3, [r7, #4]
 960:.\Generated_Source\PSoC4/CyLib.c ****     status = CY_SYS_RES_CAUSE_REG &
 863              		.loc 1 960 0
 864 0010 064B     		ldr	r3, .L51
 865 0012 1A68     		ldr	r2, [r3]
 866 0014 1923     		mov	r3, #25
 867 0016 1340     		and	r3, r2
 868 0018 FB60     		str	r3, [r7, #12]
 961:.\Generated_Source\PSoC4/CyLib.c ****              (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 962:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 869              		.loc 1 962 0
 870 001a 044B     		ldr	r3, .L51
 871 001c 7A68     		ldr	r2, [r7, #4]
 872 001e 1A60     		str	r2, [r3]
 963:.\Generated_Source\PSoC4/CyLib.c **** 
 964:.\Generated_Source\PSoC4/CyLib.c ****     return (status);
 873              		.loc 1 964 0
 874 0020 FB68     		ldr	r3, [r7, #12]
 965:.\Generated_Source\PSoC4/CyLib.c **** }
 875              		.loc 1 965 0
 876 0022 181C     		mov	r0, r3
 877 0024 BD46     		mov	sp, r7
 878 0026 04B0     		add	sp, sp, #16
 879              		@ sp needed
 880 0028 80BD     		pop	{r7, pc}
 881              	.L52:
 882 002a C046     		.align	2
 883              	.L51:
 884 002c 00030B40 		.word	1074463488
 885              		.cfi_endproc
 886              	.LFE13:
 887              		.size	CySysGetResetReason, .-CySysGetResetReason
 888              		.section	.text.CyDisableInts,"ax",%progbits
 889              		.align	2
 890              		.global	CyDisableInts
 891              		.code	16
 892              		.thumb_func
 893              		.type	CyDisableInts, %function
 894              	CyDisableInts:
 895              	.LFB14:
 966:.\Generated_Source\PSoC4/CyLib.c **** 
 967:.\Generated_Source\PSoC4/CyLib.c **** 
 968:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 969:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
 970:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 971:.\Generated_Source\PSoC4/CyLib.c **** *
 972:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 973:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
 974:.\Generated_Source\PSoC4/CyLib.c **** *
 975:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 976:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 34


 977:.\Generated_Source\PSoC4/CyLib.c **** *
 978:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 979:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
 980:.\Generated_Source\PSoC4/CyLib.c **** *
 981:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 982:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
 983:.\Generated_Source\PSoC4/CyLib.c **** {
 896              		.loc 1 983 0
 897              		.cfi_startproc
 898 0000 80B5     		push	{r7, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 82B0     		sub	sp, sp, #8
 903              		.cfi_def_cfa_offset 16
 904 0004 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
 984:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
 987:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 906              		.loc 1 987 0
 907 0006 064B     		ldr	r3, .L55
 908 0008 1B68     		ldr	r3, [r3]
 909 000a 7B60     		str	r3, [r7, #4]
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
 990:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 910              		.loc 1 990 0
 911 000c 044B     		ldr	r3, .L55
 912 000e 0122     		mov	r2, #1
 913 0010 5242     		neg	r2, r2
 914 0012 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 915              		.loc 1 992 0
 916 0014 7B68     		ldr	r3, [r7, #4]
 993:.\Generated_Source\PSoC4/CyLib.c **** }
 917              		.loc 1 993 0
 918 0016 181C     		mov	r0, r3
 919 0018 BD46     		mov	sp, r7
 920 001a 02B0     		add	sp, sp, #8
 921              		@ sp needed
 922 001c 80BD     		pop	{r7, pc}
 923              	.L56:
 924 001e C046     		.align	2
 925              	.L55:
 926 0020 80E100E0 		.word	-536813184
 927              		.cfi_endproc
 928              	.LFE14:
 929              		.size	CyDisableInts, .-CyDisableInts
 930              		.section	.text.CyEnableInts,"ax",%progbits
 931              		.align	2
 932              		.global	CyEnableInts
 933              		.code	16
 934              		.thumb_func
 935              		.type	CyEnableInts, %function
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 35


 936              	CyEnableInts:
 937              	.LFB15:
 994:.\Generated_Source\PSoC4/CyLib.c **** 
 995:.\Generated_Source\PSoC4/CyLib.c **** 
 996:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
 998:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c **** *
1000:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1001:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
1002:.\Generated_Source\PSoC4/CyLib.c **** *
1003:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1004:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
1005:.\Generated_Source\PSoC4/CyLib.c **** *
1006:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1007:.\Generated_Source\PSoC4/CyLib.c **** *  None
1008:.\Generated_Source\PSoC4/CyLib.c **** *
1009:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1010:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
1011:.\Generated_Source\PSoC4/CyLib.c **** {
 938              		.loc 1 1011 0
 939              		.cfi_startproc
 940 0000 80B5     		push	{r7, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 7, -8
 943              		.cfi_offset 14, -4
 944 0002 82B0     		sub	sp, sp, #8
 945              		.cfi_def_cfa_offset 16
 946 0004 00AF     		add	r7, sp, #0
 947              		.cfi_def_cfa_register 7
 948 0006 7860     		str	r0, [r7, #4]
1012:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 949              		.loc 1 1012 0
 950 0008 024B     		ldr	r3, .L58
 951 000a 7A68     		ldr	r2, [r7, #4]
 952 000c 1A60     		str	r2, [r3]
1013:.\Generated_Source\PSoC4/CyLib.c **** }
 953              		.loc 1 1013 0
 954 000e BD46     		mov	sp, r7
 955 0010 02B0     		add	sp, sp, #8
 956              		@ sp needed
 957 0012 80BD     		pop	{r7, pc}
 958              	.L59:
 959              		.align	2
 960              	.L58:
 961 0014 00E100E0 		.word	-536813312
 962              		.cfi_endproc
 963              	.LFE15:
 964              		.size	CyEnableInts, .-CyEnableInts
 965              		.section	.text.CyIntSetSysVector,"ax",%progbits
 966              		.align	2
 967              		.global	CyIntSetSysVector
 968              		.code	16
 969              		.thumb_func
 970              		.type	CyIntSetSysVector, %function
 971              	CyIntSetSysVector:
 972              	.LFB16:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 36


1014:.\Generated_Source\PSoC4/CyLib.c **** 
1015:.\Generated_Source\PSoC4/CyLib.c **** 
1016:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1017:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
1018:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c **** *
1020:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1021:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
1022:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
1023:.\Generated_Source\PSoC4/CyLib.c **** *
1024:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1025:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1026:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1027:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1028:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1029:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1030:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1031:.\Generated_Source\PSoC4/CyLib.c **** *
1032:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
1033:.\Generated_Source\PSoC4/CyLib.c **** *
1034:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1035:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
1036:.\Generated_Source\PSoC4/CyLib.c **** *
1037:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1038:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
1039:.\Generated_Source\PSoC4/CyLib.c **** {
 973              		.loc 1 1039 0
 974              		.cfi_startproc
 975 0000 80B5     		push	{r7, lr}
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 84B0     		sub	sp, sp, #16
 980              		.cfi_def_cfa_offset 24
 981 0004 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 983 0006 021C     		mov	r2, r0
 984 0008 3960     		str	r1, [r7]
 985 000a FB1D     		add	r3, r7, #7
 986 000c 1A70     		strb	r2, [r3]
1040:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1041:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 987              		.loc 1 1041 0
 988 000e 8023     		mov	r3, #128
 989 0010 9B05     		lsl	r3, r3, #22
 990 0012 FB60     		str	r3, [r7, #12]
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 991              		.loc 1 1043 0
 992 0014 FB1D     		add	r3, r7, #7
 993 0016 1B78     		ldrb	r3, [r3]
 994 0018 0F2B     		cmp	r3, #15
 995 001a 02D9     		bls	.L61
 996              		.loc 1 1043 0 is_stmt 0 discriminator 1
 997 001c 0020     		mov	r0, #0
 998 001e FFF7FEFF 		bl	CyHalt
 999              	.L61:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 37


1044:.\Generated_Source\PSoC4/CyLib.c **** 
1045:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1000              		.loc 1 1046 0 is_stmt 1
 1001 0022 FB1D     		add	r3, r7, #7
 1002 0024 1B78     		ldrb	r3, [r3]
 1003 0026 9B00     		lsl	r3, r3, #2
 1004 0028 FA68     		ldr	r2, [r7, #12]
 1005 002a D318     		add	r3, r2, r3
 1006 002c 1B68     		ldr	r3, [r3]
 1007 002e BB60     		str	r3, [r7, #8]
1047:.\Generated_Source\PSoC4/CyLib.c **** 
1048:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1008              		.loc 1 1049 0
 1009 0030 FB1D     		add	r3, r7, #7
 1010 0032 1B78     		ldrb	r3, [r3]
 1011 0034 9B00     		lsl	r3, r3, #2
 1012 0036 FA68     		ldr	r2, [r7, #12]
 1013 0038 D318     		add	r3, r2, r3
 1014 003a 3A68     		ldr	r2, [r7]
 1015 003c 1A60     		str	r2, [r3]
1050:.\Generated_Source\PSoC4/CyLib.c **** 
1051:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1016              		.loc 1 1051 0
 1017 003e BB68     		ldr	r3, [r7, #8]
1052:.\Generated_Source\PSoC4/CyLib.c **** }
 1018              		.loc 1 1052 0
 1019 0040 181C     		mov	r0, r3
 1020 0042 BD46     		mov	sp, r7
 1021 0044 04B0     		add	sp, sp, #16
 1022              		@ sp needed
 1023 0046 80BD     		pop	{r7, pc}
 1024              		.cfi_endproc
 1025              	.LFE16:
 1026              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1027              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1028              		.align	2
 1029              		.global	CyIntGetSysVector
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	CyIntGetSysVector, %function
 1033              	CyIntGetSysVector:
 1034              	.LFB17:
1053:.\Generated_Source\PSoC4/CyLib.c **** 
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1056:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
1057:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1058:.\Generated_Source\PSoC4/CyLib.c **** *
1059:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1060:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
1061:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
1062:.\Generated_Source\PSoC4/CyLib.c **** *
1063:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1064:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1065:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 38


1066:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1067:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1068:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1069:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1070:.\Generated_Source\PSoC4/CyLib.c **** *
1071:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1072:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
1073:.\Generated_Source\PSoC4/CyLib.c **** *
1074:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1075:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
1076:.\Generated_Source\PSoC4/CyLib.c **** {
 1035              		.loc 1 1076 0
 1036              		.cfi_startproc
 1037 0000 80B5     		push	{r7, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 7, -8
 1040              		.cfi_offset 14, -4
 1041 0002 84B0     		sub	sp, sp, #16
 1042              		.cfi_def_cfa_offset 24
 1043 0004 00AF     		add	r7, sp, #0
 1044              		.cfi_def_cfa_register 7
 1045 0006 021C     		mov	r2, r0
 1046 0008 FB1D     		add	r3, r7, #7
 1047 000a 1A70     		strb	r2, [r3]
1077:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1048              		.loc 1 1077 0
 1049 000c 8023     		mov	r3, #128
 1050 000e 9B05     		lsl	r3, r3, #22
 1051 0010 FB60     		str	r3, [r7, #12]
1078:.\Generated_Source\PSoC4/CyLib.c **** 
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1052              		.loc 1 1079 0
 1053 0012 FB1D     		add	r3, r7, #7
 1054 0014 1B78     		ldrb	r3, [r3]
 1055 0016 0F2B     		cmp	r3, #15
 1056 0018 02D9     		bls	.L64
 1057              		.loc 1 1079 0 is_stmt 0 discriminator 1
 1058 001a 0020     		mov	r0, #0
 1059 001c FFF7FEFF 		bl	CyHalt
 1060              	.L64:
1080:.\Generated_Source\PSoC4/CyLib.c **** 
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1061              		.loc 1 1081 0 is_stmt 1
 1062 0020 FB1D     		add	r3, r7, #7
 1063 0022 1B78     		ldrb	r3, [r3]
 1064 0024 9B00     		lsl	r3, r3, #2
 1065 0026 FA68     		ldr	r2, [r7, #12]
 1066 0028 D318     		add	r3, r2, r3
 1067 002a 1B68     		ldr	r3, [r3]
1082:.\Generated_Source\PSoC4/CyLib.c **** }
 1068              		.loc 1 1082 0
 1069 002c 181C     		mov	r0, r3
 1070 002e BD46     		mov	sp, r7
 1071 0030 04B0     		add	sp, sp, #16
 1072              		@ sp needed
 1073 0032 80BD     		pop	{r7, pc}
 1074              		.cfi_endproc
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 39


 1075              	.LFE17:
 1076              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1077              		.section	.text.CyIntSetVector,"ax",%progbits
 1078              		.align	2
 1079              		.global	CyIntSetVector
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	CyIntSetVector, %function
 1083              	CyIntSetVector:
 1084              	.LFB18:
1083:.\Generated_Source\PSoC4/CyLib.c **** 
1084:.\Generated_Source\PSoC4/CyLib.c **** 
1085:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1086:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
1087:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1088:.\Generated_Source\PSoC4/CyLib.c **** *
1089:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1090:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
1091:.\Generated_Source\PSoC4/CyLib.c **** *
1092:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1093:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1094:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
1095:.\Generated_Source\PSoC4/CyLib.c **** *
1096:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1097:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
1098:.\Generated_Source\PSoC4/CyLib.c **** *
1099:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
1101:.\Generated_Source\PSoC4/CyLib.c **** {
 1085              		.loc 1 1101 0
 1086              		.cfi_startproc
 1087 0000 80B5     		push	{r7, lr}
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 84B0     		sub	sp, sp, #16
 1092              		.cfi_def_cfa_offset 24
 1093 0004 00AF     		add	r7, sp, #0
 1094              		.cfi_def_cfa_register 7
 1095 0006 021C     		mov	r2, r0
 1096 0008 3960     		str	r1, [r7]
 1097 000a FB1D     		add	r3, r7, #7
 1098 000c 1A70     		strb	r2, [r3]
1102:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1103:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1099              		.loc 1 1103 0
 1100 000e 8023     		mov	r3, #128
 1101 0010 9B05     		lsl	r3, r3, #22
 1102 0012 FB60     		str	r3, [r7, #12]
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1103              		.loc 1 1105 0
 1104 0014 FB1D     		add	r3, r7, #7
 1105 0016 1B78     		ldrb	r3, [r3]
 1106 0018 1F2B     		cmp	r3, #31
 1107 001a 02D9     		bls	.L67
 1108              		.loc 1 1105 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 40


 1109 001c 0020     		mov	r0, #0
 1110 001e FFF7FEFF 		bl	CyHalt
 1111              	.L67:
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1112              		.loc 1 1108 0 is_stmt 1
 1113 0022 FB1D     		add	r3, r7, #7
 1114 0024 1B78     		ldrb	r3, [r3]
 1115 0026 1033     		add	r3, r3, #16
 1116 0028 9B00     		lsl	r3, r3, #2
 1117 002a FA68     		ldr	r2, [r7, #12]
 1118 002c D318     		add	r3, r2, r3
 1119 002e 1B68     		ldr	r3, [r3]
 1120 0030 BB60     		str	r3, [r7, #8]
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1121              		.loc 1 1111 0
 1122 0032 FB1D     		add	r3, r7, #7
 1123 0034 1B78     		ldrb	r3, [r3]
 1124 0036 1033     		add	r3, r3, #16
 1125 0038 9B00     		lsl	r3, r3, #2
 1126 003a FA68     		ldr	r2, [r7, #12]
 1127 003c D318     		add	r3, r2, r3
 1128 003e 3A68     		ldr	r2, [r7]
 1129 0040 1A60     		str	r2, [r3]
1112:.\Generated_Source\PSoC4/CyLib.c **** 
1113:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1130              		.loc 1 1113 0
 1131 0042 BB68     		ldr	r3, [r7, #8]
1114:.\Generated_Source\PSoC4/CyLib.c **** }
 1132              		.loc 1 1114 0
 1133 0044 181C     		mov	r0, r3
 1134 0046 BD46     		mov	sp, r7
 1135 0048 04B0     		add	sp, sp, #16
 1136              		@ sp needed
 1137 004a 80BD     		pop	{r7, pc}
 1138              		.cfi_endproc
 1139              	.LFE18:
 1140              		.size	CyIntSetVector, .-CyIntSetVector
 1141              		.section	.text.CyIntGetVector,"ax",%progbits
 1142              		.align	2
 1143              		.global	CyIntGetVector
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	CyIntGetVector, %function
 1147              	CyIntGetVector:
 1148              	.LFB19:
1115:.\Generated_Source\PSoC4/CyLib.c **** 
1116:.\Generated_Source\PSoC4/CyLib.c **** 
1117:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
1119:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/CyLib.c **** *
1121:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1122:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 41


1123:.\Generated_Source\PSoC4/CyLib.c **** *
1124:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1125:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1126:.\Generated_Source\PSoC4/CyLib.c **** *
1127:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1128:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
1129:.\Generated_Source\PSoC4/CyLib.c **** *
1130:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1131:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
1132:.\Generated_Source\PSoC4/CyLib.c **** {
 1149              		.loc 1 1132 0
 1150              		.cfi_startproc
 1151 0000 80B5     		push	{r7, lr}
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 7, -8
 1154              		.cfi_offset 14, -4
 1155 0002 84B0     		sub	sp, sp, #16
 1156              		.cfi_def_cfa_offset 24
 1157 0004 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
 1159 0006 021C     		mov	r2, r0
 1160 0008 FB1D     		add	r3, r7, #7
 1161 000a 1A70     		strb	r2, [r3]
1133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1162              		.loc 1 1133 0
 1163 000c 8023     		mov	r3, #128
 1164 000e 9B05     		lsl	r3, r3, #22
 1165 0010 FB60     		str	r3, [r7, #12]
1134:.\Generated_Source\PSoC4/CyLib.c **** 
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1166              		.loc 1 1135 0
 1167 0012 FB1D     		add	r3, r7, #7
 1168 0014 1B78     		ldrb	r3, [r3]
 1169 0016 1F2B     		cmp	r3, #31
 1170 0018 02D9     		bls	.L70
 1171              		.loc 1 1135 0 is_stmt 0 discriminator 1
 1172 001a 0020     		mov	r0, #0
 1173 001c FFF7FEFF 		bl	CyHalt
 1174              	.L70:
1136:.\Generated_Source\PSoC4/CyLib.c **** 
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1175              		.loc 1 1137 0 is_stmt 1
 1176 0020 FB1D     		add	r3, r7, #7
 1177 0022 1B78     		ldrb	r3, [r3]
 1178 0024 1033     		add	r3, r3, #16
 1179 0026 9B00     		lsl	r3, r3, #2
 1180 0028 FA68     		ldr	r2, [r7, #12]
 1181 002a D318     		add	r3, r2, r3
 1182 002c 1B68     		ldr	r3, [r3]
1138:.\Generated_Source\PSoC4/CyLib.c **** }
 1183              		.loc 1 1138 0
 1184 002e 181C     		mov	r0, r3
 1185 0030 BD46     		mov	sp, r7
 1186 0032 04B0     		add	sp, sp, #16
 1187              		@ sp needed
 1188 0034 80BD     		pop	{r7, pc}
 1189              		.cfi_endproc
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 42


 1190              	.LFE19:
 1191              		.size	CyIntGetVector, .-CyIntGetVector
 1192              		.section	.text.CyIntSetPriority,"ax",%progbits
 1193              		.align	2
 1194              		.global	CyIntSetPriority
 1195              		.code	16
 1196              		.thumb_func
 1197              		.type	CyIntSetPriority, %function
 1198              	CyIntSetPriority:
 1199              	.LFB20:
1139:.\Generated_Source\PSoC4/CyLib.c **** 
1140:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
1142:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/CyLib.c **** *
1144:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1145:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
1146:.\Generated_Source\PSoC4/CyLib.c **** *
1147:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1148:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
1149:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1150:.\Generated_Source\PSoC4/CyLib.c **** *
1151:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1152:.\Generated_Source\PSoC4/CyLib.c **** *  None
1153:.\Generated_Source\PSoC4/CyLib.c **** *
1154:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
1156:.\Generated_Source\PSoC4/CyLib.c **** {
 1200              		.loc 1 1156 0
 1201              		.cfi_startproc
 1202 0000 90B5     		push	{r4, r7, lr}
 1203              		.cfi_def_cfa_offset 12
 1204              		.cfi_offset 4, -12
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 87B0     		sub	sp, sp, #28
 1208              		.cfi_def_cfa_offset 40
 1209 0004 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 1211 0006 0A1C     		mov	r2, r1
 1212 0008 FB1D     		add	r3, r7, #7
 1213 000a 011C     		add	r1, r0, #0
 1214 000c 1970     		strb	r1, [r3]
 1215 000e BB1D     		add	r3, r7, #6
 1216 0010 1A70     		strb	r2, [r3]
1157:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
1158:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
1159:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
1160:.\Generated_Source\PSoC4/CyLib.c **** 
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1217              		.loc 1 1161 0
 1218 0012 BB1D     		add	r3, r7, #6
 1219 0014 1B78     		ldrb	r3, [r3]
 1220 0016 032B     		cmp	r3, #3
 1221 0018 02D9     		bls	.L73
 1222              		.loc 1 1161 0 is_stmt 0 discriminator 1
 1223 001a 0020     		mov	r0, #0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 43


 1224 001c FFF7FEFF 		bl	CyHalt
 1225              	.L73:
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1226              		.loc 1 1162 0 is_stmt 1
 1227 0020 FB1D     		add	r3, r7, #7
 1228 0022 1B78     		ldrb	r3, [r3]
 1229 0024 1F2B     		cmp	r3, #31
 1230 0026 02D9     		bls	.L74
 1231              		.loc 1 1162 0 is_stmt 0 discriminator 1
 1232 0028 0020     		mov	r0, #0
 1233 002a FFF7FEFF 		bl	CyHalt
 1234              	.L74:
1163:.\Generated_Source\PSoC4/CyLib.c **** 
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1235              		.loc 1 1164 0 is_stmt 1
 1236 002e FB1D     		add	r3, r7, #7
 1237 0030 1A78     		ldrb	r2, [r3]
 1238 0032 0323     		mov	r3, #3
 1239 0034 1340     		and	r3, r2
 1240 0036 DB00     		lsl	r3, r3, #3
 1241 0038 0633     		add	r3, r3, #6
 1242 003a 7B61     		str	r3, [r7, #20]
1165:.\Generated_Source\PSoC4/CyLib.c **** 
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1243              		.loc 1 1166 0
 1244 003c 3C1C     		mov	r4, r7
 1245 003e 1334     		add	r4, r4, #19
 1246 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1247 0044 031C     		mov	r3, r0
 1248 0046 2370     		strb	r3, [r4]
1167:.\Generated_Source\PSoC4/CyLib.c **** 
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1249              		.loc 1 1168 0
 1250 0048 FB1D     		add	r3, r7, #7
 1251 004a 1B78     		ldrb	r3, [r3]
 1252 004c 9B08     		lsr	r3, r3, #2
 1253 004e DBB2     		uxtb	r3, r3
 1254 0050 9B00     		lsl	r3, r3, #2
 1255 0052 1449     		ldr	r1, .L75
 1256 0054 5B18     		add	r3, r3, r1
 1257 0056 1B68     		ldr	r3, [r3]
 1258 0058 FB60     		str	r3, [r7, #12]
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1259              		.loc 1 1169 0
 1260 005a 7B69     		ldr	r3, [r7, #20]
 1261 005c 0322     		mov	r2, #3
 1262 005e 111C     		mov	r1, r2
 1263 0060 9940     		lsl	r1, r1, r3
 1264 0062 0B1C     		mov	r3, r1
 1265 0064 DA43     		mvn	r2, r3
 1266 0066 FB68     		ldr	r3, [r7, #12]
 1267 0068 1340     		and	r3, r2
 1268 006a FB60     		str	r3, [r7, #12]
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1269              		.loc 1 1170 0
 1270 006c BB1D     		add	r3, r7, #6
 1271 006e 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 44


 1272 0070 7B69     		ldr	r3, [r7, #20]
 1273 0072 111C     		mov	r1, r2
 1274 0074 9940     		lsl	r1, r1, r3
 1275 0076 0B1C     		mov	r3, r1
 1276 0078 FA68     		ldr	r2, [r7, #12]
 1277 007a 1343     		orr	r3, r2
 1278 007c FB60     		str	r3, [r7, #12]
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1279              		.loc 1 1171 0
 1280 007e FB1D     		add	r3, r7, #7
 1281 0080 1B78     		ldrb	r3, [r3]
 1282 0082 9B08     		lsr	r3, r3, #2
 1283 0084 DBB2     		uxtb	r3, r3
 1284 0086 9B00     		lsl	r3, r3, #2
 1285 0088 064A     		ldr	r2, .L75
 1286 008a 9B18     		add	r3, r3, r2
 1287 008c FA68     		ldr	r2, [r7, #12]
 1288 008e 1A60     		str	r2, [r3]
1172:.\Generated_Source\PSoC4/CyLib.c **** 
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1289              		.loc 1 1173 0
 1290 0090 3B1C     		mov	r3, r7
 1291 0092 1333     		add	r3, r3, #19
 1292 0094 1B78     		ldrb	r3, [r3]
 1293 0096 181C     		mov	r0, r3
 1294 0098 FFF7FEFF 		bl	CyExitCriticalSection
1174:.\Generated_Source\PSoC4/CyLib.c **** }
 1295              		.loc 1 1174 0
 1296 009c BD46     		mov	sp, r7
 1297 009e 07B0     		add	sp, sp, #28
 1298              		@ sp needed
 1299 00a0 90BD     		pop	{r4, r7, pc}
 1300              	.L76:
 1301 00a2 C046     		.align	2
 1302              	.L75:
 1303 00a4 00E400E0 		.word	-536812544
 1304              		.cfi_endproc
 1305              	.LFE20:
 1306              		.size	CyIntSetPriority, .-CyIntSetPriority
 1307              		.section	.text.CyIntGetPriority,"ax",%progbits
 1308              		.align	2
 1309              		.global	CyIntGetPriority
 1310              		.code	16
 1311              		.thumb_func
 1312              		.type	CyIntGetPriority, %function
 1313              	CyIntGetPriority:
 1314              	.LFB21:
1175:.\Generated_Source\PSoC4/CyLib.c **** 
1176:.\Generated_Source\PSoC4/CyLib.c **** 
1177:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1178:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
1179:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1180:.\Generated_Source\PSoC4/CyLib.c **** *
1181:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1182:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
1183:.\Generated_Source\PSoC4/CyLib.c **** *
1184:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 45


1185:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1186:.\Generated_Source\PSoC4/CyLib.c **** *
1187:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1188:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
1189:.\Generated_Source\PSoC4/CyLib.c **** *
1190:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
1192:.\Generated_Source\PSoC4/CyLib.c **** {
 1315              		.loc 1 1192 0
 1316              		.cfi_startproc
 1317 0000 80B5     		push	{r7, lr}
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 7, -8
 1320              		.cfi_offset 14, -4
 1321 0002 84B0     		sub	sp, sp, #16
 1322              		.cfi_def_cfa_offset 24
 1323 0004 00AF     		add	r7, sp, #0
 1324              		.cfi_def_cfa_register 7
 1325 0006 021C     		mov	r2, r0
 1326 0008 FB1D     		add	r3, r7, #7
 1327 000a 1A70     		strb	r2, [r3]
1193:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1328              		.loc 1 1195 0
 1329 000c FB1D     		add	r3, r7, #7
 1330 000e 1B78     		ldrb	r3, [r3]
 1331 0010 1F2B     		cmp	r3, #31
 1332 0012 02D9     		bls	.L78
 1333              		.loc 1 1195 0 is_stmt 0 discriminator 1
 1334 0014 0020     		mov	r0, #0
 1335 0016 FFF7FEFF 		bl	CyHalt
 1336              	.L78:
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1337              		.loc 1 1197 0 is_stmt 1
 1338 001a FB1D     		add	r3, r7, #7
 1339 001c 1B78     		ldrb	r3, [r3]
 1340 001e 9B08     		lsr	r3, r3, #2
 1341 0020 DBB2     		uxtb	r3, r3
 1342 0022 9B00     		lsl	r3, r3, #2
 1343 0024 0B4A     		ldr	r2, .L80
 1344 0026 9B18     		add	r3, r3, r2
 1345 0028 1A68     		ldr	r2, [r3]
 1346 002a FB1D     		add	r3, r7, #7
 1347 002c 1978     		ldrb	r1, [r3]
 1348 002e 0323     		mov	r3, #3
 1349 0030 0B40     		and	r3, r1
 1350 0032 DB00     		lsl	r3, r3, #3
 1351 0034 0633     		add	r3, r3, #6
 1352 0036 DA40     		lsr	r2, r2, r3
 1353 0038 3B1C     		mov	r3, r7
 1354 003a 0F33     		add	r3, r3, #15
 1355 003c 1A70     		strb	r2, [r3]
1198:.\Generated_Source\PSoC4/CyLib.c **** 
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1356              		.loc 1 1199 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 46


 1357 003e 3B1C     		mov	r3, r7
 1358 0040 0F33     		add	r3, r3, #15
 1359 0042 1A78     		ldrb	r2, [r3]
 1360 0044 0323     		mov	r3, #3
 1361 0046 1340     		and	r3, r2
 1362 0048 DBB2     		uxtb	r3, r3
1200:.\Generated_Source\PSoC4/CyLib.c **** }
 1363              		.loc 1 1200 0
 1364 004a 181C     		mov	r0, r3
 1365 004c BD46     		mov	sp, r7
 1366 004e 04B0     		add	sp, sp, #16
 1367              		@ sp needed
 1368 0050 80BD     		pop	{r7, pc}
 1369              	.L81:
 1370 0052 C046     		.align	2
 1371              	.L80:
 1372 0054 00E400E0 		.word	-536812544
 1373              		.cfi_endproc
 1374              	.LFE21:
 1375              		.size	CyIntGetPriority, .-CyIntGetPriority
 1376              		.section	.text.CyIntEnable,"ax",%progbits
 1377              		.align	2
 1378              		.global	CyIntEnable
 1379              		.code	16
 1380              		.thumb_func
 1381              		.type	CyIntEnable, %function
 1382              	CyIntEnable:
 1383              	.LFB22:
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
1205:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/CyLib.c **** *
1207:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1208:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
1209:.\Generated_Source\PSoC4/CyLib.c **** *
1210:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1211:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1212:.\Generated_Source\PSoC4/CyLib.c **** *
1213:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1214:.\Generated_Source\PSoC4/CyLib.c **** *  None
1215:.\Generated_Source\PSoC4/CyLib.c **** *
1216:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1217:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
1218:.\Generated_Source\PSoC4/CyLib.c **** {
 1384              		.loc 1 1218 0
 1385              		.cfi_startproc
 1386 0000 80B5     		push	{r7, lr}
 1387              		.cfi_def_cfa_offset 8
 1388              		.cfi_offset 7, -8
 1389              		.cfi_offset 14, -4
 1390 0002 82B0     		sub	sp, sp, #8
 1391              		.cfi_def_cfa_offset 16
 1392 0004 00AF     		add	r7, sp, #0
 1393              		.cfi_def_cfa_register 7
 1394 0006 021C     		mov	r2, r0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 47


 1395 0008 FB1D     		add	r3, r7, #7
 1396 000a 1A70     		strb	r2, [r3]
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1397              		.loc 1 1219 0
 1398 000c 064B     		ldr	r3, .L83
 1399 000e FA1D     		add	r2, r7, #7
 1400 0010 1178     		ldrb	r1, [r2]
 1401 0012 1F22     		mov	r2, #31
 1402 0014 0A40     		and	r2, r1
 1403 0016 0121     		mov	r1, #1
 1404 0018 081C     		mov	r0, r1
 1405 001a 9040     		lsl	r0, r0, r2
 1406 001c 021C     		mov	r2, r0
 1407 001e 1A60     		str	r2, [r3]
1220:.\Generated_Source\PSoC4/CyLib.c **** }
 1408              		.loc 1 1220 0
 1409 0020 BD46     		mov	sp, r7
 1410 0022 02B0     		add	sp, sp, #8
 1411              		@ sp needed
 1412 0024 80BD     		pop	{r7, pc}
 1413              	.L84:
 1414 0026 C046     		.align	2
 1415              	.L83:
 1416 0028 00E100E0 		.word	-536813312
 1417              		.cfi_endproc
 1418              	.LFE22:
 1419              		.size	CyIntEnable, .-CyIntEnable
 1420              		.section	.text.CyIntGetState,"ax",%progbits
 1421              		.align	2
 1422              		.global	CyIntGetState
 1423              		.code	16
 1424              		.thumb_func
 1425              		.type	CyIntGetState, %function
 1426              	CyIntGetState:
 1427              	.LFB23:
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
1225:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c **** *
1227:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
1229:.\Generated_Source\PSoC4/CyLib.c **** *
1230:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1231:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1232:.\Generated_Source\PSoC4/CyLib.c **** *
1233:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1234:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
1235:.\Generated_Source\PSoC4/CyLib.c **** *
1236:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
1238:.\Generated_Source\PSoC4/CyLib.c **** {
 1428              		.loc 1 1238 0
 1429              		.cfi_startproc
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 48


 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 82B0     		sub	sp, sp, #8
 1435              		.cfi_def_cfa_offset 16
 1436 0004 00AF     		add	r7, sp, #0
 1437              		.cfi_def_cfa_register 7
 1438 0006 021C     		mov	r2, r0
 1439 0008 FB1D     		add	r3, r7, #7
 1440 000a 1A70     		strb	r2, [r3]
1239:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
1240:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1441              		.loc 1 1240 0
 1442 000c 084B     		ldr	r3, .L87
 1443 000e 1A68     		ldr	r2, [r3]
 1444 0010 FB1D     		add	r3, r7, #7
 1445 0012 1978     		ldrb	r1, [r3]
 1446 0014 1F23     		mov	r3, #31
 1447 0016 0B40     		and	r3, r1
 1448 0018 111C     		mov	r1, r2
 1449 001a D940     		lsr	r1, r1, r3
 1450 001c 0B1C     		mov	r3, r1
 1451 001e DAB2     		uxtb	r2, r3
 1452 0020 0123     		mov	r3, #1
 1453 0022 1340     		and	r3, r2
 1454 0024 DBB2     		uxtb	r3, r3
1241:.\Generated_Source\PSoC4/CyLib.c **** }
 1455              		.loc 1 1241 0
 1456 0026 181C     		mov	r0, r3
 1457 0028 BD46     		mov	sp, r7
 1458 002a 02B0     		add	sp, sp, #8
 1459              		@ sp needed
 1460 002c 80BD     		pop	{r7, pc}
 1461              	.L88:
 1462 002e C046     		.align	2
 1463              	.L87:
 1464 0030 00E100E0 		.word	-536813312
 1465              		.cfi_endproc
 1466              	.LFE23:
 1467              		.size	CyIntGetState, .-CyIntGetState
 1468              		.section	.text.CyIntDisable,"ax",%progbits
 1469              		.align	2
 1470              		.global	CyIntDisable
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	CyIntDisable, %function
 1474              	CyIntDisable:
 1475              	.LFB24:
1242:.\Generated_Source\PSoC4/CyLib.c **** 
1243:.\Generated_Source\PSoC4/CyLib.c **** 
1244:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1245:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
1246:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1247:.\Generated_Source\PSoC4/CyLib.c **** *
1248:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1249:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
1250:.\Generated_Source\PSoC4/CyLib.c **** *
1251:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 49


1252:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
1253:.\Generated_Source\PSoC4/CyLib.c **** *
1254:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1255:.\Generated_Source\PSoC4/CyLib.c **** *  None
1256:.\Generated_Source\PSoC4/CyLib.c **** *
1257:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1258:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
1259:.\Generated_Source\PSoC4/CyLib.c **** {
 1476              		.loc 1 1259 0
 1477              		.cfi_startproc
 1478 0000 80B5     		push	{r7, lr}
 1479              		.cfi_def_cfa_offset 8
 1480              		.cfi_offset 7, -8
 1481              		.cfi_offset 14, -4
 1482 0002 82B0     		sub	sp, sp, #8
 1483              		.cfi_def_cfa_offset 16
 1484 0004 00AF     		add	r7, sp, #0
 1485              		.cfi_def_cfa_register 7
 1486 0006 021C     		mov	r2, r0
 1487 0008 FB1D     		add	r3, r7, #7
 1488 000a 1A70     		strb	r2, [r3]
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1489              		.loc 1 1260 0
 1490 000c 064B     		ldr	r3, .L90
 1491 000e FA1D     		add	r2, r7, #7
 1492 0010 1178     		ldrb	r1, [r2]
 1493 0012 1F22     		mov	r2, #31
 1494 0014 0A40     		and	r2, r1
 1495 0016 0121     		mov	r1, #1
 1496 0018 081C     		mov	r0, r1
 1497 001a 9040     		lsl	r0, r0, r2
 1498 001c 021C     		mov	r2, r0
 1499 001e 1A60     		str	r2, [r3]
1261:.\Generated_Source\PSoC4/CyLib.c **** }
 1500              		.loc 1 1261 0
 1501 0020 BD46     		mov	sp, r7
 1502 0022 02B0     		add	sp, sp, #8
 1503              		@ sp needed
 1504 0024 80BD     		pop	{r7, pc}
 1505              	.L91:
 1506 0026 C046     		.align	2
 1507              	.L90:
 1508 0028 80E100E0 		.word	-536813184
 1509              		.cfi_endproc
 1510              	.LFE24:
 1511              		.size	CyIntDisable, .-CyIntDisable
 1512              		.section	.text.CyIntSetPending,"ax",%progbits
 1513              		.align	2
 1514              		.global	CyIntSetPending
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	CyIntSetPending, %function
 1518              	CyIntSetPending:
 1519              	.LFB25:
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 50


1265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1266:.\Generated_Source\PSoC4/CyLib.c **** *
1267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1268:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
1269:.\Generated_Source\PSoC4/CyLib.c **** *
1270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1272:.\Generated_Source\PSoC4/CyLib.c **** *
1273:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1274:.\Generated_Source\PSoC4/CyLib.c **** *  None
1275:.\Generated_Source\PSoC4/CyLib.c **** *
1276:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1277:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
1278:.\Generated_Source\PSoC4/CyLib.c **** {
 1520              		.loc 1 1278 0
 1521              		.cfi_startproc
 1522 0000 80B5     		push	{r7, lr}
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 82B0     		sub	sp, sp, #8
 1527              		.cfi_def_cfa_offset 16
 1528 0004 00AF     		add	r7, sp, #0
 1529              		.cfi_def_cfa_register 7
 1530 0006 021C     		mov	r2, r0
 1531 0008 FB1D     		add	r3, r7, #7
 1532 000a 1A70     		strb	r2, [r3]
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1533              		.loc 1 1279 0
 1534 000c 064B     		ldr	r3, .L93
 1535 000e FA1D     		add	r2, r7, #7
 1536 0010 1178     		ldrb	r1, [r2]
 1537 0012 1F22     		mov	r2, #31
 1538 0014 0A40     		and	r2, r1
 1539 0016 0121     		mov	r1, #1
 1540 0018 081C     		mov	r0, r1
 1541 001a 9040     		lsl	r0, r0, r2
 1542 001c 021C     		mov	r2, r0
 1543 001e 1A60     		str	r2, [r3]
1280:.\Generated_Source\PSoC4/CyLib.c **** }
 1544              		.loc 1 1280 0
 1545 0020 BD46     		mov	sp, r7
 1546 0022 02B0     		add	sp, sp, #8
 1547              		@ sp needed
 1548 0024 80BD     		pop	{r7, pc}
 1549              	.L94:
 1550 0026 C046     		.align	2
 1551              	.L93:
 1552 0028 00E200E0 		.word	-536813056
 1553              		.cfi_endproc
 1554              	.LFE25:
 1555              		.size	CyIntSetPending, .-CyIntSetPending
 1556              		.section	.text.CyIntClearPending,"ax",%progbits
 1557              		.align	2
 1558              		.global	CyIntClearPending
 1559              		.code	16
 1560              		.thumb_func
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 51


 1561              		.type	CyIntClearPending, %function
 1562              	CyIntClearPending:
 1563              	.LFB26:
1281:.\Generated_Source\PSoC4/CyLib.c **** 
1282:.\Generated_Source\PSoC4/CyLib.c **** 
1283:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1284:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
1285:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1286:.\Generated_Source\PSoC4/CyLib.c **** *
1287:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1288:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
1289:.\Generated_Source\PSoC4/CyLib.c **** *
1290:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1291:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1292:.\Generated_Source\PSoC4/CyLib.c **** *
1293:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1294:.\Generated_Source\PSoC4/CyLib.c **** *  None
1295:.\Generated_Source\PSoC4/CyLib.c **** *
1296:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1297:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
1298:.\Generated_Source\PSoC4/CyLib.c **** {
 1564              		.loc 1 1298 0
 1565              		.cfi_startproc
 1566 0000 80B5     		push	{r7, lr}
 1567              		.cfi_def_cfa_offset 8
 1568              		.cfi_offset 7, -8
 1569              		.cfi_offset 14, -4
 1570 0002 82B0     		sub	sp, sp, #8
 1571              		.cfi_def_cfa_offset 16
 1572 0004 00AF     		add	r7, sp, #0
 1573              		.cfi_def_cfa_register 7
 1574 0006 021C     		mov	r2, r0
 1575 0008 FB1D     		add	r3, r7, #7
 1576 000a 1A70     		strb	r2, [r3]
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1577              		.loc 1 1299 0
 1578 000c 064B     		ldr	r3, .L96
 1579 000e FA1D     		add	r2, r7, #7
 1580 0010 1178     		ldrb	r1, [r2]
 1581 0012 1F22     		mov	r2, #31
 1582 0014 0A40     		and	r2, r1
 1583 0016 0121     		mov	r1, #1
 1584 0018 081C     		mov	r0, r1
 1585 001a 9040     		lsl	r0, r0, r2
 1586 001c 021C     		mov	r2, r0
 1587 001e 1A60     		str	r2, [r3]
1300:.\Generated_Source\PSoC4/CyLib.c **** }
 1588              		.loc 1 1300 0
 1589 0020 BD46     		mov	sp, r7
 1590 0022 02B0     		add	sp, sp, #8
 1591              		@ sp needed
 1592 0024 80BD     		pop	{r7, pc}
 1593              	.L97:
 1594 0026 C046     		.align	2
 1595              	.L96:
 1596 0028 80E200E0 		.word	-536812928
 1597              		.cfi_endproc
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 52


 1598              	.LFE26:
 1599              		.size	CyIntClearPending, .-CyIntClearPending
 1600              		.section	.text.CyHalt,"ax",%progbits
 1601              		.align	2
 1602              		.global	CyHalt
 1603              		.code	16
 1604              		.thumb_func
 1605              		.type	CyHalt, %function
 1606              	CyHalt:
 1607              	.LFB27:
1301:.\Generated_Source\PSoC4/CyLib.c **** 
1302:.\Generated_Source\PSoC4/CyLib.c **** 
1303:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1304:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
1305:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1306:.\Generated_Source\PSoC4/CyLib.c **** *
1307:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1308:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
1309:.\Generated_Source\PSoC4/CyLib.c **** *
1310:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1311:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
1312:.\Generated_Source\PSoC4/CyLib.c **** *
1313:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1314:.\Generated_Source\PSoC4/CyLib.c **** *  None
1315:.\Generated_Source\PSoC4/CyLib.c **** *
1316:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
1318:.\Generated_Source\PSoC4/CyLib.c **** {
 1608              		.loc 1 1318 0
 1609              		.cfi_startproc
 1610 0000 80B5     		push	{r7, lr}
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 7, -8
 1613              		.cfi_offset 14, -4
 1614 0002 82B0     		sub	sp, sp, #8
 1615              		.cfi_def_cfa_offset 16
 1616 0004 00AF     		add	r7, sp, #0
 1617              		.cfi_def_cfa_register 7
 1618 0006 021C     		mov	r2, r0
 1619 0008 FB1D     		add	r3, r7, #7
 1620 000a 1A70     		strb	r2, [r3]
1319:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
1320:.\Generated_Source\PSoC4/CyLib.c ****     {
1321:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
1322:.\Generated_Source\PSoC4/CyLib.c ****     }
1323:.\Generated_Source\PSoC4/CyLib.c **** 
1324:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
1325:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
1326:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
1327:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1621              		.loc 1 1327 0
 1622              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 1623 000c 01BE     		    bkpt    1
 1624              	@ 0 "" 2
1328:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
1329:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
1330:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 53


1331:.\Generated_Source\PSoC4/CyLib.c **** }
 1625              		.loc 1 1331 0
 1626              		.code	16
 1627 000e BD46     		mov	sp, r7
 1628 0010 02B0     		add	sp, sp, #8
 1629              		@ sp needed
 1630 0012 80BD     		pop	{r7, pc}
 1631              		.cfi_endproc
 1632              	.LFE27:
 1633              		.size	CyHalt, .-CyHalt
 1634              		.section	.text.CySoftwareReset,"ax",%progbits
 1635              		.align	2
 1636              		.global	CySoftwareReset
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CySoftwareReset, %function
 1640              	CySoftwareReset:
 1641              	.LFB28:
1332:.\Generated_Source\PSoC4/CyLib.c **** 
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1335:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
1336:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1337:.\Generated_Source\PSoC4/CyLib.c **** *
1338:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1339:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
1340:.\Generated_Source\PSoC4/CyLib.c **** *
1341:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1342:.\Generated_Source\PSoC4/CyLib.c **** *  None
1343:.\Generated_Source\PSoC4/CyLib.c **** *
1344:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1345:.\Generated_Source\PSoC4/CyLib.c **** *  None
1346:.\Generated_Source\PSoC4/CyLib.c **** *
1347:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
1349:.\Generated_Source\PSoC4/CyLib.c **** {
 1642              		.loc 1 1349 0
 1643              		.cfi_startproc
 1644 0000 80B5     		push	{r7, lr}
 1645              		.cfi_def_cfa_offset 8
 1646              		.cfi_offset 7, -8
 1647              		.cfi_offset 14, -4
 1648 0002 00AF     		add	r7, sp, #0
 1649              		.cfi_def_cfa_register 7
1350:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
1351:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
1352:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
1353:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1650              		.loc 1 1354 0
 1651 0004 044B     		ldr	r3, .L100
 1652 0006 044A     		ldr	r2, .L100
 1653 0008 1268     		ldr	r2, [r2]
 1654 000a 1204     		lsl	r2, r2, #16
 1655 000c 120C     		lsr	r2, r2, #16
1355:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1656              		.loc 1 1355 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 54


 1657 000e 0349     		ldr	r1, .L100+4
 1658 0010 0A43     		orr	r2, r1
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1659              		.loc 1 1354 0
 1660 0012 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/CyLib.c **** }
 1661              		.loc 1 1356 0
 1662 0014 BD46     		mov	sp, r7
 1663              		@ sp needed
 1664 0016 80BD     		pop	{r7, pc}
 1665              	.L101:
 1666              		.align	2
 1667              	.L100:
 1668 0018 0CED00E0 		.word	-536810228
 1669 001c 0400FA05 		.word	100270084
 1670              		.cfi_endproc
 1671              	.LFE28:
 1672              		.size	CySoftwareReset, .-CySoftwareReset
 1673              		.section	.text.CyDelay,"ax",%progbits
 1674              		.align	2
 1675              		.global	CyDelay
 1676              		.code	16
 1677              		.thumb_func
 1678              		.type	CyDelay, %function
 1679              	CyDelay:
 1680              	.LFB29:
1357:.\Generated_Source\PSoC4/CyLib.c **** 
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
1361:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/CyLib.c **** *
1363:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1364:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
1365:.\Generated_Source\PSoC4/CyLib.c **** *
1366:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1367:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
1368:.\Generated_Source\PSoC4/CyLib.c **** *
1369:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1370:.\Generated_Source\PSoC4/CyLib.c **** *  None
1371:.\Generated_Source\PSoC4/CyLib.c **** *
1372:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1373:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
1374:.\Generated_Source\PSoC4/CyLib.c **** {
 1681              		.loc 1 1374 0
 1682              		.cfi_startproc
 1683 0000 80B5     		push	{r7, lr}
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 82B0     		sub	sp, sp, #8
 1688              		.cfi_def_cfa_offset 16
 1689 0004 00AF     		add	r7, sp, #0
 1690              		.cfi_def_cfa_register 7
 1691 0006 7860     		str	r0, [r7, #4]
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1692              		.loc 1 1375 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 55


 1693 0008 08E0     		b	.L103
 1694              	.L104:
1376:.\Generated_Source\PSoC4/CyLib.c ****     {
1377:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
1378:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
1379:.\Generated_Source\PSoC4/CyLib.c ****          */
1380:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1695              		.loc 1 1380 0
 1696 000a 0C4B     		ldr	r3, .L105
 1697 000c 1B68     		ldr	r3, [r3]
 1698 000e 181C     		mov	r0, r3
 1699 0010 FFF7FEFF 		bl	CyDelayCycles
1381:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1700              		.loc 1 1381 0
 1701 0014 7B68     		ldr	r3, [r7, #4]
 1702 0016 0A4A     		ldr	r2, .L105+4
 1703 0018 9B18     		add	r3, r3, r2
 1704 001a 7B60     		str	r3, [r7, #4]
 1705              	.L103:
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1706              		.loc 1 1375 0 discriminator 1
 1707 001c 7A68     		ldr	r2, [r7, #4]
 1708 001e 8023     		mov	r3, #128
 1709 0020 1B02     		lsl	r3, r3, #8
 1710 0022 9A42     		cmp	r2, r3
 1711 0024 F1D8     		bhi	.L104
1382:.\Generated_Source\PSoC4/CyLib.c ****     }
1383:.\Generated_Source\PSoC4/CyLib.c **** 
1384:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1712              		.loc 1 1384 0
 1713 0026 074B     		ldr	r3, .L105+8
 1714 0028 1B68     		ldr	r3, [r3]
 1715 002a 7A68     		ldr	r2, [r7, #4]
 1716 002c 5343     		mul	r3, r2
 1717 002e 181C     		mov	r0, r3
 1718 0030 FFF7FEFF 		bl	CyDelayCycles
1385:.\Generated_Source\PSoC4/CyLib.c **** }
 1719              		.loc 1 1385 0
 1720 0034 BD46     		mov	sp, r7
 1721 0036 02B0     		add	sp, sp, #8
 1722              		@ sp needed
 1723 0038 80BD     		pop	{r7, pc}
 1724              	.L106:
 1725 003a C046     		.align	2
 1726              	.L105:
 1727 003c 00000000 		.word	cydelay32kMs
 1728 0040 0080FFFF 		.word	-32768
 1729 0044 00000000 		.word	cydelayFreqKhz
 1730              		.cfi_endproc
 1731              	.LFE29:
 1732              		.size	CyDelay, .-CyDelay
 1733              		.section	.text.CyDelayUs,"ax",%progbits
 1734              		.align	2
 1735              		.global	CyDelayUs
 1736              		.code	16
 1737              		.thumb_func
 1738              		.type	CyDelayUs, %function
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 56


 1739              	CyDelayUs:
 1740              	.LFB30:
1386:.\Generated_Source\PSoC4/CyLib.c **** 
1387:.\Generated_Source\PSoC4/CyLib.c **** 
1388:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1389:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
1390:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1391:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1392:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
1393:.\Generated_Source\PSoC4/CyLib.c **** *
1394:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1395:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
1396:.\Generated_Source\PSoC4/CyLib.c **** *
1397:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1398:.\Generated_Source\PSoC4/CyLib.c **** *  None
1399:.\Generated_Source\PSoC4/CyLib.c **** *
1400:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1401:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
1402:.\Generated_Source\PSoC4/CyLib.c **** {
 1741              		.loc 1 1402 0
 1742              		.cfi_startproc
 1743 0000 80B5     		push	{r7, lr}
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 7, -8
 1746              		.cfi_offset 14, -4
 1747 0002 82B0     		sub	sp, sp, #8
 1748              		.cfi_def_cfa_offset 16
 1749 0004 00AF     		add	r7, sp, #0
 1750              		.cfi_def_cfa_register 7
 1751 0006 021C     		mov	r2, r0
 1752 0008 BB1D     		add	r3, r7, #6
 1753 000a 1A80     		strh	r2, [r3]
1403:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1754              		.loc 1 1403 0
 1755 000c BB1D     		add	r3, r7, #6
 1756 000e 1B88     		ldrh	r3, [r3]
 1757 0010 044A     		ldr	r2, .L108
 1758 0012 1278     		ldrb	r2, [r2]
 1759 0014 5343     		mul	r3, r2
 1760 0016 181C     		mov	r0, r3
 1761 0018 FFF7FEFF 		bl	CyDelayCycles
1404:.\Generated_Source\PSoC4/CyLib.c **** }
 1762              		.loc 1 1404 0
 1763 001c BD46     		mov	sp, r7
 1764 001e 02B0     		add	sp, sp, #8
 1765              		@ sp needed
 1766 0020 80BD     		pop	{r7, pc}
 1767              	.L109:
 1768 0022 C046     		.align	2
 1769              	.L108:
 1770 0024 00000000 		.word	cydelayFreqMhz
 1771              		.cfi_endproc
 1772              	.LFE30:
 1773              		.size	CyDelayUs, .-CyDelayUs
 1774              		.global	__aeabi_uidiv
 1775              		.section	.text.CyDelayFreq,"ax",%progbits
 1776              		.align	2
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 57


 1777              		.global	CyDelayFreq
 1778              		.code	16
 1779              		.thumb_func
 1780              		.type	CyDelayFreq, %function
 1781              	CyDelayFreq:
 1782              	.LFB31:
1405:.\Generated_Source\PSoC4/CyLib.c **** 
1406:.\Generated_Source\PSoC4/CyLib.c **** 
1407:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1408:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
1409:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1410:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1411:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
1412:.\Generated_Source\PSoC4/CyLib.c **** *
1413:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1414:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
1415:.\Generated_Source\PSoC4/CyLib.c **** *
1416:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1417:.\Generated_Source\PSoC4/CyLib.c **** *  None
1418:.\Generated_Source\PSoC4/CyLib.c **** *
1419:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1420:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
1421:.\Generated_Source\PSoC4/CyLib.c **** {
 1783              		.loc 1 1421 0
 1784              		.cfi_startproc
 1785 0000 80B5     		push	{r7, lr}
 1786              		.cfi_def_cfa_offset 8
 1787              		.cfi_offset 7, -8
 1788              		.cfi_offset 14, -4
 1789 0002 82B0     		sub	sp, sp, #8
 1790              		.cfi_def_cfa_offset 16
 1791 0004 00AF     		add	r7, sp, #0
 1792              		.cfi_def_cfa_register 7
 1793 0006 7860     		str	r0, [r7, #4]
1422:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1794              		.loc 1 1422 0
 1795 0008 7B68     		ldr	r3, [r7, #4]
 1796 000a 002B     		cmp	r3, #0
 1797 000c 03D0     		beq	.L111
1423:.\Generated_Source\PSoC4/CyLib.c ****     {
1424:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1798              		.loc 1 1424 0
 1799 000e 144B     		ldr	r3, .L113
 1800 0010 7A68     		ldr	r2, [r7, #4]
 1801 0012 1A60     		str	r2, [r3]
 1802 0014 02E0     		b	.L112
 1803              	.L111:
1425:.\Generated_Source\PSoC4/CyLib.c ****     }
1426:.\Generated_Source\PSoC4/CyLib.c ****     else
1427:.\Generated_Source\PSoC4/CyLib.c ****     {
1428:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1804              		.loc 1 1428 0
 1805 0016 124B     		ldr	r3, .L113
 1806 0018 124A     		ldr	r2, .L113+4
 1807 001a 1A60     		str	r2, [r3]
 1808              	.L112:
1429:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 58


1430:.\Generated_Source\PSoC4/CyLib.c **** 
1431:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1809              		.loc 1 1431 0
 1810 001c 104B     		ldr	r3, .L113
 1811 001e 1B68     		ldr	r3, [r3]
 1812 0020 114A     		ldr	r2, .L113+8
 1813 0022 9B18     		add	r3, r3, r2
 1814 0024 181C     		mov	r0, r3
 1815 0026 1149     		ldr	r1, .L113+12
 1816 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1817 002c 031C     		mov	r3, r0
 1818 002e DAB2     		uxtb	r2, r3
 1819 0030 0F4B     		ldr	r3, .L113+16
 1820 0032 1A70     		strb	r2, [r3]
1432:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1821              		.loc 1 1432 0
 1822 0034 0A4B     		ldr	r3, .L113
 1823 0036 1B68     		ldr	r3, [r3]
 1824 0038 0E4A     		ldr	r2, .L113+20
 1825 003a 9B18     		add	r3, r3, r2
 1826 003c 181C     		mov	r0, r3
 1827 003e FA23     		mov	r3, #250
 1828 0040 9900     		lsl	r1, r3, #2
 1829 0042 FFF7FEFF 		bl	__aeabi_uidiv
 1830 0046 031C     		mov	r3, r0
 1831 0048 1A1C     		mov	r2, r3
 1832 004a 0B4B     		ldr	r3, .L113+24
 1833 004c 1A60     		str	r2, [r3]
1433:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1834              		.loc 1 1433 0
 1835 004e 0A4B     		ldr	r3, .L113+24
 1836 0050 1B68     		ldr	r3, [r3]
 1837 0052 DA03     		lsl	r2, r3, #15
 1838 0054 094B     		ldr	r3, .L113+28
 1839 0056 1A60     		str	r2, [r3]
1434:.\Generated_Source\PSoC4/CyLib.c **** }
 1840              		.loc 1 1434 0
 1841 0058 BD46     		mov	sp, r7
 1842 005a 02B0     		add	sp, sp, #8
 1843              		@ sp needed
 1844 005c 80BD     		pop	{r7, pc}
 1845              	.L114:
 1846 005e C046     		.align	2
 1847              	.L113:
 1848 0060 00000000 		.word	cydelayFreqHz
 1849 0064 60E31600 		.word	1500000
 1850 0068 3F420F00 		.word	999999
 1851 006c 40420F00 		.word	1000000
 1852 0070 00000000 		.word	cydelayFreqMhz
 1853 0074 E7030000 		.word	999
 1854 0078 00000000 		.word	cydelayFreqKhz
 1855 007c 00000000 		.word	cydelay32kMs
 1856              		.cfi_endproc
 1857              	.LFE31:
 1858              		.size	CyDelayFreq, .-CyDelayFreq
 1859              		.section	.text.CySysTickStart,"ax",%progbits
 1860              		.align	2
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 59


 1861              		.global	CySysTickStart
 1862              		.code	16
 1863              		.thumb_func
 1864              		.type	CySysTickStart, %function
 1865              	CySysTickStart:
 1866              	.LFB32:
1435:.\Generated_Source\PSoC4/CyLib.c **** 
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1438:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
1439:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1440:.\Generated_Source\PSoC4/CyLib.c **** *
1441:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1442:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
1443:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
1444:.\Generated_Source\PSoC4/CyLib.c **** *
1445:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1446:.\Generated_Source\PSoC4/CyLib.c **** *  None
1447:.\Generated_Source\PSoC4/CyLib.c **** *
1448:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1449:.\Generated_Source\PSoC4/CyLib.c **** *  None
1450:.\Generated_Source\PSoC4/CyLib.c **** *
1451:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1452:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1453:.\Generated_Source\PSoC4/CyLib.c **** *
1454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1455:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
1456:.\Generated_Source\PSoC4/CyLib.c **** {
 1867              		.loc 1 1456 0
 1868              		.cfi_startproc
 1869 0000 80B5     		push	{r7, lr}
 1870              		.cfi_def_cfa_offset 8
 1871              		.cfi_offset 7, -8
 1872              		.cfi_offset 14, -4
 1873 0002 00AF     		add	r7, sp, #0
 1874              		.cfi_def_cfa_register 7
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1875              		.loc 1 1457 0
 1876 0004 064B     		ldr	r3, .L117
 1877 0006 1B68     		ldr	r3, [r3]
 1878 0008 002B     		cmp	r3, #0
 1879 000a 04D1     		bne	.L116
1458:.\Generated_Source\PSoC4/CyLib.c ****     {
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1880              		.loc 1 1459 0
 1881 000c FFF7FEFF 		bl	CySysTickInit
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1882              		.loc 1 1460 0
 1883 0010 034B     		ldr	r3, .L117
 1884 0012 0122     		mov	r2, #1
 1885 0014 1A60     		str	r2, [r3]
 1886              	.L116:
1461:.\Generated_Source\PSoC4/CyLib.c ****     }
1462:.\Generated_Source\PSoC4/CyLib.c **** 
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1887              		.loc 1 1463 0
 1888 0016 FFF7FEFF 		bl	CySysTickEnable
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 60


1464:.\Generated_Source\PSoC4/CyLib.c **** }
 1889              		.loc 1 1464 0
 1890 001a BD46     		mov	sp, r7
 1891              		@ sp needed
 1892 001c 80BD     		pop	{r7, pc}
 1893              	.L118:
 1894 001e C046     		.align	2
 1895              	.L117:
 1896 0020 00000000 		.word	CySysTickInitVar
 1897              		.cfi_endproc
 1898              	.LFE32:
 1899              		.size	CySysTickStart, .-CySysTickStart
 1900              		.section	.text.CySysTickInit,"ax",%progbits
 1901              		.align	2
 1902              		.global	CySysTickInit
 1903              		.code	16
 1904              		.thumb_func
 1905              		.type	CySysTickInit, %function
 1906              	CySysTickInit:
 1907              	.LFB33:
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c **** 
1467:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1468:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
1469:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1470:.\Generated_Source\PSoC4/CyLib.c **** *
1471:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1472:.\Generated_Source\PSoC4/CyLib.c **** *  Sets CySysTickServiceCallbacks() as an ISR for the SysTick exception.
1473:.\Generated_Source\PSoC4/CyLib.c **** *  The clock source for the SysTick counter is set to the System Clock.
1474:.\Generated_Source\PSoC4/CyLib.c **** *  The SysTick reload value is configured for the timer to generate interrupt
1475:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms. The System clock value is on the global variables cydelayFreqHz.
1476:.\Generated_Source\PSoC4/CyLib.c **** *  User is responsible for calling CyDelayFreq() function.
1477:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes CySysTickCallbacks array.
1478:.\Generated_Source\PSoC4/CyLib.c **** *
1479:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1480:.\Generated_Source\PSoC4/CyLib.c **** *  None
1481:.\Generated_Source\PSoC4/CyLib.c **** *
1482:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1483:.\Generated_Source\PSoC4/CyLib.c **** *  None
1484:.\Generated_Source\PSoC4/CyLib.c **** *
1485:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1486:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1487:.\Generated_Source\PSoC4/CyLib.c **** *
1488:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1489:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
1490:.\Generated_Source\PSoC4/CyLib.c **** {
 1908              		.loc 1 1490 0
 1909              		.cfi_startproc
 1910 0000 80B5     		push	{r7, lr}
 1911              		.cfi_def_cfa_offset 8
 1912              		.cfi_offset 7, -8
 1913              		.cfi_offset 14, -4
 1914 0002 82B0     		sub	sp, sp, #8
 1915              		.cfi_def_cfa_offset 16
 1916 0004 00AF     		add	r7, sp, #0
 1917              		.cfi_def_cfa_register 7
1491:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 61


1492:.\Generated_Source\PSoC4/CyLib.c **** 
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1918              		.loc 1 1493 0
 1919 0006 0023     		mov	r3, #0
 1920 0008 7B60     		str	r3, [r7, #4]
 1921 000a 07E0     		b	.L120
 1922              	.L121:
1494:.\Generated_Source\PSoC4/CyLib.c ****     {
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1923              		.loc 1 1495 0 discriminator 2
 1924 000c 124B     		ldr	r3, .L122
 1925 000e 7A68     		ldr	r2, [r7, #4]
 1926 0010 9200     		lsl	r2, r2, #2
 1927 0012 0021     		mov	r1, #0
 1928 0014 D150     		str	r1, [r2, r3]
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1929              		.loc 1 1493 0 discriminator 2
 1930 0016 7B68     		ldr	r3, [r7, #4]
 1931 0018 0133     		add	r3, r3, #1
 1932 001a 7B60     		str	r3, [r7, #4]
 1933              	.L120:
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1934              		.loc 1 1493 0 is_stmt 0 discriminator 1
 1935 001c 7B68     		ldr	r3, [r7, #4]
 1936 001e 042B     		cmp	r3, #4
 1937 0020 F4D9     		bls	.L121
1496:.\Generated_Source\PSoC4/CyLib.c ****     }
1497:.\Generated_Source\PSoC4/CyLib.c **** 
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1938              		.loc 1 1498 0 is_stmt 1
 1939 0022 0E4B     		ldr	r3, .L122+4
 1940 0024 0F20     		mov	r0, #15
 1941 0026 191C     		mov	r1, r3
 1942 0028 FFF7FEFF 		bl	CyIntSetSysVector
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****     #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1501:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 1943              		.loc 1 1501 0
 1944 002c 0120     		mov	r0, #1
 1945 002e FFF7FEFF 		bl	CySysTickSetClockSource
1502:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1503:.\Generated_Source\PSoC4/CyLib.c **** 
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1946              		.loc 1 1504 0
 1947 0032 0B4B     		ldr	r3, .L122+8
 1948 0034 1B68     		ldr	r3, [r3]
 1949 0036 181C     		mov	r0, r3
 1950 0038 FA23     		mov	r3, #250
 1951 003a 9900     		lsl	r1, r3, #2
 1952 003c FFF7FEFF 		bl	__aeabi_uidiv
 1953 0040 031C     		mov	r3, r0
 1954 0042 181C     		mov	r0, r3
 1955 0044 FFF7FEFF 		bl	CySysTickSetReload
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1956              		.loc 1 1505 0
 1957 0048 FFF7FEFF 		bl	CySysTickClear
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 62


 1958              		.loc 1 1506 0
 1959 004c 0F20     		mov	r0, #15
 1960 004e FFF7FEFF 		bl	CyIntEnable
1507:.\Generated_Source\PSoC4/CyLib.c **** }
 1961              		.loc 1 1507 0
 1962 0052 BD46     		mov	sp, r7
 1963 0054 02B0     		add	sp, sp, #8
 1964              		@ sp needed
 1965 0056 80BD     		pop	{r7, pc}
 1966              	.L123:
 1967              		.align	2
 1968              	.L122:
 1969 0058 00000000 		.word	CySysTickCallbacks
 1970 005c 00000000 		.word	CySysTickServiceCallbacks
 1971 0060 00000000 		.word	cydelayFreqHz
 1972              		.cfi_endproc
 1973              	.LFE33:
 1974              		.size	CySysTickInit, .-CySysTickInit
 1975              		.section	.text.CySysTickEnable,"ax",%progbits
 1976              		.align	2
 1977              		.global	CySysTickEnable
 1978              		.code	16
 1979              		.thumb_func
 1980              		.type	CySysTickEnable, %function
 1981              	CySysTickEnable:
 1982              	.LFB34:
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c **** 
1510:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1511:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
1512:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1513:.\Generated_Source\PSoC4/CyLib.c **** *
1514:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1515:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
1516:.\Generated_Source\PSoC4/CyLib.c **** *
1517:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1518:.\Generated_Source\PSoC4/CyLib.c **** *  None
1519:.\Generated_Source\PSoC4/CyLib.c **** *
1520:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1521:.\Generated_Source\PSoC4/CyLib.c **** *  None
1522:.\Generated_Source\PSoC4/CyLib.c **** *
1523:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1524:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1525:.\Generated_Source\PSoC4/CyLib.c **** *
1526:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1527:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
1528:.\Generated_Source\PSoC4/CyLib.c **** {
 1983              		.loc 1 1528 0
 1984              		.cfi_startproc
 1985 0000 80B5     		push	{r7, lr}
 1986              		.cfi_def_cfa_offset 8
 1987              		.cfi_offset 7, -8
 1988              		.cfi_offset 14, -4
 1989 0002 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1991              		.loc 1 1529 0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 63


 1992 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1993              		.loc 1 1530 0
 1994 0008 034B     		ldr	r3, .L125
 1995 000a 034A     		ldr	r2, .L125
 1996 000c 1268     		ldr	r2, [r2]
 1997 000e 0121     		mov	r1, #1
 1998 0010 0A43     		orr	r2, r1
 1999 0012 1A60     		str	r2, [r3]
1531:.\Generated_Source\PSoC4/CyLib.c **** }
 2000              		.loc 1 1531 0
 2001 0014 BD46     		mov	sp, r7
 2002              		@ sp needed
 2003 0016 80BD     		pop	{r7, pc}
 2004              	.L126:
 2005              		.align	2
 2006              	.L125:
 2007 0018 10E000E0 		.word	-536813552
 2008              		.cfi_endproc
 2009              	.LFE34:
 2010              		.size	CySysTickEnable, .-CySysTickEnable
 2011              		.section	.text.CySysTickStop,"ax",%progbits
 2012              		.align	2
 2013              		.global	CySysTickStop
 2014              		.code	16
 2015              		.thumb_func
 2016              		.type	CySysTickStop, %function
 2017              	CySysTickStop:
 2018              	.LFB35:
1532:.\Generated_Source\PSoC4/CyLib.c **** 
1533:.\Generated_Source\PSoC4/CyLib.c **** 
1534:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
1536:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1537:.\Generated_Source\PSoC4/CyLib.c **** *
1538:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1539:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
1540:.\Generated_Source\PSoC4/CyLib.c **** *
1541:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1542:.\Generated_Source\PSoC4/CyLib.c **** *  None
1543:.\Generated_Source\PSoC4/CyLib.c **** *
1544:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1545:.\Generated_Source\PSoC4/CyLib.c **** *  None
1546:.\Generated_Source\PSoC4/CyLib.c **** *
1547:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1548:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1549:.\Generated_Source\PSoC4/CyLib.c **** *
1550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1551:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
1552:.\Generated_Source\PSoC4/CyLib.c **** {
 2019              		.loc 1 1552 0
 2020              		.cfi_startproc
 2021 0000 80B5     		push	{r7, lr}
 2022              		.cfi_def_cfa_offset 8
 2023              		.cfi_offset 7, -8
 2024              		.cfi_offset 14, -4
 2025 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 64


 2026              		.cfi_def_cfa_register 7
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2027              		.loc 1 1553 0
 2028 0004 034B     		ldr	r3, .L128
 2029 0006 034A     		ldr	r2, .L128
 2030 0008 1268     		ldr	r2, [r2]
 2031 000a 0121     		mov	r1, #1
 2032 000c 8A43     		bic	r2, r1
 2033 000e 1A60     		str	r2, [r3]
1554:.\Generated_Source\PSoC4/CyLib.c **** }
 2034              		.loc 1 1554 0
 2035 0010 BD46     		mov	sp, r7
 2036              		@ sp needed
 2037 0012 80BD     		pop	{r7, pc}
 2038              	.L129:
 2039              		.align	2
 2040              	.L128:
 2041 0014 10E000E0 		.word	-536813552
 2042              		.cfi_endproc
 2043              	.LFE35:
 2044              		.size	CySysTickStop, .-CySysTickStop
 2045              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2046              		.align	2
 2047              		.global	CySysTickEnableInterrupt
 2048              		.code	16
 2049              		.thumb_func
 2050              		.type	CySysTickEnableInterrupt, %function
 2051              	CySysTickEnableInterrupt:
 2052              	.LFB36:
1555:.\Generated_Source\PSoC4/CyLib.c **** 
1556:.\Generated_Source\PSoC4/CyLib.c **** 
1557:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
1559:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1560:.\Generated_Source\PSoC4/CyLib.c **** *
1561:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1562:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
1563:.\Generated_Source\PSoC4/CyLib.c **** *
1564:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1565:.\Generated_Source\PSoC4/CyLib.c **** *  None
1566:.\Generated_Source\PSoC4/CyLib.c **** *
1567:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1568:.\Generated_Source\PSoC4/CyLib.c **** *  None
1569:.\Generated_Source\PSoC4/CyLib.c **** *
1570:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1571:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1572:.\Generated_Source\PSoC4/CyLib.c **** *
1573:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
1575:.\Generated_Source\PSoC4/CyLib.c **** {
 2053              		.loc 1 1575 0
 2054              		.cfi_startproc
 2055 0000 80B5     		push	{r7, lr}
 2056              		.cfi_def_cfa_offset 8
 2057              		.cfi_offset 7, -8
 2058              		.cfi_offset 14, -4
 2059 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 65


 2060              		.cfi_def_cfa_register 7
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2061              		.loc 1 1576 0
 2062 0004 034B     		ldr	r3, .L131
 2063 0006 034A     		ldr	r2, .L131
 2064 0008 1268     		ldr	r2, [r2]
 2065 000a 0221     		mov	r1, #2
 2066 000c 0A43     		orr	r2, r1
 2067 000e 1A60     		str	r2, [r3]
1577:.\Generated_Source\PSoC4/CyLib.c **** }
 2068              		.loc 1 1577 0
 2069 0010 BD46     		mov	sp, r7
 2070              		@ sp needed
 2071 0012 80BD     		pop	{r7, pc}
 2072              	.L132:
 2073              		.align	2
 2074              	.L131:
 2075 0014 10E000E0 		.word	-536813552
 2076              		.cfi_endproc
 2077              	.LFE36:
 2078              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2079              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2080              		.align	2
 2081              		.global	CySysTickDisableInterrupt
 2082              		.code	16
 2083              		.thumb_func
 2084              		.type	CySysTickDisableInterrupt, %function
 2085              	CySysTickDisableInterrupt:
 2086              	.LFB37:
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c **** 
1580:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1581:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
1582:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1583:.\Generated_Source\PSoC4/CyLib.c **** *
1584:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1585:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
1586:.\Generated_Source\PSoC4/CyLib.c **** *
1587:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1588:.\Generated_Source\PSoC4/CyLib.c **** *  None
1589:.\Generated_Source\PSoC4/CyLib.c **** *
1590:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1591:.\Generated_Source\PSoC4/CyLib.c **** *  None
1592:.\Generated_Source\PSoC4/CyLib.c **** *
1593:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1594:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1595:.\Generated_Source\PSoC4/CyLib.c **** *
1596:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1597:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
1598:.\Generated_Source\PSoC4/CyLib.c **** {
 2087              		.loc 1 1598 0
 2088              		.cfi_startproc
 2089 0000 80B5     		push	{r7, lr}
 2090              		.cfi_def_cfa_offset 8
 2091              		.cfi_offset 7, -8
 2092              		.cfi_offset 14, -4
 2093 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 66


 2094              		.cfi_def_cfa_register 7
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2095              		.loc 1 1599 0
 2096 0004 034B     		ldr	r3, .L134
 2097 0006 034A     		ldr	r2, .L134
 2098 0008 1268     		ldr	r2, [r2]
 2099 000a 0221     		mov	r1, #2
 2100 000c 8A43     		bic	r2, r1
 2101 000e 1A60     		str	r2, [r3]
1600:.\Generated_Source\PSoC4/CyLib.c **** }
 2102              		.loc 1 1600 0
 2103 0010 BD46     		mov	sp, r7
 2104              		@ sp needed
 2105 0012 80BD     		pop	{r7, pc}
 2106              	.L135:
 2107              		.align	2
 2108              	.L134:
 2109 0014 10E000E0 		.word	-536813552
 2110              		.cfi_endproc
 2111              	.LFE37:
 2112              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2113              		.section	.text.CySysTickSetReload,"ax",%progbits
 2114              		.align	2
 2115              		.global	CySysTickSetReload
 2116              		.code	16
 2117              		.thumb_func
 2118              		.type	CySysTickSetReload, %function
 2119              	CySysTickSetReload:
 2120              	.LFB38:
1601:.\Generated_Source\PSoC4/CyLib.c **** 
1602:.\Generated_Source\PSoC4/CyLib.c **** 
1603:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1604:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
1605:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c **** *
1607:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1608:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
1609:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
1610:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
1611:.\Generated_Source\PSoC4/CyLib.c **** *
1612:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1613:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
1614:.\Generated_Source\PSoC4/CyLib.c **** *
1615:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1616:.\Generated_Source\PSoC4/CyLib.c **** *  None
1617:.\Generated_Source\PSoC4/CyLib.c **** *
1618:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1619:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
1620:.\Generated_Source\PSoC4/CyLib.c **** {
 2121              		.loc 1 1620 0
 2122              		.cfi_startproc
 2123 0000 80B5     		push	{r7, lr}
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 82B0     		sub	sp, sp, #8
 2128              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 67


 2129 0004 00AF     		add	r7, sp, #0
 2130              		.cfi_def_cfa_register 7
 2131 0006 7860     		str	r0, [r7, #4]
1621:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2132              		.loc 1 1621 0
 2133 0008 034B     		ldr	r3, .L137
 2134 000a 7A68     		ldr	r2, [r7, #4]
 2135 000c 1202     		lsl	r2, r2, #8
 2136 000e 120A     		lsr	r2, r2, #8
 2137 0010 1A60     		str	r2, [r3]
1622:.\Generated_Source\PSoC4/CyLib.c **** }
 2138              		.loc 1 1622 0
 2139 0012 BD46     		mov	sp, r7
 2140 0014 02B0     		add	sp, sp, #8
 2141              		@ sp needed
 2142 0016 80BD     		pop	{r7, pc}
 2143              	.L138:
 2144              		.align	2
 2145              	.L137:
 2146 0018 14E000E0 		.word	-536813548
 2147              		.cfi_endproc
 2148              	.LFE38:
 2149              		.size	CySysTickSetReload, .-CySysTickSetReload
 2150              		.section	.text.CySysTickGetReload,"ax",%progbits
 2151              		.align	2
 2152              		.global	CySysTickGetReload
 2153              		.code	16
 2154              		.thumb_func
 2155              		.type	CySysTickGetReload, %function
 2156              	CySysTickGetReload:
 2157              	.LFB39:
1623:.\Generated_Source\PSoC4/CyLib.c **** 
1624:.\Generated_Source\PSoC4/CyLib.c **** 
1625:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1626:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
1627:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c **** *
1629:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1630:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
1631:.\Generated_Source\PSoC4/CyLib.c **** *
1632:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1633:.\Generated_Source\PSoC4/CyLib.c **** *  None
1634:.\Generated_Source\PSoC4/CyLib.c **** *
1635:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1636:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
1637:.\Generated_Source\PSoC4/CyLib.c **** *
1638:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1639:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
1640:.\Generated_Source\PSoC4/CyLib.c **** {
 2158              		.loc 1 1640 0
 2159              		.cfi_startproc
 2160 0000 80B5     		push	{r7, lr}
 2161              		.cfi_def_cfa_offset 8
 2162              		.cfi_offset 7, -8
 2163              		.cfi_offset 14, -4
 2164 0002 00AF     		add	r7, sp, #0
 2165              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 68


1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2166              		.loc 1 1641 0
 2167 0004 034B     		ldr	r3, .L141
 2168 0006 1B68     		ldr	r3, [r3]
 2169 0008 1B02     		lsl	r3, r3, #8
 2170 000a 1B0A     		lsr	r3, r3, #8
1642:.\Generated_Source\PSoC4/CyLib.c **** }
 2171              		.loc 1 1642 0
 2172 000c 181C     		mov	r0, r3
 2173 000e BD46     		mov	sp, r7
 2174              		@ sp needed
 2175 0010 80BD     		pop	{r7, pc}
 2176              	.L142:
 2177 0012 C046     		.align	2
 2178              	.L141:
 2179 0014 14E000E0 		.word	-536813548
 2180              		.cfi_endproc
 2181              	.LFE39:
 2182              		.size	CySysTickGetReload, .-CySysTickGetReload
 2183              		.section	.text.CySysTickGetValue,"ax",%progbits
 2184              		.align	2
 2185              		.global	CySysTickGetValue
 2186              		.code	16
 2187              		.thumb_func
 2188              		.type	CySysTickGetValue, %function
 2189              	CySysTickGetValue:
 2190              	.LFB40:
1643:.\Generated_Source\PSoC4/CyLib.c **** 
1644:.\Generated_Source\PSoC4/CyLib.c **** 
1645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
1647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1648:.\Generated_Source\PSoC4/CyLib.c **** *
1649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1650:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
1651:.\Generated_Source\PSoC4/CyLib.c **** *
1652:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1653:.\Generated_Source\PSoC4/CyLib.c **** *  None
1654:.\Generated_Source\PSoC4/CyLib.c **** *
1655:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1656:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
1657:.\Generated_Source\PSoC4/CyLib.c **** *
1658:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1659:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
1660:.\Generated_Source\PSoC4/CyLib.c **** {
 2191              		.loc 1 1660 0
 2192              		.cfi_startproc
 2193 0000 80B5     		push	{r7, lr}
 2194              		.cfi_def_cfa_offset 8
 2195              		.cfi_offset 7, -8
 2196              		.cfi_offset 14, -4
 2197 0002 00AF     		add	r7, sp, #0
 2198              		.cfi_def_cfa_register 7
1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2199              		.loc 1 1661 0
 2200 0004 034B     		ldr	r3, .L145
 2201 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 69


 2202 0008 1B02     		lsl	r3, r3, #8
 2203 000a 1B0A     		lsr	r3, r3, #8
1662:.\Generated_Source\PSoC4/CyLib.c **** }
 2204              		.loc 1 1662 0
 2205 000c 181C     		mov	r0, r3
 2206 000e BD46     		mov	sp, r7
 2207              		@ sp needed
 2208 0010 80BD     		pop	{r7, pc}
 2209              	.L146:
 2210 0012 C046     		.align	2
 2211              	.L145:
 2212 0014 18E000E0 		.word	-536813544
 2213              		.cfi_endproc
 2214              	.LFE40:
 2215              		.size	CySysTickGetValue, .-CySysTickGetValue
 2216              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2217              		.align	2
 2218              		.global	CySysTickSetClockSource
 2219              		.code	16
 2220              		.thumb_func
 2221              		.type	CySysTickSetClockSource, %function
 2222              	CySysTickSetClockSource:
 2223              	.LFB41:
1663:.\Generated_Source\PSoC4/CyLib.c **** 
1664:.\Generated_Source\PSoC4/CyLib.c **** 
1665:.\Generated_Source\PSoC4/CyLib.c **** #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1666:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1667:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
1668:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1669:.\Generated_Source\PSoC4/CyLib.c ****     *
1670:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1671:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1674:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
1675:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
1676:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
1677:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
1678:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
1679:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
1680:.\Generated_Source\PSoC4/CyLib.c ****     *
1681:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1682:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1683:.\Generated_Source\PSoC4/CyLib.c ****     *
1684:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1685:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
1686:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
1687:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
1688:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly bigger and vice versa.
1689:.\Generated_Source\PSoC4/CyLib.c ****     *
1690:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1691:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
1692:.\Generated_Source\PSoC4/CyLib.c ****     {
 2224              		.loc 1 1692 0
 2225              		.cfi_startproc
 2226 0000 80B5     		push	{r7, lr}
 2227              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 70


 2228              		.cfi_offset 7, -8
 2229              		.cfi_offset 14, -4
 2230 0002 82B0     		sub	sp, sp, #8
 2231              		.cfi_def_cfa_offset 16
 2232 0004 00AF     		add	r7, sp, #0
 2233              		.cfi_def_cfa_register 7
 2234 0006 7860     		str	r0, [r7, #4]
1693:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2235              		.loc 1 1693 0
 2236 0008 7B68     		ldr	r3, [r7, #4]
 2237 000a 012B     		cmp	r3, #1
 2238 000c 06D1     		bne	.L148
1694:.\Generated_Source\PSoC4/CyLib.c ****         {
1695:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2239              		.loc 1 1695 0
 2240 000e 084B     		ldr	r3, .L150
 2241 0010 074A     		ldr	r2, .L150
 2242 0012 1268     		ldr	r2, [r2]
 2243 0014 0421     		mov	r1, #4
 2244 0016 0A43     		orr	r2, r1
 2245 0018 1A60     		str	r2, [r3]
 2246 001a 05E0     		b	.L147
 2247              	.L148:
1696:.\Generated_Source\PSoC4/CyLib.c ****         }
1697:.\Generated_Source\PSoC4/CyLib.c ****         else
1698:.\Generated_Source\PSoC4/CyLib.c ****         {
1699:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 2248              		.loc 1 1699 0
 2249 001c 044B     		ldr	r3, .L150
 2250 001e 044A     		ldr	r2, .L150
 2251 0020 1268     		ldr	r2, [r2]
 2252 0022 0421     		mov	r1, #4
 2253 0024 8A43     		bic	r2, r1
 2254 0026 1A60     		str	r2, [r3]
 2255              	.L147:
1700:.\Generated_Source\PSoC4/CyLib.c ****         }
1701:.\Generated_Source\PSoC4/CyLib.c ****     }
 2256              		.loc 1 1701 0
 2257 0028 BD46     		mov	sp, r7
 2258 002a 02B0     		add	sp, sp, #8
 2259              		@ sp needed
 2260 002c 80BD     		pop	{r7, pc}
 2261              	.L151:
 2262 002e C046     		.align	2
 2263              	.L150:
 2264 0030 10E000E0 		.word	-536813552
 2265              		.cfi_endproc
 2266              	.LFE41:
 2267              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2268              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2269              		.align	2
 2270              		.global	CySysTickGetCountFlag
 2271              		.code	16
 2272              		.thumb_func
 2273              		.type	CySysTickGetCountFlag, %function
 2274              	CySysTickGetCountFlag:
 2275              	.LFB42:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 71


1702:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1703:.\Generated_Source\PSoC4/CyLib.c **** 
1704:.\Generated_Source\PSoC4/CyLib.c **** 
1705:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1706:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
1707:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1708:.\Generated_Source\PSoC4/CyLib.c **** *
1709:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1710:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
1711:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
1712:.\Generated_Source\PSoC4/CyLib.c **** *
1713:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1714:.\Generated_Source\PSoC4/CyLib.c **** *  None
1715:.\Generated_Source\PSoC4/CyLib.c **** *
1716:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1717:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
1718:.\Generated_Source\PSoC4/CyLib.c **** *
1719:.\Generated_Source\PSoC4/CyLib.c **** *
1720:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1721:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1722:.\Generated_Source\PSoC4/CyLib.c **** *
1723:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1724:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
1725:.\Generated_Source\PSoC4/CyLib.c **** {
 2276              		.loc 1 1725 0
 2277              		.cfi_startproc
 2278 0000 80B5     		push	{r7, lr}
 2279              		.cfi_def_cfa_offset 8
 2280              		.cfi_offset 7, -8
 2281              		.cfi_offset 14, -4
 2282 0002 00AF     		add	r7, sp, #0
 2283              		.cfi_def_cfa_register 7
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2284              		.loc 1 1726 0
 2285 0004 034B     		ldr	r3, .L154
 2286 0006 1B68     		ldr	r3, [r3]
 2287 0008 1A0C     		lsr	r2, r3, #16
 2288 000a 0123     		mov	r3, #1
 2289 000c 1340     		and	r3, r2
1727:.\Generated_Source\PSoC4/CyLib.c **** }
 2290              		.loc 1 1727 0
 2291 000e 181C     		mov	r0, r3
 2292 0010 BD46     		mov	sp, r7
 2293              		@ sp needed
 2294 0012 80BD     		pop	{r7, pc}
 2295              	.L155:
 2296              		.align	2
 2297              	.L154:
 2298 0014 10E000E0 		.word	-536813552
 2299              		.cfi_endproc
 2300              	.LFE42:
 2301              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2302              		.section	.text.CySysTickClear,"ax",%progbits
 2303              		.align	2
 2304              		.global	CySysTickClear
 2305              		.code	16
 2306              		.thumb_func
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 72


 2307              		.type	CySysTickClear, %function
 2308              	CySysTickClear:
 2309              	.LFB43:
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
1732:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c **** *
1734:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
1736:.\Generated_Source\PSoC4/CyLib.c **** *
1737:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1738:.\Generated_Source\PSoC4/CyLib.c **** *  None
1739:.\Generated_Source\PSoC4/CyLib.c **** *
1740:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1741:.\Generated_Source\PSoC4/CyLib.c **** *  None
1742:.\Generated_Source\PSoC4/CyLib.c **** *
1743:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1744:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
1745:.\Generated_Source\PSoC4/CyLib.c **** {
 2310              		.loc 1 1745 0
 2311              		.cfi_startproc
 2312 0000 80B5     		push	{r7, lr}
 2313              		.cfi_def_cfa_offset 8
 2314              		.cfi_offset 7, -8
 2315              		.cfi_offset 14, -4
 2316 0002 00AF     		add	r7, sp, #0
 2317              		.cfi_def_cfa_register 7
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2318              		.loc 1 1746 0
 2319 0004 024B     		ldr	r3, .L157
 2320 0006 0022     		mov	r2, #0
 2321 0008 1A60     		str	r2, [r3]
1747:.\Generated_Source\PSoC4/CyLib.c **** }
 2322              		.loc 1 1747 0
 2323 000a BD46     		mov	sp, r7
 2324              		@ sp needed
 2325 000c 80BD     		pop	{r7, pc}
 2326              	.L158:
 2327 000e C046     		.align	2
 2328              	.L157:
 2329 0010 18E000E0 		.word	-536813544
 2330              		.cfi_endproc
 2331              	.LFE43:
 2332              		.size	CySysTickClear, .-CySysTickClear
 2333              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2334              		.align	2
 2335              		.global	CySysTickSetCallback
 2336              		.code	16
 2337              		.thumb_func
 2338              		.type	CySysTickSetCallback, %function
 2339              	CySysTickSetCallback:
 2340              	.LFB44:
1748:.\Generated_Source\PSoC4/CyLib.c **** 
1749:.\Generated_Source\PSoC4/CyLib.c **** 
1750:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 73


1751:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
1752:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1753:.\Generated_Source\PSoC4/CyLib.c **** *
1754:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1755:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
1756:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
1757:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
1758:.\Generated_Source\PSoC4/CyLib.c **** *
1759:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
1760:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
1761:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
1762:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
1763:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
1764:.\Generated_Source\PSoC4/CyLib.c **** *
1765:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1766:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
1767:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1768:.\Generated_Source\PSoC4/CyLib.c **** *
1769:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
1770:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
1771:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
1772:.\Generated_Source\PSoC4/CyLib.c **** *
1773:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1774:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
1775:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
1776:.\Generated_Source\PSoC4/CyLib.c **** *
1777:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1778:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
1779:.\Generated_Source\PSoC4/CyLib.c **** *
1780:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1781:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
1782:.\Generated_Source\PSoC4/CyLib.c **** {
 2341              		.loc 1 1782 0
 2342              		.cfi_startproc
 2343 0000 80B5     		push	{r7, lr}
 2344              		.cfi_def_cfa_offset 8
 2345              		.cfi_offset 7, -8
 2346              		.cfi_offset 14, -4
 2347 0002 84B0     		sub	sp, sp, #16
 2348              		.cfi_def_cfa_offset 24
 2349 0004 00AF     		add	r7, sp, #0
 2350              		.cfi_def_cfa_register 7
 2351 0006 7860     		str	r0, [r7, #4]
 2352 0008 3960     		str	r1, [r7]
1783:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2353              		.loc 1 1785 0
 2354 000a 074B     		ldr	r3, .L161
 2355 000c 7A68     		ldr	r2, [r7, #4]
 2356 000e 9200     		lsl	r2, r2, #2
 2357 0010 D358     		ldr	r3, [r2, r3]
 2358 0012 FB60     		str	r3, [r7, #12]
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2359              		.loc 1 1786 0
 2360 0014 044B     		ldr	r3, .L161
 2361 0016 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 74


 2362 0018 9200     		lsl	r2, r2, #2
 2363 001a 3968     		ldr	r1, [r7]
 2364 001c D150     		str	r1, [r2, r3]
1787:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2365              		.loc 1 1787 0
 2366 001e FB68     		ldr	r3, [r7, #12]
1788:.\Generated_Source\PSoC4/CyLib.c **** }
 2367              		.loc 1 1788 0
 2368 0020 181C     		mov	r0, r3
 2369 0022 BD46     		mov	sp, r7
 2370 0024 04B0     		add	sp, sp, #16
 2371              		@ sp needed
 2372 0026 80BD     		pop	{r7, pc}
 2373              	.L162:
 2374              		.align	2
 2375              	.L161:
 2376 0028 00000000 		.word	CySysTickCallbacks
 2377              		.cfi_endproc
 2378              	.LFE44:
 2379              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2380              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2381              		.align	2
 2382              		.global	CySysTickGetCallback
 2383              		.code	16
 2384              		.thumb_func
 2385              		.type	CySysTickGetCallback, %function
 2386              	CySysTickGetCallback:
 2387              	.LFB45:
1789:.\Generated_Source\PSoC4/CyLib.c **** 
1790:.\Generated_Source\PSoC4/CyLib.c **** 
1791:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1792:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
1793:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1794:.\Generated_Source\PSoC4/CyLib.c **** *
1795:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1796:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
1797:.\Generated_Source\PSoC4/CyLib.c **** *
1798:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1799:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
1800:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1801:.\Generated_Source\PSoC4/CyLib.c **** *
1802:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1803:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
1804:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
1805:.\Generated_Source\PSoC4/CyLib.c **** *
1806:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1807:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
1808:.\Generated_Source\PSoC4/CyLib.c **** {
 2388              		.loc 1 1808 0
 2389              		.cfi_startproc
 2390 0000 80B5     		push	{r7, lr}
 2391              		.cfi_def_cfa_offset 8
 2392              		.cfi_offset 7, -8
 2393              		.cfi_offset 14, -4
 2394 0002 82B0     		sub	sp, sp, #8
 2395              		.cfi_def_cfa_offset 16
 2396 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 75


 2397              		.cfi_def_cfa_register 7
 2398 0006 7860     		str	r0, [r7, #4]
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2399              		.loc 1 1809 0
 2400 0008 034B     		ldr	r3, .L165
 2401 000a 7A68     		ldr	r2, [r7, #4]
 2402 000c 9200     		lsl	r2, r2, #2
 2403 000e D358     		ldr	r3, [r2, r3]
1810:.\Generated_Source\PSoC4/CyLib.c **** }
 2404              		.loc 1 1810 0
 2405 0010 181C     		mov	r0, r3
 2406 0012 BD46     		mov	sp, r7
 2407 0014 02B0     		add	sp, sp, #8
 2408              		@ sp needed
 2409 0016 80BD     		pop	{r7, pc}
 2410              	.L166:
 2411              		.align	2
 2412              	.L165:
 2413 0018 00000000 		.word	CySysTickCallbacks
 2414              		.cfi_endproc
 2415              	.LFE45:
 2416              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2417              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2418              		.align	2
 2419              		.code	16
 2420              		.thumb_func
 2421              		.type	CySysTickServiceCallbacks, %function
 2422              	CySysTickServiceCallbacks:
 2423              	.LFB46:
1811:.\Generated_Source\PSoC4/CyLib.c **** 
1812:.\Generated_Source\PSoC4/CyLib.c **** 
1813:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1814:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
1815:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1816:.\Generated_Source\PSoC4/CyLib.c **** *
1817:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1818:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
1819:.\Generated_Source\PSoC4/CyLib.c **** *
1820:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1821:.\Generated_Source\PSoC4/CyLib.c **** *  None
1822:.\Generated_Source\PSoC4/CyLib.c **** *
1823:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1824:.\Generated_Source\PSoC4/CyLib.c **** *  None
1825:.\Generated_Source\PSoC4/CyLib.c **** *
1826:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1827:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
1828:.\Generated_Source\PSoC4/CyLib.c **** {
 2424              		.loc 1 1828 0
 2425              		.cfi_startproc
 2426 0000 80B5     		push	{r7, lr}
 2427              		.cfi_def_cfa_offset 8
 2428              		.cfi_offset 7, -8
 2429              		.cfi_offset 14, -4
 2430 0002 82B0     		sub	sp, sp, #8
 2431              		.cfi_def_cfa_offset 16
 2432 0004 00AF     		add	r7, sp, #0
 2433              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 76


1829:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1830:.\Generated_Source\PSoC4/CyLib.c **** 
1831:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
1832:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2434              		.loc 1 1832 0
 2435 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2436 000a 031C     		mov	r3, r0
 2437 000c 012B     		cmp	r3, #1
 2438 000e 13D1     		bne	.L167
1833:.\Generated_Source\PSoC4/CyLib.c ****     {
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2439              		.loc 1 1834 0
 2440 0010 0023     		mov	r3, #0
 2441 0012 7B60     		str	r3, [r7, #4]
 2442 0014 0DE0     		b	.L169
 2443              	.L171:
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2444              		.loc 1 1836 0
 2445 0016 0A4B     		ldr	r3, .L172
 2446 0018 7A68     		ldr	r2, [r7, #4]
 2447 001a 9200     		lsl	r2, r2, #2
 2448 001c D358     		ldr	r3, [r2, r3]
 2449 001e 002B     		cmp	r3, #0
 2450 0020 04D0     		beq	.L170
1837:.\Generated_Source\PSoC4/CyLib.c ****             {
1838:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2451              		.loc 1 1838 0
 2452 0022 074B     		ldr	r3, .L172
 2453 0024 7A68     		ldr	r2, [r7, #4]
 2454 0026 9200     		lsl	r2, r2, #2
 2455 0028 D358     		ldr	r3, [r2, r3]
 2456 002a 9847     		blx	r3
 2457              	.L170:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2458              		.loc 1 1834 0
 2459 002c 7B68     		ldr	r3, [r7, #4]
 2460 002e 0133     		add	r3, r3, #1
 2461 0030 7B60     		str	r3, [r7, #4]
 2462              	.L169:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2463              		.loc 1 1834 0 is_stmt 0 discriminator 1
 2464 0032 7B68     		ldr	r3, [r7, #4]
 2465 0034 042B     		cmp	r3, #4
 2466 0036 EED9     		bls	.L171
 2467              	.L167:
1839:.\Generated_Source\PSoC4/CyLib.c ****             }
1840:.\Generated_Source\PSoC4/CyLib.c ****         }
1841:.\Generated_Source\PSoC4/CyLib.c ****     }
1842:.\Generated_Source\PSoC4/CyLib.c **** }
 2468              		.loc 1 1842 0 is_stmt 1
 2469 0038 BD46     		mov	sp, r7
 2470 003a 02B0     		add	sp, sp, #8
 2471              		@ sp needed
 2472 003c 80BD     		pop	{r7, pc}
 2473              	.L173:
 2474 003e C046     		.align	2
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 77


 2475              	.L172:
 2476 0040 00000000 		.word	CySysTickCallbacks
 2477              		.cfi_endproc
 2478              	.LFE46:
 2479              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2480              		.section	.text.CyGetUniqueId,"ax",%progbits
 2481              		.align	2
 2482              		.global	CyGetUniqueId
 2483              		.code	16
 2484              		.thumb_func
 2485              		.type	CyGetUniqueId, %function
 2486              	CyGetUniqueId:
 2487              	.LFB47:
1843:.\Generated_Source\PSoC4/CyLib.c **** 
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1846:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
1847:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1848:.\Generated_Source\PSoC4/CyLib.c **** *
1849:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1850:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
1851:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
1852:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
1853:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
1854:.\Generated_Source\PSoC4/CyLib.c **** *
1855:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1856:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
1857:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
1858:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
1859:.\Generated_Source\PSoC4/CyLib.c **** *
1860:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1861:.\Generated_Source\PSoC4/CyLib.c **** *  None
1862:.\Generated_Source\PSoC4/CyLib.c **** *
1863:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1864:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
1865:.\Generated_Source\PSoC4/CyLib.c **** {
 2488              		.loc 1 1865 0
 2489              		.cfi_startproc
 2490 0000 80B5     		push	{r7, lr}
 2491              		.cfi_def_cfa_offset 8
 2492              		.cfi_offset 7, -8
 2493              		.cfi_offset 14, -4
 2494 0002 82B0     		sub	sp, sp, #8
 2495              		.cfi_def_cfa_offset 16
 2496 0004 00AF     		add	r7, sp, #0
 2497              		.cfi_def_cfa_register 7
 2498 0006 7860     		str	r0, [r7, #4]
1866:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2499              		.loc 1 1867 0
 2500 0008 254B     		ldr	r3, .L175
 2501 000a 1B78     		ldrb	r3, [r3]
 2502 000c DBB2     		uxtb	r3, r3
 2503 000e 1A1C     		mov	r2, r3
 2504 0010 7B68     		ldr	r3, [r7, #4]
 2505 0012 1A60     		str	r2, [r3]
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 78


 2506              		.loc 1 1868 0
 2507 0014 7B68     		ldr	r3, [r7, #4]
 2508 0016 1A68     		ldr	r2, [r3]
 2509 0018 224B     		ldr	r3, .L175+4
 2510 001a 1B78     		ldrb	r3, [r3]
 2511 001c DBB2     		uxtb	r3, r3
 2512 001e 1B02     		lsl	r3, r3, #8
 2513 0020 1A43     		orr	r2, r3
 2514 0022 7B68     		ldr	r3, [r7, #4]
 2515 0024 1A60     		str	r2, [r3]
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2516              		.loc 1 1869 0
 2517 0026 7B68     		ldr	r3, [r7, #4]
 2518 0028 1A68     		ldr	r2, [r3]
 2519 002a 1F4B     		ldr	r3, .L175+8
 2520 002c 1B78     		ldrb	r3, [r3]
 2521 002e DBB2     		uxtb	r3, r3
 2522 0030 1B04     		lsl	r3, r3, #16
 2523 0032 1A43     		orr	r2, r3
 2524 0034 7B68     		ldr	r3, [r7, #4]
 2525 0036 1A60     		str	r2, [r3]
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2526              		.loc 1 1870 0
 2527 0038 7B68     		ldr	r3, [r7, #4]
 2528 003a 1A68     		ldr	r2, [r3]
 2529 003c 1B4B     		ldr	r3, .L175+12
 2530 003e 1B78     		ldrb	r3, [r3]
 2531 0040 DBB2     		uxtb	r3, r3
 2532 0042 1B06     		lsl	r3, r3, #24
 2533 0044 1A43     		orr	r2, r3
 2534 0046 7B68     		ldr	r3, [r7, #4]
 2535 0048 1A60     		str	r2, [r3]
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2536              		.loc 1 1872 0
 2537 004a 7B68     		ldr	r3, [r7, #4]
 2538 004c 0433     		add	r3, r3, #4
 2539 004e 184A     		ldr	r2, .L175+16
 2540 0050 1278     		ldrb	r2, [r2]
 2541 0052 D2B2     		uxtb	r2, r2
 2542 0054 1A60     		str	r2, [r3]
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2543              		.loc 1 1873 0
 2544 0056 7B68     		ldr	r3, [r7, #4]
 2545 0058 0433     		add	r3, r3, #4
 2546 005a 7A68     		ldr	r2, [r7, #4]
 2547 005c 0432     		add	r2, r2, #4
 2548 005e 1168     		ldr	r1, [r2]
 2549 0060 144A     		ldr	r2, .L175+20
 2550 0062 1278     		ldrb	r2, [r2]
 2551 0064 D2B2     		uxtb	r2, r2
 2552 0066 1202     		lsl	r2, r2, #8
 2553 0068 0A43     		orr	r2, r1
 2554 006a 1A60     		str	r2, [r3]
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2555              		.loc 1 1874 0
 2556 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 79


 2557 006e 0433     		add	r3, r3, #4
 2558 0070 7A68     		ldr	r2, [r7, #4]
 2559 0072 0432     		add	r2, r2, #4
 2560 0074 1168     		ldr	r1, [r2]
 2561 0076 104A     		ldr	r2, .L175+24
 2562 0078 1278     		ldrb	r2, [r2]
 2563 007a D2B2     		uxtb	r2, r2
 2564 007c 1204     		lsl	r2, r2, #16
 2565 007e 0A43     		orr	r2, r1
 2566 0080 1A60     		str	r2, [r3]
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2567              		.loc 1 1875 0
 2568 0082 7B68     		ldr	r3, [r7, #4]
 2569 0084 0433     		add	r3, r3, #4
 2570 0086 7A68     		ldr	r2, [r7, #4]
 2571 0088 0432     		add	r2, r2, #4
 2572 008a 1168     		ldr	r1, [r2]
 2573 008c 0B4A     		ldr	r2, .L175+28
 2574 008e 1278     		ldrb	r2, [r2]
 2575 0090 D2B2     		uxtb	r2, r2
 2576 0092 1206     		lsl	r2, r2, #24
 2577 0094 0A43     		orr	r2, r1
 2578 0096 1A60     		str	r2, [r3]
1876:.\Generated_Source\PSoC4/CyLib.c **** #else
1877:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
1878:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
1879:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
1880:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
1883:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
1884:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
1885:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
1886:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
1887:.\Generated_Source\PSoC4/CyLib.c **** }
 2579              		.loc 1 1887 0
 2580 0098 BD46     		mov	sp, r7
 2581 009a 02B0     		add	sp, sp, #8
 2582              		@ sp needed
 2583 009c 80BD     		pop	{r7, pc}
 2584              	.L176:
 2585 009e C046     		.align	2
 2586              	.L175:
 2587 00a0 78F1FF0F 		.word	268431736
 2588 00a4 79F1FF0F 		.word	268431737
 2589 00a8 7AF1FF0F 		.word	268431738
 2590 00ac 7BF1FF0F 		.word	268431739
 2591 00b0 7CF1FF0F 		.word	268431740
 2592 00b4 7DF1FF0F 		.word	268431741
 2593 00b8 7EF1FF0F 		.word	268431742
 2594 00bc 7FF1FF0F 		.word	268431743
 2595              		.cfi_endproc
 2596              	.LFE47:
 2597              		.size	CyGetUniqueId, .-CyGetUniqueId
 2598              		.text
 2599              	.Letext0:
 2600              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 80


 2601              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2602              		.section	.debug_info,"",%progbits
 2603              	.Ldebug_info0:
 2604 0000 0F090000 		.4byte	0x90f
 2605 0004 0400     		.2byte	0x4
 2606 0006 00000000 		.4byte	.Ldebug_abbrev0
 2607 000a 04       		.byte	0x4
 2608 000b 01       		.uleb128 0x1
 2609 000c 4B040000 		.4byte	.LASF99
 2610 0010 01       		.byte	0x1
 2611 0011 3F030000 		.4byte	.LASF100
 2612 0015 38000000 		.4byte	.LASF101
 2613 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2614 001d 00000000 		.4byte	0
 2615 0021 00000000 		.4byte	.Ldebug_line0
 2616 0025 02       		.uleb128 0x2
 2617 0026 01       		.byte	0x1
 2618 0027 06       		.byte	0x6
 2619 0028 0F010000 		.4byte	.LASF0
 2620 002c 02       		.uleb128 0x2
 2621 002d 01       		.byte	0x1
 2622 002e 08       		.byte	0x8
 2623 002f 0B050000 		.4byte	.LASF1
 2624 0033 02       		.uleb128 0x2
 2625 0034 02       		.byte	0x2
 2626 0035 05       		.byte	0x5
 2627 0036 19050000 		.4byte	.LASF2
 2628 003a 02       		.uleb128 0x2
 2629 003b 02       		.byte	0x2
 2630 003c 07       		.byte	0x7
 2631 003d FE020000 		.4byte	.LASF3
 2632 0041 02       		.uleb128 0x2
 2633 0042 04       		.byte	0x4
 2634 0043 05       		.byte	0x5
 2635 0044 6C010000 		.4byte	.LASF4
 2636 0048 02       		.uleb128 0x2
 2637 0049 04       		.byte	0x4
 2638 004a 07       		.byte	0x7
 2639 004b 88020000 		.4byte	.LASF5
 2640 004f 02       		.uleb128 0x2
 2641 0050 08       		.byte	0x8
 2642 0051 05       		.byte	0x5
 2643 0052 01010000 		.4byte	.LASF6
 2644 0056 02       		.uleb128 0x2
 2645 0057 08       		.byte	0x8
 2646 0058 07       		.byte	0x7
 2647 0059 9B000000 		.4byte	.LASF7
 2648 005d 03       		.uleb128 0x3
 2649 005e 04       		.byte	0x4
 2650 005f 05       		.byte	0x5
 2651 0060 696E7400 		.ascii	"int\000"
 2652 0064 02       		.uleb128 0x2
 2653 0065 04       		.byte	0x4
 2654 0066 07       		.byte	0x7
 2655 0067 6C020000 		.4byte	.LASF8
 2656 006b 04       		.uleb128 0x4
 2657 006c 8C010000 		.4byte	.LASF9
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 81


 2658 0070 02       		.byte	0x2
 2659 0071 B3       		.byte	0xb3
 2660 0072 2C000000 		.4byte	0x2c
 2661 0076 04       		.uleb128 0x4
 2662 0077 0F000000 		.4byte	.LASF10
 2663 007b 02       		.byte	0x2
 2664 007c B4       		.byte	0xb4
 2665 007d 3A000000 		.4byte	0x3a
 2666 0081 04       		.uleb128 0x4
 2667 0082 CF010000 		.4byte	.LASF11
 2668 0086 02       		.byte	0x2
 2669 0087 B5       		.byte	0xb5
 2670 0088 48000000 		.4byte	0x48
 2671 008c 02       		.uleb128 0x2
 2672 008d 04       		.byte	0x4
 2673 008e 04       		.byte	0x4
 2674 008f 45040000 		.4byte	.LASF12
 2675 0093 02       		.uleb128 0x2
 2676 0094 08       		.byte	0x8
 2677 0095 04       		.byte	0x4
 2678 0096 AB010000 		.4byte	.LASF13
 2679 009a 02       		.uleb128 0x2
 2680 009b 01       		.byte	0x1
 2681 009c 08       		.byte	0x8
 2682 009d 52050000 		.4byte	.LASF14
 2683 00a1 05       		.uleb128 0x5
 2684 00a2 F5040000 		.4byte	.LASF15
 2685 00a6 02       		.byte	0x2
 2686 00a7 5D01     		.2byte	0x15d
 2687 00a9 AD000000 		.4byte	0xad
 2688 00ad 06       		.uleb128 0x6
 2689 00ae 6B000000 		.4byte	0x6b
 2690 00b2 05       		.uleb128 0x5
 2691 00b3 AA030000 		.4byte	.LASF16
 2692 00b7 02       		.byte	0x2
 2693 00b8 5F01     		.2byte	0x15f
 2694 00ba BE000000 		.4byte	0xbe
 2695 00be 06       		.uleb128 0x6
 2696 00bf 81000000 		.4byte	0x81
 2697 00c3 05       		.uleb128 0x5
 2698 00c4 57050000 		.4byte	.LASF17
 2699 00c8 02       		.byte	0x2
 2700 00c9 6F01     		.2byte	0x16f
 2701 00cb CF000000 		.4byte	0xcf
 2702 00cf 07       		.uleb128 0x7
 2703 00d0 04       		.byte	0x4
 2704 00d1 D5000000 		.4byte	0xd5
 2705 00d5 08       		.uleb128 0x8
 2706 00d6 02       		.uleb128 0x2
 2707 00d7 04       		.byte	0x4
 2708 00d8 07       		.byte	0x7
 2709 00d9 BF030000 		.4byte	.LASF18
 2710 00dd 04       		.uleb128 0x4
 2711 00de C7040000 		.4byte	.LASF19
 2712 00e2 03       		.byte	0x3
 2713 00e3 67       		.byte	0x67
 2714 00e4 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 82


 2715 00e8 09       		.uleb128 0x9
 2716 00e9 81000000 		.4byte	0x81
 2717 00ed F8000000 		.4byte	0xf8
 2718 00f1 0A       		.uleb128 0xa
 2719 00f2 D6000000 		.4byte	0xd6
 2720 00f6 03       		.byte	0x3
 2721 00f7 00       		.byte	0
 2722 00f8 0B       		.uleb128 0xb
 2723 00f9 26060000 		.4byte	.LASF20
 2724 00fd 01       		.byte	0x1
 2725 00fe 5A       		.byte	0x5a
 2726 00ff 00000000 		.4byte	.LFB1
 2727 0103 1C000000 		.4byte	.LFE1-.LFB1
 2728 0107 01       		.uleb128 0x1
 2729 0108 9C       		.byte	0x9c
 2730 0109 0C       		.uleb128 0xc
 2731 010a B5020000 		.4byte	.LASF21
 2732 010e 01       		.byte	0x1
 2733 010f 78       		.byte	0x78
 2734 0110 00000000 		.4byte	.LFB2
 2735 0114 1C000000 		.4byte	.LFE2-.LFB2
 2736 0118 01       		.uleb128 0x1
 2737 0119 9C       		.byte	0x9c
 2738 011a 0D       		.uleb128 0xd
 2739 011b F1010000 		.4byte	.LASF27
 2740 011f 01       		.byte	0x1
 2741 0120 95       		.byte	0x95
 2742 0121 00000000 		.4byte	.LFB3
 2743 0125 FC000000 		.4byte	.LFE3-.LFB3
 2744 0129 01       		.uleb128 0x1
 2745 012a 9C       		.byte	0x9c
 2746 012b 74010000 		.4byte	0x174
 2747 012f 0E       		.uleb128 0xe
 2748 0130 6900     		.ascii	"i\000"
 2749 0132 01       		.byte	0x1
 2750 0133 97       		.byte	0x97
 2751 0134 81000000 		.4byte	0x81
 2752 0138 02       		.uleb128 0x2
 2753 0139 91       		.byte	0x91
 2754 013a 6C       		.sleb128 -20
 2755 013b 0F       		.uleb128 0xf
 2756 013c 1B010000 		.4byte	.LASF22
 2757 0140 01       		.byte	0x1
 2758 0141 98       		.byte	0x98
 2759 0142 81000000 		.4byte	0x81
 2760 0146 02       		.uleb128 0x2
 2761 0147 91       		.byte	0x91
 2762 0148 68       		.sleb128 -24
 2763 0149 0F       		.uleb128 0xf
 2764 014a 2C010000 		.4byte	.LASF23
 2765 014e 01       		.byte	0x1
 2766 014f 99       		.byte	0x99
 2767 0150 6B000000 		.4byte	0x6b
 2768 0154 02       		.uleb128 0x2
 2769 0155 91       		.byte	0x91
 2770 0156 67       		.sleb128 -25
 2771 0157 0F       		.uleb128 0xf
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 83


 2772 0158 11030000 		.4byte	.LASF24
 2773 015c 01       		.byte	0x1
 2774 015d 9A       		.byte	0x9a
 2775 015e 81000000 		.4byte	0x81
 2776 0162 02       		.uleb128 0x2
 2777 0163 91       		.byte	0x91
 2778 0164 60       		.sleb128 -32
 2779 0165 0F       		.uleb128 0xf
 2780 0166 BC050000 		.4byte	.LASF25
 2781 016a 01       		.byte	0x1
 2782 016b 9B       		.byte	0x9b
 2783 016c BE000000 		.4byte	0xbe
 2784 0170 02       		.uleb128 0x2
 2785 0171 91       		.byte	0x91
 2786 0172 5C       		.sleb128 -36
 2787 0173 00       		.byte	0
 2788 0174 0B       		.uleb128 0xb
 2789 0175 90030000 		.4byte	.LASF26
 2790 0179 01       		.byte	0x1
 2791 017a D8       		.byte	0xd8
 2792 017b 00000000 		.4byte	.LFB4
 2793 017f 1C000000 		.4byte	.LFE4-.LFB4
 2794 0183 01       		.uleb128 0x1
 2795 0184 9C       		.byte	0x9c
 2796 0185 10       		.uleb128 0x10
 2797 0186 4E010000 		.4byte	.LASF102
 2798 018a 01       		.byte	0x1
 2799 018b EE       		.byte	0xee
 2800 018c 81000000 		.4byte	0x81
 2801 0190 00000000 		.4byte	.LFB5
 2802 0194 20000000 		.4byte	.LFE5-.LFB5
 2803 0198 01       		.uleb128 0x1
 2804 0199 9C       		.byte	0x9c
 2805 019a 11       		.uleb128 0x11
 2806 019b 1F000000 		.4byte	.LASF28
 2807 019f 01       		.byte	0x1
 2808 01a0 1901     		.2byte	0x119
 2809 01a2 00000000 		.4byte	.LFB6
 2810 01a6 44000000 		.4byte	.LFE6-.LFB6
 2811 01aa 01       		.uleb128 0x1
 2812 01ab 9C       		.byte	0x9c
 2813 01ac CF010000 		.4byte	0x1cf
 2814 01b0 12       		.uleb128 0x12
 2815 01b1 41050000 		.4byte	.LASF30
 2816 01b5 01       		.byte	0x1
 2817 01b6 1901     		.2byte	0x119
 2818 01b8 81000000 		.4byte	0x81
 2819 01bc 02       		.uleb128 0x2
 2820 01bd 91       		.byte	0x91
 2821 01be 64       		.sleb128 -28
 2822 01bf 13       		.uleb128 0x13
 2823 01c0 2C010000 		.4byte	.LASF23
 2824 01c4 01       		.byte	0x1
 2825 01c5 1B01     		.2byte	0x11b
 2826 01c7 6B000000 		.4byte	0x6b
 2827 01cb 02       		.uleb128 0x2
 2828 01cc 91       		.byte	0x91
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 84


 2829 01cd 6F       		.sleb128 -17
 2830 01ce 00       		.byte	0
 2831 01cf 11       		.uleb128 0x11
 2832 01d0 74050000 		.4byte	.LASF29
 2833 01d4 01       		.byte	0x1
 2834 01d5 4A01     		.2byte	0x14a
 2835 01d7 00000000 		.4byte	.LFB7
 2836 01db 44000000 		.4byte	.LFE7-.LFB7
 2837 01df 01       		.uleb128 0x1
 2838 01e0 9C       		.byte	0x9c
 2839 01e1 04020000 		.4byte	0x204
 2840 01e5 12       		.uleb128 0x12
 2841 01e6 1E060000 		.4byte	.LASF31
 2842 01ea 01       		.byte	0x1
 2843 01eb 4A01     		.2byte	0x14a
 2844 01ed 81000000 		.4byte	0x81
 2845 01f1 02       		.uleb128 0x2
 2846 01f2 91       		.byte	0x91
 2847 01f3 64       		.sleb128 -28
 2848 01f4 13       		.uleb128 0x13
 2849 01f5 2C010000 		.4byte	.LASF23
 2850 01f9 01       		.byte	0x1
 2851 01fa 4C01     		.2byte	0x14c
 2852 01fc 6B000000 		.4byte	0x6b
 2853 0200 02       		.uleb128 0x2
 2854 0201 91       		.byte	0x91
 2855 0202 6F       		.sleb128 -17
 2856 0203 00       		.byte	0
 2857 0204 11       		.uleb128 0x11
 2858 0205 69030000 		.4byte	.LASF32
 2859 0209 01       		.byte	0x1
 2860 020a 8601     		.2byte	0x186
 2861 020c 00000000 		.4byte	.LFB8
 2862 0210 B8000000 		.4byte	.LFE8-.LFB8
 2863 0214 01       		.uleb128 0x1
 2864 0215 9C       		.byte	0x9c
 2865 0216 66020000 		.4byte	0x266
 2866 021a 12       		.uleb128 0x12
 2867 021b 1B010000 		.4byte	.LASF22
 2868 021f 01       		.byte	0x1
 2869 0220 8601     		.2byte	0x186
 2870 0222 81000000 		.4byte	0x81
 2871 0226 02       		.uleb128 0x2
 2872 0227 91       		.byte	0x91
 2873 0228 4C       		.sleb128 -52
 2874 0229 13       		.uleb128 0x13
 2875 022a B2000000 		.4byte	.LASF33
 2876 022e 01       		.byte	0x1
 2877 022f 8901     		.2byte	0x189
 2878 0231 76020000 		.4byte	0x276
 2879 0235 02       		.uleb128 0x2
 2880 0236 91       		.byte	0x91
 2881 0237 60       		.sleb128 -32
 2882 0238 13       		.uleb128 0x13
 2883 0239 82010000 		.4byte	.LASF34
 2884 023d 01       		.byte	0x1
 2885 023e 8A01     		.2byte	0x18a
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 85


 2886 0240 7B020000 		.4byte	0x27b
 2887 0244 02       		.uleb128 0x2
 2888 0245 91       		.byte	0x91
 2889 0246 50       		.sleb128 -48
 2890 0247 13       		.uleb128 0x13
 2891 0248 64010000 		.4byte	.LASF35
 2892 024c 01       		.byte	0x1
 2893 024d 9301     		.2byte	0x193
 2894 024f 81000000 		.4byte	0x81
 2895 0253 02       		.uleb128 0x2
 2896 0254 91       		.byte	0x91
 2897 0255 6C       		.sleb128 -20
 2898 0256 13       		.uleb128 0x13
 2899 0257 2C010000 		.4byte	.LASF23
 2900 025b 01       		.byte	0x1
 2901 025c 9601     		.2byte	0x196
 2902 025e 6B000000 		.4byte	0x6b
 2903 0262 02       		.uleb128 0x2
 2904 0263 91       		.byte	0x91
 2905 0264 6B       		.sleb128 -21
 2906 0265 00       		.byte	0
 2907 0266 09       		.uleb128 0x9
 2908 0267 81000000 		.4byte	0x81
 2909 026b 76020000 		.4byte	0x276
 2910 026f 0A       		.uleb128 0xa
 2911 0270 D6000000 		.4byte	0xd6
 2912 0274 01       		.byte	0x1
 2913 0275 00       		.byte	0
 2914 0276 06       		.uleb128 0x6
 2915 0277 66020000 		.4byte	0x266
 2916 027b 06       		.uleb128 0x6
 2917 027c E8000000 		.4byte	0xe8
 2918 0280 11       		.uleb128 0x11
 2919 0281 E2010000 		.4byte	.LASF36
 2920 0285 01       		.byte	0x1
 2921 0286 5003     		.2byte	0x350
 2922 0288 00000000 		.4byte	.LFB9
 2923 028c 64000000 		.4byte	.LFE9-.LFB9
 2924 0290 01       		.uleb128 0x1
 2925 0291 9C       		.byte	0x9c
 2926 0292 A6020000 		.4byte	0x2a6
 2927 0296 12       		.uleb128 0x12
 2928 0297 FA040000 		.4byte	.LASF37
 2929 029b 01       		.byte	0x1
 2930 029c 5003     		.2byte	0x350
 2931 029e 81000000 		.4byte	0x81
 2932 02a2 02       		.uleb128 0x2
 2933 02a3 91       		.byte	0x91
 2934 02a4 74       		.sleb128 -12
 2935 02a5 00       		.byte	0
 2936 02a6 14       		.uleb128 0x14
 2937 02a7 EA050000 		.4byte	.LASF38
 2938 02ab 01       		.byte	0x1
 2939 02ac 7503     		.2byte	0x375
 2940 02ae 00000000 		.4byte	.LFB10
 2941 02b2 28000000 		.4byte	.LFE10-.LFB10
 2942 02b6 01       		.uleb128 0x1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 86


 2943 02b7 9C       		.byte	0x9c
 2944 02b8 15       		.uleb128 0x15
 2945 02b9 9A020000 		.4byte	.LASF79
 2946 02bd 01       		.byte	0x1
 2947 02be 8B03     		.2byte	0x38b
 2948 02c0 81000000 		.4byte	0x81
 2949 02c4 00000000 		.4byte	.LFB11
 2950 02c8 18000000 		.4byte	.LFE11-.LFB11
 2951 02cc 01       		.uleb128 0x1
 2952 02cd 9C       		.byte	0x9c
 2953 02ce 14       		.uleb128 0x14
 2954 02cf B8010000 		.4byte	.LASF39
 2955 02d3 01       		.byte	0x1
 2956 02d4 9F03     		.2byte	0x39f
 2957 02d6 00000000 		.4byte	.LFB12
 2958 02da 14000000 		.4byte	.LFE12-.LFB12
 2959 02de 01       		.uleb128 0x1
 2960 02df 9C       		.byte	0x9c
 2961 02e0 16       		.uleb128 0x16
 2962 02e1 EA020000 		.4byte	.LASF42
 2963 02e5 01       		.byte	0x1
 2964 02e6 BB03     		.2byte	0x3bb
 2965 02e8 81000000 		.4byte	0x81
 2966 02ec 00000000 		.4byte	.LFB13
 2967 02f0 30000000 		.4byte	.LFE13-.LFB13
 2968 02f4 01       		.uleb128 0x1
 2969 02f5 9C       		.byte	0x9c
 2970 02f6 19030000 		.4byte	0x319
 2971 02fa 12       		.uleb128 0x12
 2972 02fb 4B050000 		.4byte	.LASF40
 2973 02ff 01       		.byte	0x1
 2974 0300 BB03     		.2byte	0x3bb
 2975 0302 81000000 		.4byte	0x81
 2976 0306 02       		.uleb128 0x2
 2977 0307 91       		.byte	0x91
 2978 0308 6C       		.sleb128 -20
 2979 0309 13       		.uleb128 0x13
 2980 030a 09060000 		.4byte	.LASF41
 2981 030e 01       		.byte	0x1
 2982 030f BD03     		.2byte	0x3bd
 2983 0311 81000000 		.4byte	0x81
 2984 0315 02       		.uleb128 0x2
 2985 0316 91       		.byte	0x91
 2986 0317 74       		.sleb128 -12
 2987 0318 00       		.byte	0
 2988 0319 16       		.uleb128 0x16
 2989 031a 8D000000 		.4byte	.LASF43
 2990 031e 01       		.byte	0x1
 2991 031f D603     		.2byte	0x3d6
 2992 0321 81000000 		.4byte	0x81
 2993 0325 00000000 		.4byte	.LFB14
 2994 0329 24000000 		.4byte	.LFE14-.LFB14
 2995 032d 01       		.uleb128 0x1
 2996 032e 9C       		.byte	0x9c
 2997 032f 43030000 		.4byte	0x343
 2998 0333 13       		.uleb128 0x13
 2999 0334 16000000 		.4byte	.LASF44
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 87


 3000 0338 01       		.byte	0x1
 3001 0339 D803     		.2byte	0x3d8
 3002 033b 81000000 		.4byte	0x81
 3003 033f 02       		.uleb128 0x2
 3004 0340 91       		.byte	0x91
 3005 0341 74       		.sleb128 -12
 3006 0342 00       		.byte	0
 3007 0343 17       		.uleb128 0x17
 3008 0344 BD000000 		.4byte	.LASF45
 3009 0348 01       		.byte	0x1
 3010 0349 F203     		.2byte	0x3f2
 3011 034b 00000000 		.4byte	.LFB15
 3012 034f 18000000 		.4byte	.LFE15-.LFB15
 3013 0353 01       		.uleb128 0x1
 3014 0354 9C       		.byte	0x9c
 3015 0355 69030000 		.4byte	0x369
 3016 0359 12       		.uleb128 0x12
 3017 035a DD010000 		.4byte	.LASF46
 3018 035e 01       		.byte	0x1
 3019 035f F203     		.2byte	0x3f2
 3020 0361 81000000 		.4byte	0x81
 3021 0365 02       		.uleb128 0x2
 3022 0366 91       		.byte	0x91
 3023 0367 74       		.sleb128 -12
 3024 0368 00       		.byte	0
 3025 0369 18       		.uleb128 0x18
 3026 036a 7E030000 		.4byte	.LASF47
 3027 036e 01       		.byte	0x1
 3028 036f 0E04     		.2byte	0x40e
 3029 0371 C3000000 		.4byte	0xc3
 3030 0375 00000000 		.4byte	.LFB16
 3031 0379 48000000 		.4byte	.LFE16-.LFB16
 3032 037d 01       		.uleb128 0x1
 3033 037e 9C       		.byte	0x9c
 3034 037f C0030000 		.4byte	0x3c0
 3035 0383 12       		.uleb128 0x12
 3036 0384 D6010000 		.4byte	.LASF48
 3037 0388 01       		.byte	0x1
 3038 0389 0E04     		.2byte	0x40e
 3039 038b 6B000000 		.4byte	0x6b
 3040 038f 02       		.uleb128 0x2
 3041 0390 91       		.byte	0x91
 3042 0391 6F       		.sleb128 -17
 3043 0392 12       		.uleb128 0x12
 3044 0393 EB030000 		.4byte	.LASF49
 3045 0397 01       		.byte	0x1
 3046 0398 0E04     		.2byte	0x40e
 3047 039a C3000000 		.4byte	0xc3
 3048 039e 02       		.uleb128 0x2
 3049 039f 91       		.byte	0x91
 3050 03a0 68       		.sleb128 -24
 3051 03a1 13       		.uleb128 0x13
 3052 03a2 86000000 		.4byte	.LASF50
 3053 03a6 01       		.byte	0x1
 3054 03a7 1004     		.2byte	0x410
 3055 03a9 C3000000 		.4byte	0xc3
 3056 03ad 02       		.uleb128 0x2
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 88


 3057 03ae 91       		.byte	0x91
 3058 03af 70       		.sleb128 -16
 3059 03b0 13       		.uleb128 0x13
 3060 03b1 00000000 		.4byte	.LASF51
 3061 03b5 01       		.byte	0x1
 3062 03b6 1104     		.2byte	0x411
 3063 03b8 C0030000 		.4byte	0x3c0
 3064 03bc 02       		.uleb128 0x2
 3065 03bd 91       		.byte	0x91
 3066 03be 74       		.sleb128 -12
 3067 03bf 00       		.byte	0
 3068 03c0 07       		.uleb128 0x7
 3069 03c1 04       		.byte	0x4
 3070 03c2 C3000000 		.4byte	0xc3
 3071 03c6 18       		.uleb128 0x18
 3072 03c7 2F050000 		.4byte	.LASF52
 3073 03cb 01       		.byte	0x1
 3074 03cc 3304     		.2byte	0x433
 3075 03ce C3000000 		.4byte	0xc3
 3076 03d2 00000000 		.4byte	.LFB17
 3077 03d6 34000000 		.4byte	.LFE17-.LFB17
 3078 03da 01       		.uleb128 0x1
 3079 03db 9C       		.byte	0x9c
 3080 03dc FF030000 		.4byte	0x3ff
 3081 03e0 12       		.uleb128 0x12
 3082 03e1 D6010000 		.4byte	.LASF48
 3083 03e5 01       		.byte	0x1
 3084 03e6 3304     		.2byte	0x433
 3085 03e8 6B000000 		.4byte	0x6b
 3086 03ec 02       		.uleb128 0x2
 3087 03ed 91       		.byte	0x91
 3088 03ee 6F       		.sleb128 -17
 3089 03ef 13       		.uleb128 0x13
 3090 03f0 00000000 		.4byte	.LASF51
 3091 03f4 01       		.byte	0x1
 3092 03f5 3504     		.2byte	0x435
 3093 03f7 C0030000 		.4byte	0x3c0
 3094 03fb 02       		.uleb128 0x2
 3095 03fc 91       		.byte	0x91
 3096 03fd 74       		.sleb128 -12
 3097 03fe 00       		.byte	0
 3098 03ff 18       		.uleb128 0x18
 3099 0400 30030000 		.4byte	.LASF53
 3100 0404 01       		.byte	0x1
 3101 0405 4C04     		.2byte	0x44c
 3102 0407 C3000000 		.4byte	0xc3
 3103 040b 00000000 		.4byte	.LFB18
 3104 040f 4C000000 		.4byte	.LFE18-.LFB18
 3105 0413 01       		.uleb128 0x1
 3106 0414 9C       		.byte	0x9c
 3107 0415 56040000 		.4byte	0x456
 3108 0419 12       		.uleb128 0x12
 3109 041a D6010000 		.4byte	.LASF48
 3110 041e 01       		.byte	0x1
 3111 041f 4C04     		.2byte	0x44c
 3112 0421 6B000000 		.4byte	0x6b
 3113 0425 02       		.uleb128 0x2
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 89


 3114 0426 91       		.byte	0x91
 3115 0427 6F       		.sleb128 -17
 3116 0428 12       		.uleb128 0x12
 3117 0429 EB030000 		.4byte	.LASF49
 3118 042d 01       		.byte	0x1
 3119 042e 4C04     		.2byte	0x44c
 3120 0430 C3000000 		.4byte	0xc3
 3121 0434 02       		.uleb128 0x2
 3122 0435 91       		.byte	0x91
 3123 0436 68       		.sleb128 -24
 3124 0437 13       		.uleb128 0x13
 3125 0438 86000000 		.4byte	.LASF50
 3126 043c 01       		.byte	0x1
 3127 043d 4E04     		.2byte	0x44e
 3128 043f C3000000 		.4byte	0xc3
 3129 0443 02       		.uleb128 0x2
 3130 0444 91       		.byte	0x91
 3131 0445 70       		.sleb128 -16
 3132 0446 13       		.uleb128 0x13
 3133 0447 00000000 		.4byte	.LASF51
 3134 044b 01       		.byte	0x1
 3135 044c 4F04     		.2byte	0x44f
 3136 044e C0030000 		.4byte	0x3c0
 3137 0452 02       		.uleb128 0x2
 3138 0453 91       		.byte	0x91
 3139 0454 74       		.sleb128 -12
 3140 0455 00       		.byte	0
 3141 0456 18       		.uleb128 0x18
 3142 0457 D9040000 		.4byte	.LASF54
 3143 045b 01       		.byte	0x1
 3144 045c 6B04     		.2byte	0x46b
 3145 045e C3000000 		.4byte	0xc3
 3146 0462 00000000 		.4byte	.LFB19
 3147 0466 36000000 		.4byte	.LFE19-.LFB19
 3148 046a 01       		.uleb128 0x1
 3149 046b 9C       		.byte	0x9c
 3150 046c 8F040000 		.4byte	0x48f
 3151 0470 12       		.uleb128 0x12
 3152 0471 D6010000 		.4byte	.LASF48
 3153 0475 01       		.byte	0x1
 3154 0476 6B04     		.2byte	0x46b
 3155 0478 6B000000 		.4byte	0x6b
 3156 047c 02       		.uleb128 0x2
 3157 047d 91       		.byte	0x91
 3158 047e 6F       		.sleb128 -17
 3159 047f 13       		.uleb128 0x13
 3160 0480 00000000 		.4byte	.LASF51
 3161 0484 01       		.byte	0x1
 3162 0485 6D04     		.2byte	0x46d
 3163 0487 C0030000 		.4byte	0x3c0
 3164 048b 02       		.uleb128 0x2
 3165 048c 91       		.byte	0x91
 3166 048d 74       		.sleb128 -12
 3167 048e 00       		.byte	0
 3168 048f 11       		.uleb128 0x11
 3169 0490 34040000 		.4byte	.LASF55
 3170 0494 01       		.byte	0x1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 90


 3171 0495 8304     		.2byte	0x483
 3172 0497 00000000 		.4byte	.LFB20
 3173 049b A8000000 		.4byte	.LFE20-.LFB20
 3174 049f 01       		.uleb128 0x1
 3175 04a0 9C       		.byte	0x9c
 3176 04a1 F1040000 		.4byte	0x4f1
 3177 04a5 12       		.uleb128 0x12
 3178 04a6 D6010000 		.4byte	.LASF48
 3179 04aa 01       		.byte	0x1
 3180 04ab 8304     		.2byte	0x483
 3181 04ad 6B000000 		.4byte	0x6b
 3182 04b1 02       		.uleb128 0x2
 3183 04b2 91       		.byte	0x91
 3184 04b3 5F       		.sleb128 -33
 3185 04b4 12       		.uleb128 0x12
 3186 04b5 60030000 		.4byte	.LASF56
 3187 04b9 01       		.byte	0x1
 3188 04ba 8304     		.2byte	0x483
 3189 04bc 6B000000 		.4byte	0x6b
 3190 04c0 02       		.uleb128 0x2
 3191 04c1 91       		.byte	0x91
 3192 04c2 5E       		.sleb128 -34
 3193 04c3 13       		.uleb128 0x13
 3194 04c4 2C010000 		.4byte	.LASF23
 3195 04c8 01       		.byte	0x1
 3196 04c9 8504     		.2byte	0x485
 3197 04cb 6B000000 		.4byte	0x6b
 3198 04cf 02       		.uleb128 0x2
 3199 04d0 91       		.byte	0x91
 3200 04d1 6B       		.sleb128 -21
 3201 04d2 13       		.uleb128 0x13
 3202 04d3 B2010000 		.4byte	.LASF57
 3203 04d7 01       		.byte	0x1
 3204 04d8 8604     		.2byte	0x486
 3205 04da 81000000 		.4byte	0x81
 3206 04de 02       		.uleb128 0x2
 3207 04df 91       		.byte	0x91
 3208 04e0 6C       		.sleb128 -20
 3209 04e1 13       		.uleb128 0x13
 3210 04e2 36020000 		.4byte	.LASF58
 3211 04e6 01       		.byte	0x1
 3212 04e7 8704     		.2byte	0x487
 3213 04e9 81000000 		.4byte	0x81
 3214 04ed 02       		.uleb128 0x2
 3215 04ee 91       		.byte	0x91
 3216 04ef 64       		.sleb128 -28
 3217 04f0 00       		.byte	0
 3218 04f1 18       		.uleb128 0x18
 3219 04f2 0A020000 		.4byte	.LASF59
 3220 04f6 01       		.byte	0x1
 3221 04f7 A704     		.2byte	0x4a7
 3222 04f9 6B000000 		.4byte	0x6b
 3223 04fd 00000000 		.4byte	.LFB21
 3224 0501 58000000 		.4byte	.LFE21-.LFB21
 3225 0505 01       		.uleb128 0x1
 3226 0506 9C       		.byte	0x9c
 3227 0507 2A050000 		.4byte	0x52a
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 91


 3228 050b 12       		.uleb128 0x12
 3229 050c D6010000 		.4byte	.LASF48
 3230 0510 01       		.byte	0x1
 3231 0511 A704     		.2byte	0x4a7
 3232 0513 6B000000 		.4byte	0x6b
 3233 0517 02       		.uleb128 0x2
 3234 0518 91       		.byte	0x91
 3235 0519 6F       		.sleb128 -17
 3236 051a 13       		.uleb128 0x13
 3237 051b 60030000 		.4byte	.LASF56
 3238 051f 01       		.byte	0x1
 3239 0520 A904     		.2byte	0x4a9
 3240 0522 6B000000 		.4byte	0x6b
 3241 0526 02       		.uleb128 0x2
 3242 0527 91       		.byte	0x91
 3243 0528 77       		.sleb128 -9
 3244 0529 00       		.byte	0
 3245 052a 17       		.uleb128 0x17
 3246 052b 23050000 		.4byte	.LASF60
 3247 052f 01       		.byte	0x1
 3248 0530 C104     		.2byte	0x4c1
 3249 0532 00000000 		.4byte	.LFB22
 3250 0536 2C000000 		.4byte	.LFE22-.LFB22
 3251 053a 01       		.uleb128 0x1
 3252 053b 9C       		.byte	0x9c
 3253 053c 50050000 		.4byte	0x550
 3254 0540 12       		.uleb128 0x12
 3255 0541 D6010000 		.4byte	.LASF48
 3256 0545 01       		.byte	0x1
 3257 0546 C104     		.2byte	0x4c1
 3258 0548 6B000000 		.4byte	0x6b
 3259 054c 02       		.uleb128 0x2
 3260 054d 91       		.byte	0x91
 3261 054e 77       		.sleb128 -9
 3262 054f 00       		.byte	0
 3263 0550 16       		.uleb128 0x16
 3264 0551 F3000000 		.4byte	.LASF61
 3265 0555 01       		.byte	0x1
 3266 0556 D504     		.2byte	0x4d5
 3267 0558 6B000000 		.4byte	0x6b
 3268 055c 00000000 		.4byte	.LFB23
 3269 0560 34000000 		.4byte	.LFE23-.LFB23
 3270 0564 01       		.uleb128 0x1
 3271 0565 9C       		.byte	0x9c
 3272 0566 7A050000 		.4byte	0x57a
 3273 056a 12       		.uleb128 0x12
 3274 056b D6010000 		.4byte	.LASF48
 3275 056f 01       		.byte	0x1
 3276 0570 D504     		.2byte	0x4d5
 3277 0572 6B000000 		.4byte	0x6b
 3278 0576 02       		.uleb128 0x2
 3279 0577 91       		.byte	0x91
 3280 0578 77       		.sleb128 -9
 3281 0579 00       		.byte	0
 3282 057a 17       		.uleb128 0x17
 3283 057b 75010000 		.4byte	.LASF62
 3284 057f 01       		.byte	0x1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 92


 3285 0580 EA04     		.2byte	0x4ea
 3286 0582 00000000 		.4byte	.LFB24
 3287 0586 2C000000 		.4byte	.LFE24-.LFB24
 3288 058a 01       		.uleb128 0x1
 3289 058b 9C       		.byte	0x9c
 3290 058c A0050000 		.4byte	0x5a0
 3291 0590 12       		.uleb128 0x12
 3292 0591 D6010000 		.4byte	.LASF48
 3293 0595 01       		.byte	0x1
 3294 0596 EA04     		.2byte	0x4ea
 3295 0598 6B000000 		.4byte	0x6b
 3296 059c 02       		.uleb128 0x2
 3297 059d 91       		.byte	0x91
 3298 059e 77       		.sleb128 -9
 3299 059f 00       		.byte	0
 3300 05a0 17       		.uleb128 0x17
 3301 05a1 C5020000 		.4byte	.LASF63
 3302 05a5 01       		.byte	0x1
 3303 05a6 FD04     		.2byte	0x4fd
 3304 05a8 00000000 		.4byte	.LFB25
 3305 05ac 2C000000 		.4byte	.LFE25-.LFB25
 3306 05b0 01       		.uleb128 0x1
 3307 05b1 9C       		.byte	0x9c
 3308 05b2 C6050000 		.4byte	0x5c6
 3309 05b6 12       		.uleb128 0x12
 3310 05b7 D6010000 		.4byte	.LASF48
 3311 05bb 01       		.byte	0x1
 3312 05bc FD04     		.2byte	0x4fd
 3313 05be 6B000000 		.4byte	0x6b
 3314 05c2 02       		.uleb128 0x2
 3315 05c3 91       		.byte	0x91
 3316 05c4 77       		.sleb128 -9
 3317 05c5 00       		.byte	0
 3318 05c6 17       		.uleb128 0x17
 3319 05c7 D9030000 		.4byte	.LASF64
 3320 05cb 01       		.byte	0x1
 3321 05cc 1105     		.2byte	0x511
 3322 05ce 00000000 		.4byte	.LFB26
 3323 05d2 2C000000 		.4byte	.LFE26-.LFB26
 3324 05d6 01       		.uleb128 0x1
 3325 05d7 9C       		.byte	0x9c
 3326 05d8 EC050000 		.4byte	0x5ec
 3327 05dc 12       		.uleb128 0x12
 3328 05dd D6010000 		.4byte	.LASF48
 3329 05e1 01       		.byte	0x1
 3330 05e2 1105     		.2byte	0x511
 3331 05e4 6B000000 		.4byte	0x6b
 3332 05e8 02       		.uleb128 0x2
 3333 05e9 91       		.byte	0x91
 3334 05ea 77       		.sleb128 -9
 3335 05eb 00       		.byte	0
 3336 05ec 17       		.uleb128 0x17
 3337 05ed 04050000 		.4byte	.LASF65
 3338 05f1 01       		.byte	0x1
 3339 05f2 2505     		.2byte	0x525
 3340 05f4 00000000 		.4byte	.LFB27
 3341 05f8 14000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 93


 3342 05fc 01       		.uleb128 0x1
 3343 05fd 9C       		.byte	0x9c
 3344 05fe 12060000 		.4byte	0x612
 3345 0602 12       		.uleb128 0x12
 3346 0603 4B050000 		.4byte	.LASF40
 3347 0607 01       		.byte	0x1
 3348 0608 2505     		.2byte	0x525
 3349 060a 6B000000 		.4byte	0x6b
 3350 060e 02       		.uleb128 0x2
 3351 060f 91       		.byte	0x91
 3352 0610 77       		.sleb128 -9
 3353 0611 00       		.byte	0
 3354 0612 14       		.uleb128 0x14
 3355 0613 CA000000 		.4byte	.LASF66
 3356 0617 01       		.byte	0x1
 3357 0618 4405     		.2byte	0x544
 3358 061a 00000000 		.4byte	.LFB28
 3359 061e 20000000 		.4byte	.LFE28-.LFB28
 3360 0622 01       		.uleb128 0x1
 3361 0623 9C       		.byte	0x9c
 3362 0624 11       		.uleb128 0x11
 3363 0625 C8050000 		.4byte	.LASF67
 3364 0629 01       		.byte	0x1
 3365 062a 5D05     		.2byte	0x55d
 3366 062c 00000000 		.4byte	.LFB29
 3367 0630 48000000 		.4byte	.LFE29-.LFB29
 3368 0634 01       		.uleb128 0x1
 3369 0635 9C       		.byte	0x9c
 3370 0636 4A060000 		.4byte	0x64a
 3371 063a 12       		.uleb128 0x12
 3372 063b E8040000 		.4byte	.LASF68
 3373 063f 01       		.byte	0x1
 3374 0640 5D05     		.2byte	0x55d
 3375 0642 81000000 		.4byte	0x81
 3376 0646 02       		.uleb128 0x2
 3377 0647 91       		.byte	0x91
 3378 0648 74       		.sleb128 -12
 3379 0649 00       		.byte	0
 3380 064a 11       		.uleb128 0x11
 3381 064b A1010000 		.4byte	.LASF69
 3382 064f 01       		.byte	0x1
 3383 0650 7905     		.2byte	0x579
 3384 0652 00000000 		.4byte	.LFB30
 3385 0656 28000000 		.4byte	.LFE30-.LFB30
 3386 065a 01       		.uleb128 0x1
 3387 065b 9C       		.byte	0x9c
 3388 065c 70060000 		.4byte	0x670
 3389 0660 12       		.uleb128 0x12
 3390 0661 37060000 		.4byte	.LASF70
 3391 0665 01       		.byte	0x1
 3392 0666 7905     		.2byte	0x579
 3393 0668 76000000 		.4byte	0x76
 3394 066c 02       		.uleb128 0x2
 3395 066d 91       		.byte	0x91
 3396 066e 76       		.sleb128 -10
 3397 066f 00       		.byte	0
 3398 0670 11       		.uleb128 0x11
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 94


 3399 0671 20010000 		.4byte	.LASF71
 3400 0675 01       		.byte	0x1
 3401 0676 8C05     		.2byte	0x58c
 3402 0678 00000000 		.4byte	.LFB31
 3403 067c 80000000 		.4byte	.LFE31-.LFB31
 3404 0680 01       		.uleb128 0x1
 3405 0681 9C       		.byte	0x9c
 3406 0682 96060000 		.4byte	0x696
 3407 0686 12       		.uleb128 0x12
 3408 0687 1B010000 		.4byte	.LASF22
 3409 068b 01       		.byte	0x1
 3410 068c 8C05     		.2byte	0x58c
 3411 068e 81000000 		.4byte	0x81
 3412 0692 02       		.uleb128 0x2
 3413 0693 91       		.byte	0x91
 3414 0694 74       		.sleb128 -12
 3415 0695 00       		.byte	0
 3416 0696 19       		.uleb128 0x19
 3417 0697 B0030000 		.4byte	.LASF72
 3418 069b 01       		.byte	0x1
 3419 069c AF05     		.2byte	0x5af
 3420 069e 00000000 		.4byte	.LFB32
 3421 06a2 24000000 		.4byte	.LFE32-.LFB32
 3422 06a6 01       		.uleb128 0x1
 3423 06a7 9C       		.byte	0x9c
 3424 06a8 11       		.uleb128 0x11
 3425 06a9 28020000 		.4byte	.LASF73
 3426 06ad 01       		.byte	0x1
 3427 06ae D105     		.2byte	0x5d1
 3428 06b0 00000000 		.4byte	.LFB33
 3429 06b4 64000000 		.4byte	.LFE33-.LFB33
 3430 06b8 01       		.uleb128 0x1
 3431 06b9 9C       		.byte	0x9c
 3432 06ba CC060000 		.4byte	0x6cc
 3433 06be 1A       		.uleb128 0x1a
 3434 06bf 6900     		.ascii	"i\000"
 3435 06c1 01       		.byte	0x1
 3436 06c2 D305     		.2byte	0x5d3
 3437 06c4 81000000 		.4byte	0x81
 3438 06c8 02       		.uleb128 0x2
 3439 06c9 91       		.byte	0x91
 3440 06ca 74       		.sleb128 -12
 3441 06cb 00       		.byte	0
 3442 06cc 19       		.uleb128 0x19
 3443 06cd 64050000 		.4byte	.LASF74
 3444 06d1 01       		.byte	0x1
 3445 06d2 F705     		.2byte	0x5f7
 3446 06d4 00000000 		.4byte	.LFB34
 3447 06d8 1C000000 		.4byte	.LFE34-.LFB34
 3448 06dc 01       		.uleb128 0x1
 3449 06dd 9C       		.byte	0x9c
 3450 06de 14       		.uleb128 0x14
 3451 06df 10060000 		.4byte	.LASF75
 3452 06e3 01       		.byte	0x1
 3453 06e4 0F06     		.2byte	0x60f
 3454 06e6 00000000 		.4byte	.LFB35
 3455 06ea 18000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 95


 3456 06ee 01       		.uleb128 0x1
 3457 06ef 9C       		.byte	0x9c
 3458 06f0 14       		.uleb128 0x14
 3459 06f1 DA000000 		.4byte	.LASF76
 3460 06f5 01       		.byte	0x1
 3461 06f6 2606     		.2byte	0x626
 3462 06f8 00000000 		.4byte	.LFB36
 3463 06fc 18000000 		.4byte	.LFE36-.LFB36
 3464 0700 01       		.uleb128 0x1
 3465 0701 9C       		.byte	0x9c
 3466 0702 14       		.uleb128 0x14
 3467 0703 D0050000 		.4byte	.LASF77
 3468 0707 01       		.byte	0x1
 3469 0708 3D06     		.2byte	0x63d
 3470 070a 00000000 		.4byte	.LFB37
 3471 070e 18000000 		.4byte	.LFE37-.LFB37
 3472 0712 01       		.uleb128 0x1
 3473 0713 9C       		.byte	0x9c
 3474 0714 17       		.uleb128 0x17
 3475 0715 44060000 		.4byte	.LASF78
 3476 0719 01       		.byte	0x1
 3477 071a 5306     		.2byte	0x653
 3478 071c 00000000 		.4byte	.LFB38
 3479 0720 1C000000 		.4byte	.LFE38-.LFB38
 3480 0724 01       		.uleb128 0x1
 3481 0725 9C       		.byte	0x9c
 3482 0726 3A070000 		.4byte	0x73a
 3483 072a 12       		.uleb128 0x12
 3484 072b 36020000 		.4byte	.LASF58
 3485 072f 01       		.byte	0x1
 3486 0730 5306     		.2byte	0x653
 3487 0732 81000000 		.4byte	0x81
 3488 0736 02       		.uleb128 0x2
 3489 0737 91       		.byte	0x91
 3490 0738 74       		.sleb128 -12
 3491 0739 00       		.byte	0
 3492 073a 15       		.uleb128 0x15
 3493 073b 3B010000 		.4byte	.LASF80
 3494 073f 01       		.byte	0x1
 3495 0740 6706     		.2byte	0x667
 3496 0742 81000000 		.4byte	0x81
 3497 0746 00000000 		.4byte	.LFB39
 3498 074a 18000000 		.4byte	.LFE39-.LFB39
 3499 074e 01       		.uleb128 0x1
 3500 074f 9C       		.byte	0x9c
 3501 0750 15       		.uleb128 0x15
 3502 0751 14040000 		.4byte	.LASF81
 3503 0755 01       		.byte	0x1
 3504 0756 7B06     		.2byte	0x67b
 3505 0758 81000000 		.4byte	0x81
 3506 075c 00000000 		.4byte	.LFB40
 3507 0760 18000000 		.4byte	.LFE40-.LFB40
 3508 0764 01       		.uleb128 0x1
 3509 0765 9C       		.byte	0x9c
 3510 0766 17       		.uleb128 0x17
 3511 0767 18030000 		.4byte	.LASF82
 3512 076b 01       		.byte	0x1
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 96


 3513 076c 9B06     		.2byte	0x69b
 3514 076e 00000000 		.4byte	.LFB41
 3515 0772 34000000 		.4byte	.LFE41-.LFB41
 3516 0776 01       		.uleb128 0x1
 3517 0777 9C       		.byte	0x9c
 3518 0778 8C070000 		.4byte	0x78c
 3519 077c 12       		.uleb128 0x12
 3520 077d 3C020000 		.4byte	.LASF83
 3521 0781 01       		.byte	0x1
 3522 0782 9B06     		.2byte	0x69b
 3523 0784 81000000 		.4byte	0x81
 3524 0788 02       		.uleb128 0x2
 3525 0789 91       		.byte	0x91
 3526 078a 74       		.sleb128 -12
 3527 078b 00       		.byte	0
 3528 078c 15       		.uleb128 0x15
 3529 078d 56020000 		.4byte	.LASF84
 3530 0791 01       		.byte	0x1
 3531 0792 BC06     		.2byte	0x6bc
 3532 0794 81000000 		.4byte	0x81
 3533 0798 00000000 		.4byte	.LFB42
 3534 079c 18000000 		.4byte	.LFE42-.LFB42
 3535 07a0 01       		.uleb128 0x1
 3536 07a1 9C       		.byte	0x9c
 3537 07a2 14       		.uleb128 0x14
 3538 07a3 79020000 		.4byte	.LASF85
 3539 07a7 01       		.byte	0x1
 3540 07a8 D006     		.2byte	0x6d0
 3541 07aa 00000000 		.4byte	.LFB43
 3542 07ae 14000000 		.4byte	.LFE43-.LFB43
 3543 07b2 01       		.uleb128 0x1
 3544 07b3 9C       		.byte	0x9c
 3545 07b4 16       		.uleb128 0x16
 3546 07b5 8B050000 		.4byte	.LASF86
 3547 07b9 01       		.byte	0x1
 3548 07ba F506     		.2byte	0x6f5
 3549 07bc DD000000 		.4byte	0xdd
 3550 07c0 00000000 		.4byte	.LFB44
 3551 07c4 2C000000 		.4byte	.LFE44-.LFB44
 3552 07c8 01       		.uleb128 0x1
 3553 07c9 9C       		.byte	0x9c
 3554 07ca FC070000 		.4byte	0x7fc
 3555 07ce 12       		.uleb128 0x12
 3556 07cf D6010000 		.4byte	.LASF48
 3557 07d3 01       		.byte	0x1
 3558 07d4 F506     		.2byte	0x6f5
 3559 07d6 81000000 		.4byte	0x81
 3560 07da 02       		.uleb128 0x2
 3561 07db 91       		.byte	0x91
 3562 07dc 6C       		.sleb128 -20
 3563 07dd 12       		.uleb128 0x12
 3564 07de FA030000 		.4byte	.LASF87
 3565 07e2 01       		.byte	0x1
 3566 07e3 F506     		.2byte	0x6f5
 3567 07e5 DD000000 		.4byte	0xdd
 3568 07e9 02       		.uleb128 0x2
 3569 07ea 91       		.byte	0x91
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 97


 3570 07eb 68       		.sleb128 -24
 3571 07ec 13       		.uleb128 0x13
 3572 07ed F3030000 		.4byte	.LASF88
 3573 07f1 01       		.byte	0x1
 3574 07f2 F706     		.2byte	0x6f7
 3575 07f4 DD000000 		.4byte	0xdd
 3576 07f8 02       		.uleb128 0x2
 3577 07f9 91       		.byte	0x91
 3578 07fa 74       		.sleb128 -12
 3579 07fb 00       		.byte	0
 3580 07fc 16       		.uleb128 0x16
 3581 07fd D5020000 		.4byte	.LASF89
 3582 0801 01       		.byte	0x1
 3583 0802 0F07     		.2byte	0x70f
 3584 0804 DD000000 		.4byte	0xdd
 3585 0808 00000000 		.4byte	.LFB45
 3586 080c 1C000000 		.4byte	.LFE45-.LFB45
 3587 0810 01       		.uleb128 0x1
 3588 0811 9C       		.byte	0x9c
 3589 0812 26080000 		.4byte	0x826
 3590 0816 12       		.uleb128 0x12
 3591 0817 D6010000 		.4byte	.LASF48
 3592 081b 01       		.byte	0x1
 3593 081c 0F07     		.2byte	0x70f
 3594 081e 81000000 		.4byte	0x81
 3595 0822 02       		.uleb128 0x2
 3596 0823 91       		.byte	0x91
 3597 0824 74       		.sleb128 -12
 3598 0825 00       		.byte	0
 3599 0826 1B       		.uleb128 0x1b
 3600 0827 57060000 		.4byte	.LASF103
 3601 082b 01       		.byte	0x1
 3602 082c 2307     		.2byte	0x723
 3603 082e 00000000 		.4byte	.LFB46
 3604 0832 44000000 		.4byte	.LFE46-.LFB46
 3605 0836 01       		.uleb128 0x1
 3606 0837 9C       		.byte	0x9c
 3607 0838 4A080000 		.4byte	0x84a
 3608 083c 1A       		.uleb128 0x1a
 3609 083d 6900     		.ascii	"i\000"
 3610 083f 01       		.byte	0x1
 3611 0840 2507     		.2byte	0x725
 3612 0842 81000000 		.4byte	0x81
 3613 0846 02       		.uleb128 0x2
 3614 0847 91       		.byte	0x91
 3615 0848 74       		.sleb128 -12
 3616 0849 00       		.byte	0
 3617 084a 17       		.uleb128 0x17
 3618 084b 48020000 		.4byte	.LASF90
 3619 084f 01       		.byte	0x1
 3620 0850 4807     		.2byte	0x748
 3621 0852 00000000 		.4byte	.LFB47
 3622 0856 C0000000 		.4byte	.LFE47-.LFB47
 3623 085a 01       		.uleb128 0x1
 3624 085b 9C       		.byte	0x9c
 3625 085c 70080000 		.4byte	0x870
 3626 0860 12       		.uleb128 0x12
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 98


 3627 0861 B3050000 		.4byte	.LASF91
 3628 0865 01       		.byte	0x1
 3629 0866 4807     		.2byte	0x748
 3630 0868 70080000 		.4byte	0x870
 3631 086c 02       		.uleb128 0x2
 3632 086d 91       		.byte	0x91
 3633 086e 74       		.sleb128 -12
 3634 086f 00       		.byte	0
 3635 0870 07       		.uleb128 0x7
 3636 0871 04       		.byte	0x4
 3637 0872 81000000 		.4byte	0x81
 3638 0876 09       		.uleb128 0x9
 3639 0877 DD000000 		.4byte	0xdd
 3640 087b 86080000 		.4byte	0x886
 3641 087f 0A       		.uleb128 0xa
 3642 0880 D6000000 		.4byte	0xd6
 3643 0884 04       		.byte	0x4
 3644 0885 00       		.byte	0
 3645 0886 0F       		.uleb128 0xf
 3646 0887 A0050000 		.4byte	.LASF92
 3647 088b 01       		.byte	0x1
 3648 088c 22       		.byte	0x22
 3649 088d 76080000 		.4byte	0x876
 3650 0891 05       		.uleb128 0x5
 3651 0892 03       		.byte	0x3
 3652 0893 00000000 		.4byte	CySysTickCallbacks
 3653 0897 1C       		.uleb128 0x1c
 3654 0898 C8030000 		.4byte	.LASF93
 3655 089c 01       		.byte	0x1
 3656 089d 34       		.byte	0x34
 3657 089e 81000000 		.4byte	0x81
 3658 08a2 05       		.uleb128 0x5
 3659 08a3 03       		.byte	0x3
 3660 08a4 00000000 		.4byte	CySysTickInitVar
 3661 08a8 1C       		.uleb128 0x1c
 3662 08a9 26040000 		.4byte	.LASF94
 3663 08ad 01       		.byte	0x1
 3664 08ae 1B       		.byte	0x1b
 3665 08af 81000000 		.4byte	0x81
 3666 08b3 05       		.uleb128 0x5
 3667 08b4 03       		.byte	0x3
 3668 08b5 00000000 		.4byte	cydelayFreqHz
 3669 08b9 1C       		.uleb128 0x1c
 3670 08ba 92010000 		.4byte	.LASF95
 3671 08be 01       		.byte	0x1
 3672 08bf 1C       		.byte	0x1c
 3673 08c0 81000000 		.4byte	0x81
 3674 08c4 05       		.uleb128 0x5
 3675 08c5 03       		.byte	0x3
 3676 08c6 00000000 		.4byte	cydelayFreqKhz
 3677 08ca 1C       		.uleb128 0x1c
 3678 08cb FA050000 		.4byte	.LASF96
 3679 08cf 01       		.byte	0x1
 3680 08d0 1D       		.byte	0x1d
 3681 08d1 6B000000 		.4byte	0x6b
 3682 08d5 05       		.uleb128 0x5
 3683 08d6 03       		.byte	0x3
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 99


 3684 08d7 00000000 		.4byte	cydelayFreqMhz
 3685 08db 1C       		.uleb128 0x1c
 3686 08dc 1B020000 		.4byte	.LASF97
 3687 08e0 01       		.byte	0x1
 3688 08e1 1E       		.byte	0x1e
 3689 08e2 81000000 		.4byte	0x81
 3690 08e6 05       		.uleb128 0x5
 3691 08e7 03       		.byte	0x3
 3692 08e8 00000000 		.4byte	cydelay32kMs
 3693 08ec 09       		.uleb128 0x9
 3694 08ed 6B000000 		.4byte	0x6b
 3695 08f1 FC080000 		.4byte	0x8fc
 3696 08f5 0A       		.uleb128 0xa
 3697 08f6 D6000000 		.4byte	0xd6
 3698 08fa 2D       		.byte	0x2d
 3699 08fb 00       		.byte	0
 3700 08fc 1C       		.uleb128 0x1c
 3701 08fd 03040000 		.4byte	.LASF98
 3702 0901 01       		.byte	0x1
 3703 0902 39       		.byte	0x39
 3704 0903 0D090000 		.4byte	0x90d
 3705 0907 05       		.uleb128 0x5
 3706 0908 03       		.byte	0x3
 3707 0909 00000000 		.4byte	cyImoFreqMhz2Reg
 3708 090d 1D       		.uleb128 0x1d
 3709 090e EC080000 		.4byte	0x8ec
 3710 0912 00       		.byte	0
 3711              		.section	.debug_abbrev,"",%progbits
 3712              	.Ldebug_abbrev0:
 3713 0000 01       		.uleb128 0x1
 3714 0001 11       		.uleb128 0x11
 3715 0002 01       		.byte	0x1
 3716 0003 25       		.uleb128 0x25
 3717 0004 0E       		.uleb128 0xe
 3718 0005 13       		.uleb128 0x13
 3719 0006 0B       		.uleb128 0xb
 3720 0007 03       		.uleb128 0x3
 3721 0008 0E       		.uleb128 0xe
 3722 0009 1B       		.uleb128 0x1b
 3723 000a 0E       		.uleb128 0xe
 3724 000b 55       		.uleb128 0x55
 3725 000c 17       		.uleb128 0x17
 3726 000d 11       		.uleb128 0x11
 3727 000e 01       		.uleb128 0x1
 3728 000f 10       		.uleb128 0x10
 3729 0010 17       		.uleb128 0x17
 3730 0011 00       		.byte	0
 3731 0012 00       		.byte	0
 3732 0013 02       		.uleb128 0x2
 3733 0014 24       		.uleb128 0x24
 3734 0015 00       		.byte	0
 3735 0016 0B       		.uleb128 0xb
 3736 0017 0B       		.uleb128 0xb
 3737 0018 3E       		.uleb128 0x3e
 3738 0019 0B       		.uleb128 0xb
 3739 001a 03       		.uleb128 0x3
 3740 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 100


 3741 001c 00       		.byte	0
 3742 001d 00       		.byte	0
 3743 001e 03       		.uleb128 0x3
 3744 001f 24       		.uleb128 0x24
 3745 0020 00       		.byte	0
 3746 0021 0B       		.uleb128 0xb
 3747 0022 0B       		.uleb128 0xb
 3748 0023 3E       		.uleb128 0x3e
 3749 0024 0B       		.uleb128 0xb
 3750 0025 03       		.uleb128 0x3
 3751 0026 08       		.uleb128 0x8
 3752 0027 00       		.byte	0
 3753 0028 00       		.byte	0
 3754 0029 04       		.uleb128 0x4
 3755 002a 16       		.uleb128 0x16
 3756 002b 00       		.byte	0
 3757 002c 03       		.uleb128 0x3
 3758 002d 0E       		.uleb128 0xe
 3759 002e 3A       		.uleb128 0x3a
 3760 002f 0B       		.uleb128 0xb
 3761 0030 3B       		.uleb128 0x3b
 3762 0031 0B       		.uleb128 0xb
 3763 0032 49       		.uleb128 0x49
 3764 0033 13       		.uleb128 0x13
 3765 0034 00       		.byte	0
 3766 0035 00       		.byte	0
 3767 0036 05       		.uleb128 0x5
 3768 0037 16       		.uleb128 0x16
 3769 0038 00       		.byte	0
 3770 0039 03       		.uleb128 0x3
 3771 003a 0E       		.uleb128 0xe
 3772 003b 3A       		.uleb128 0x3a
 3773 003c 0B       		.uleb128 0xb
 3774 003d 3B       		.uleb128 0x3b
 3775 003e 05       		.uleb128 0x5
 3776 003f 49       		.uleb128 0x49
 3777 0040 13       		.uleb128 0x13
 3778 0041 00       		.byte	0
 3779 0042 00       		.byte	0
 3780 0043 06       		.uleb128 0x6
 3781 0044 35       		.uleb128 0x35
 3782 0045 00       		.byte	0
 3783 0046 49       		.uleb128 0x49
 3784 0047 13       		.uleb128 0x13
 3785 0048 00       		.byte	0
 3786 0049 00       		.byte	0
 3787 004a 07       		.uleb128 0x7
 3788 004b 0F       		.uleb128 0xf
 3789 004c 00       		.byte	0
 3790 004d 0B       		.uleb128 0xb
 3791 004e 0B       		.uleb128 0xb
 3792 004f 49       		.uleb128 0x49
 3793 0050 13       		.uleb128 0x13
 3794 0051 00       		.byte	0
 3795 0052 00       		.byte	0
 3796 0053 08       		.uleb128 0x8
 3797 0054 15       		.uleb128 0x15
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 101


 3798 0055 00       		.byte	0
 3799 0056 27       		.uleb128 0x27
 3800 0057 19       		.uleb128 0x19
 3801 0058 00       		.byte	0
 3802 0059 00       		.byte	0
 3803 005a 09       		.uleb128 0x9
 3804 005b 01       		.uleb128 0x1
 3805 005c 01       		.byte	0x1
 3806 005d 49       		.uleb128 0x49
 3807 005e 13       		.uleb128 0x13
 3808 005f 01       		.uleb128 0x1
 3809 0060 13       		.uleb128 0x13
 3810 0061 00       		.byte	0
 3811 0062 00       		.byte	0
 3812 0063 0A       		.uleb128 0xa
 3813 0064 21       		.uleb128 0x21
 3814 0065 00       		.byte	0
 3815 0066 49       		.uleb128 0x49
 3816 0067 13       		.uleb128 0x13
 3817 0068 2F       		.uleb128 0x2f
 3818 0069 0B       		.uleb128 0xb
 3819 006a 00       		.byte	0
 3820 006b 00       		.byte	0
 3821 006c 0B       		.uleb128 0xb
 3822 006d 2E       		.uleb128 0x2e
 3823 006e 00       		.byte	0
 3824 006f 3F       		.uleb128 0x3f
 3825 0070 19       		.uleb128 0x19
 3826 0071 03       		.uleb128 0x3
 3827 0072 0E       		.uleb128 0xe
 3828 0073 3A       		.uleb128 0x3a
 3829 0074 0B       		.uleb128 0xb
 3830 0075 3B       		.uleb128 0x3b
 3831 0076 0B       		.uleb128 0xb
 3832 0077 27       		.uleb128 0x27
 3833 0078 19       		.uleb128 0x19
 3834 0079 11       		.uleb128 0x11
 3835 007a 01       		.uleb128 0x1
 3836 007b 12       		.uleb128 0x12
 3837 007c 06       		.uleb128 0x6
 3838 007d 40       		.uleb128 0x40
 3839 007e 18       		.uleb128 0x18
 3840 007f 9742     		.uleb128 0x2117
 3841 0081 19       		.uleb128 0x19
 3842 0082 00       		.byte	0
 3843 0083 00       		.byte	0
 3844 0084 0C       		.uleb128 0xc
 3845 0085 2E       		.uleb128 0x2e
 3846 0086 00       		.byte	0
 3847 0087 3F       		.uleb128 0x3f
 3848 0088 19       		.uleb128 0x19
 3849 0089 03       		.uleb128 0x3
 3850 008a 0E       		.uleb128 0xe
 3851 008b 3A       		.uleb128 0x3a
 3852 008c 0B       		.uleb128 0xb
 3853 008d 3B       		.uleb128 0x3b
 3854 008e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 102


 3855 008f 27       		.uleb128 0x27
 3856 0090 19       		.uleb128 0x19
 3857 0091 11       		.uleb128 0x11
 3858 0092 01       		.uleb128 0x1
 3859 0093 12       		.uleb128 0x12
 3860 0094 06       		.uleb128 0x6
 3861 0095 40       		.uleb128 0x40
 3862 0096 18       		.uleb128 0x18
 3863 0097 9642     		.uleb128 0x2116
 3864 0099 19       		.uleb128 0x19
 3865 009a 00       		.byte	0
 3866 009b 00       		.byte	0
 3867 009c 0D       		.uleb128 0xd
 3868 009d 2E       		.uleb128 0x2e
 3869 009e 01       		.byte	0x1
 3870 009f 3F       		.uleb128 0x3f
 3871 00a0 19       		.uleb128 0x19
 3872 00a1 03       		.uleb128 0x3
 3873 00a2 0E       		.uleb128 0xe
 3874 00a3 3A       		.uleb128 0x3a
 3875 00a4 0B       		.uleb128 0xb
 3876 00a5 3B       		.uleb128 0x3b
 3877 00a6 0B       		.uleb128 0xb
 3878 00a7 27       		.uleb128 0x27
 3879 00a8 19       		.uleb128 0x19
 3880 00a9 11       		.uleb128 0x11
 3881 00aa 01       		.uleb128 0x1
 3882 00ab 12       		.uleb128 0x12
 3883 00ac 06       		.uleb128 0x6
 3884 00ad 40       		.uleb128 0x40
 3885 00ae 18       		.uleb128 0x18
 3886 00af 9642     		.uleb128 0x2116
 3887 00b1 19       		.uleb128 0x19
 3888 00b2 01       		.uleb128 0x1
 3889 00b3 13       		.uleb128 0x13
 3890 00b4 00       		.byte	0
 3891 00b5 00       		.byte	0
 3892 00b6 0E       		.uleb128 0xe
 3893 00b7 34       		.uleb128 0x34
 3894 00b8 00       		.byte	0
 3895 00b9 03       		.uleb128 0x3
 3896 00ba 08       		.uleb128 0x8
 3897 00bb 3A       		.uleb128 0x3a
 3898 00bc 0B       		.uleb128 0xb
 3899 00bd 3B       		.uleb128 0x3b
 3900 00be 0B       		.uleb128 0xb
 3901 00bf 49       		.uleb128 0x49
 3902 00c0 13       		.uleb128 0x13
 3903 00c1 02       		.uleb128 0x2
 3904 00c2 18       		.uleb128 0x18
 3905 00c3 00       		.byte	0
 3906 00c4 00       		.byte	0
 3907 00c5 0F       		.uleb128 0xf
 3908 00c6 34       		.uleb128 0x34
 3909 00c7 00       		.byte	0
 3910 00c8 03       		.uleb128 0x3
 3911 00c9 0E       		.uleb128 0xe
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 103


 3912 00ca 3A       		.uleb128 0x3a
 3913 00cb 0B       		.uleb128 0xb
 3914 00cc 3B       		.uleb128 0x3b
 3915 00cd 0B       		.uleb128 0xb
 3916 00ce 49       		.uleb128 0x49
 3917 00cf 13       		.uleb128 0x13
 3918 00d0 02       		.uleb128 0x2
 3919 00d1 18       		.uleb128 0x18
 3920 00d2 00       		.byte	0
 3921 00d3 00       		.byte	0
 3922 00d4 10       		.uleb128 0x10
 3923 00d5 2E       		.uleb128 0x2e
 3924 00d6 00       		.byte	0
 3925 00d7 03       		.uleb128 0x3
 3926 00d8 0E       		.uleb128 0xe
 3927 00d9 3A       		.uleb128 0x3a
 3928 00da 0B       		.uleb128 0xb
 3929 00db 3B       		.uleb128 0x3b
 3930 00dc 0B       		.uleb128 0xb
 3931 00dd 27       		.uleb128 0x27
 3932 00de 19       		.uleb128 0x19
 3933 00df 49       		.uleb128 0x49
 3934 00e0 13       		.uleb128 0x13
 3935 00e1 11       		.uleb128 0x11
 3936 00e2 01       		.uleb128 0x1
 3937 00e3 12       		.uleb128 0x12
 3938 00e4 06       		.uleb128 0x6
 3939 00e5 40       		.uleb128 0x40
 3940 00e6 18       		.uleb128 0x18
 3941 00e7 9742     		.uleb128 0x2117
 3942 00e9 19       		.uleb128 0x19
 3943 00ea 00       		.byte	0
 3944 00eb 00       		.byte	0
 3945 00ec 11       		.uleb128 0x11
 3946 00ed 2E       		.uleb128 0x2e
 3947 00ee 01       		.byte	0x1
 3948 00ef 3F       		.uleb128 0x3f
 3949 00f0 19       		.uleb128 0x19
 3950 00f1 03       		.uleb128 0x3
 3951 00f2 0E       		.uleb128 0xe
 3952 00f3 3A       		.uleb128 0x3a
 3953 00f4 0B       		.uleb128 0xb
 3954 00f5 3B       		.uleb128 0x3b
 3955 00f6 05       		.uleb128 0x5
 3956 00f7 27       		.uleb128 0x27
 3957 00f8 19       		.uleb128 0x19
 3958 00f9 11       		.uleb128 0x11
 3959 00fa 01       		.uleb128 0x1
 3960 00fb 12       		.uleb128 0x12
 3961 00fc 06       		.uleb128 0x6
 3962 00fd 40       		.uleb128 0x40
 3963 00fe 18       		.uleb128 0x18
 3964 00ff 9642     		.uleb128 0x2116
 3965 0101 19       		.uleb128 0x19
 3966 0102 01       		.uleb128 0x1
 3967 0103 13       		.uleb128 0x13
 3968 0104 00       		.byte	0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 104


 3969 0105 00       		.byte	0
 3970 0106 12       		.uleb128 0x12
 3971 0107 05       		.uleb128 0x5
 3972 0108 00       		.byte	0
 3973 0109 03       		.uleb128 0x3
 3974 010a 0E       		.uleb128 0xe
 3975 010b 3A       		.uleb128 0x3a
 3976 010c 0B       		.uleb128 0xb
 3977 010d 3B       		.uleb128 0x3b
 3978 010e 05       		.uleb128 0x5
 3979 010f 49       		.uleb128 0x49
 3980 0110 13       		.uleb128 0x13
 3981 0111 02       		.uleb128 0x2
 3982 0112 18       		.uleb128 0x18
 3983 0113 00       		.byte	0
 3984 0114 00       		.byte	0
 3985 0115 13       		.uleb128 0x13
 3986 0116 34       		.uleb128 0x34
 3987 0117 00       		.byte	0
 3988 0118 03       		.uleb128 0x3
 3989 0119 0E       		.uleb128 0xe
 3990 011a 3A       		.uleb128 0x3a
 3991 011b 0B       		.uleb128 0xb
 3992 011c 3B       		.uleb128 0x3b
 3993 011d 05       		.uleb128 0x5
 3994 011e 49       		.uleb128 0x49
 3995 011f 13       		.uleb128 0x13
 3996 0120 02       		.uleb128 0x2
 3997 0121 18       		.uleb128 0x18
 3998 0122 00       		.byte	0
 3999 0123 00       		.byte	0
 4000 0124 14       		.uleb128 0x14
 4001 0125 2E       		.uleb128 0x2e
 4002 0126 00       		.byte	0
 4003 0127 3F       		.uleb128 0x3f
 4004 0128 19       		.uleb128 0x19
 4005 0129 03       		.uleb128 0x3
 4006 012a 0E       		.uleb128 0xe
 4007 012b 3A       		.uleb128 0x3a
 4008 012c 0B       		.uleb128 0xb
 4009 012d 3B       		.uleb128 0x3b
 4010 012e 05       		.uleb128 0x5
 4011 012f 27       		.uleb128 0x27
 4012 0130 19       		.uleb128 0x19
 4013 0131 11       		.uleb128 0x11
 4014 0132 01       		.uleb128 0x1
 4015 0133 12       		.uleb128 0x12
 4016 0134 06       		.uleb128 0x6
 4017 0135 40       		.uleb128 0x40
 4018 0136 18       		.uleb128 0x18
 4019 0137 9742     		.uleb128 0x2117
 4020 0139 19       		.uleb128 0x19
 4021 013a 00       		.byte	0
 4022 013b 00       		.byte	0
 4023 013c 15       		.uleb128 0x15
 4024 013d 2E       		.uleb128 0x2e
 4025 013e 00       		.byte	0
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 105


 4026 013f 3F       		.uleb128 0x3f
 4027 0140 19       		.uleb128 0x19
 4028 0141 03       		.uleb128 0x3
 4029 0142 0E       		.uleb128 0xe
 4030 0143 3A       		.uleb128 0x3a
 4031 0144 0B       		.uleb128 0xb
 4032 0145 3B       		.uleb128 0x3b
 4033 0146 05       		.uleb128 0x5
 4034 0147 27       		.uleb128 0x27
 4035 0148 19       		.uleb128 0x19
 4036 0149 49       		.uleb128 0x49
 4037 014a 13       		.uleb128 0x13
 4038 014b 11       		.uleb128 0x11
 4039 014c 01       		.uleb128 0x1
 4040 014d 12       		.uleb128 0x12
 4041 014e 06       		.uleb128 0x6
 4042 014f 40       		.uleb128 0x40
 4043 0150 18       		.uleb128 0x18
 4044 0151 9742     		.uleb128 0x2117
 4045 0153 19       		.uleb128 0x19
 4046 0154 00       		.byte	0
 4047 0155 00       		.byte	0
 4048 0156 16       		.uleb128 0x16
 4049 0157 2E       		.uleb128 0x2e
 4050 0158 01       		.byte	0x1
 4051 0159 3F       		.uleb128 0x3f
 4052 015a 19       		.uleb128 0x19
 4053 015b 03       		.uleb128 0x3
 4054 015c 0E       		.uleb128 0xe
 4055 015d 3A       		.uleb128 0x3a
 4056 015e 0B       		.uleb128 0xb
 4057 015f 3B       		.uleb128 0x3b
 4058 0160 05       		.uleb128 0x5
 4059 0161 27       		.uleb128 0x27
 4060 0162 19       		.uleb128 0x19
 4061 0163 49       		.uleb128 0x49
 4062 0164 13       		.uleb128 0x13
 4063 0165 11       		.uleb128 0x11
 4064 0166 01       		.uleb128 0x1
 4065 0167 12       		.uleb128 0x12
 4066 0168 06       		.uleb128 0x6
 4067 0169 40       		.uleb128 0x40
 4068 016a 18       		.uleb128 0x18
 4069 016b 9742     		.uleb128 0x2117
 4070 016d 19       		.uleb128 0x19
 4071 016e 01       		.uleb128 0x1
 4072 016f 13       		.uleb128 0x13
 4073 0170 00       		.byte	0
 4074 0171 00       		.byte	0
 4075 0172 17       		.uleb128 0x17
 4076 0173 2E       		.uleb128 0x2e
 4077 0174 01       		.byte	0x1
 4078 0175 3F       		.uleb128 0x3f
 4079 0176 19       		.uleb128 0x19
 4080 0177 03       		.uleb128 0x3
 4081 0178 0E       		.uleb128 0xe
 4082 0179 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 106


 4083 017a 0B       		.uleb128 0xb
 4084 017b 3B       		.uleb128 0x3b
 4085 017c 05       		.uleb128 0x5
 4086 017d 27       		.uleb128 0x27
 4087 017e 19       		.uleb128 0x19
 4088 017f 11       		.uleb128 0x11
 4089 0180 01       		.uleb128 0x1
 4090 0181 12       		.uleb128 0x12
 4091 0182 06       		.uleb128 0x6
 4092 0183 40       		.uleb128 0x40
 4093 0184 18       		.uleb128 0x18
 4094 0185 9742     		.uleb128 0x2117
 4095 0187 19       		.uleb128 0x19
 4096 0188 01       		.uleb128 0x1
 4097 0189 13       		.uleb128 0x13
 4098 018a 00       		.byte	0
 4099 018b 00       		.byte	0
 4100 018c 18       		.uleb128 0x18
 4101 018d 2E       		.uleb128 0x2e
 4102 018e 01       		.byte	0x1
 4103 018f 3F       		.uleb128 0x3f
 4104 0190 19       		.uleb128 0x19
 4105 0191 03       		.uleb128 0x3
 4106 0192 0E       		.uleb128 0xe
 4107 0193 3A       		.uleb128 0x3a
 4108 0194 0B       		.uleb128 0xb
 4109 0195 3B       		.uleb128 0x3b
 4110 0196 05       		.uleb128 0x5
 4111 0197 27       		.uleb128 0x27
 4112 0198 19       		.uleb128 0x19
 4113 0199 49       		.uleb128 0x49
 4114 019a 13       		.uleb128 0x13
 4115 019b 11       		.uleb128 0x11
 4116 019c 01       		.uleb128 0x1
 4117 019d 12       		.uleb128 0x12
 4118 019e 06       		.uleb128 0x6
 4119 019f 40       		.uleb128 0x40
 4120 01a0 18       		.uleb128 0x18
 4121 01a1 9642     		.uleb128 0x2116
 4122 01a3 19       		.uleb128 0x19
 4123 01a4 01       		.uleb128 0x1
 4124 01a5 13       		.uleb128 0x13
 4125 01a6 00       		.byte	0
 4126 01a7 00       		.byte	0
 4127 01a8 19       		.uleb128 0x19
 4128 01a9 2E       		.uleb128 0x2e
 4129 01aa 00       		.byte	0
 4130 01ab 3F       		.uleb128 0x3f
 4131 01ac 19       		.uleb128 0x19
 4132 01ad 03       		.uleb128 0x3
 4133 01ae 0E       		.uleb128 0xe
 4134 01af 3A       		.uleb128 0x3a
 4135 01b0 0B       		.uleb128 0xb
 4136 01b1 3B       		.uleb128 0x3b
 4137 01b2 05       		.uleb128 0x5
 4138 01b3 27       		.uleb128 0x27
 4139 01b4 19       		.uleb128 0x19
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 107


 4140 01b5 11       		.uleb128 0x11
 4141 01b6 01       		.uleb128 0x1
 4142 01b7 12       		.uleb128 0x12
 4143 01b8 06       		.uleb128 0x6
 4144 01b9 40       		.uleb128 0x40
 4145 01ba 18       		.uleb128 0x18
 4146 01bb 9642     		.uleb128 0x2116
 4147 01bd 19       		.uleb128 0x19
 4148 01be 00       		.byte	0
 4149 01bf 00       		.byte	0
 4150 01c0 1A       		.uleb128 0x1a
 4151 01c1 34       		.uleb128 0x34
 4152 01c2 00       		.byte	0
 4153 01c3 03       		.uleb128 0x3
 4154 01c4 08       		.uleb128 0x8
 4155 01c5 3A       		.uleb128 0x3a
 4156 01c6 0B       		.uleb128 0xb
 4157 01c7 3B       		.uleb128 0x3b
 4158 01c8 05       		.uleb128 0x5
 4159 01c9 49       		.uleb128 0x49
 4160 01ca 13       		.uleb128 0x13
 4161 01cb 02       		.uleb128 0x2
 4162 01cc 18       		.uleb128 0x18
 4163 01cd 00       		.byte	0
 4164 01ce 00       		.byte	0
 4165 01cf 1B       		.uleb128 0x1b
 4166 01d0 2E       		.uleb128 0x2e
 4167 01d1 01       		.byte	0x1
 4168 01d2 03       		.uleb128 0x3
 4169 01d3 0E       		.uleb128 0xe
 4170 01d4 3A       		.uleb128 0x3a
 4171 01d5 0B       		.uleb128 0xb
 4172 01d6 3B       		.uleb128 0x3b
 4173 01d7 05       		.uleb128 0x5
 4174 01d8 27       		.uleb128 0x27
 4175 01d9 19       		.uleb128 0x19
 4176 01da 11       		.uleb128 0x11
 4177 01db 01       		.uleb128 0x1
 4178 01dc 12       		.uleb128 0x12
 4179 01dd 06       		.uleb128 0x6
 4180 01de 40       		.uleb128 0x40
 4181 01df 18       		.uleb128 0x18
 4182 01e0 9642     		.uleb128 0x2116
 4183 01e2 19       		.uleb128 0x19
 4184 01e3 01       		.uleb128 0x1
 4185 01e4 13       		.uleb128 0x13
 4186 01e5 00       		.byte	0
 4187 01e6 00       		.byte	0
 4188 01e7 1C       		.uleb128 0x1c
 4189 01e8 34       		.uleb128 0x34
 4190 01e9 00       		.byte	0
 4191 01ea 03       		.uleb128 0x3
 4192 01eb 0E       		.uleb128 0xe
 4193 01ec 3A       		.uleb128 0x3a
 4194 01ed 0B       		.uleb128 0xb
 4195 01ee 3B       		.uleb128 0x3b
 4196 01ef 0B       		.uleb128 0xb
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 108


 4197 01f0 49       		.uleb128 0x49
 4198 01f1 13       		.uleb128 0x13
 4199 01f2 3F       		.uleb128 0x3f
 4200 01f3 19       		.uleb128 0x19
 4201 01f4 02       		.uleb128 0x2
 4202 01f5 18       		.uleb128 0x18
 4203 01f6 00       		.byte	0
 4204 01f7 00       		.byte	0
 4205 01f8 1D       		.uleb128 0x1d
 4206 01f9 26       		.uleb128 0x26
 4207 01fa 00       		.byte	0
 4208 01fb 49       		.uleb128 0x49
 4209 01fc 13       		.uleb128 0x13
 4210 01fd 00       		.byte	0
 4211 01fe 00       		.byte	0
 4212 01ff 00       		.byte	0
 4213              		.section	.debug_aranges,"",%progbits
 4214 0000 8C010000 		.4byte	0x18c
 4215 0004 0200     		.2byte	0x2
 4216 0006 00000000 		.4byte	.Ldebug_info0
 4217 000a 04       		.byte	0x4
 4218 000b 00       		.byte	0
 4219 000c 0000     		.2byte	0
 4220 000e 0000     		.2byte	0
 4221 0010 00000000 		.4byte	.LFB1
 4222 0014 1C000000 		.4byte	.LFE1-.LFB1
 4223 0018 00000000 		.4byte	.LFB2
 4224 001c 1C000000 		.4byte	.LFE2-.LFB2
 4225 0020 00000000 		.4byte	.LFB3
 4226 0024 FC000000 		.4byte	.LFE3-.LFB3
 4227 0028 00000000 		.4byte	.LFB4
 4228 002c 1C000000 		.4byte	.LFE4-.LFB4
 4229 0030 00000000 		.4byte	.LFB5
 4230 0034 20000000 		.4byte	.LFE5-.LFB5
 4231 0038 00000000 		.4byte	.LFB6
 4232 003c 44000000 		.4byte	.LFE6-.LFB6
 4233 0040 00000000 		.4byte	.LFB7
 4234 0044 44000000 		.4byte	.LFE7-.LFB7
 4235 0048 00000000 		.4byte	.LFB8
 4236 004c B8000000 		.4byte	.LFE8-.LFB8
 4237 0050 00000000 		.4byte	.LFB9
 4238 0054 64000000 		.4byte	.LFE9-.LFB9
 4239 0058 00000000 		.4byte	.LFB10
 4240 005c 28000000 		.4byte	.LFE10-.LFB10
 4241 0060 00000000 		.4byte	.LFB11
 4242 0064 18000000 		.4byte	.LFE11-.LFB11
 4243 0068 00000000 		.4byte	.LFB12
 4244 006c 14000000 		.4byte	.LFE12-.LFB12
 4245 0070 00000000 		.4byte	.LFB13
 4246 0074 30000000 		.4byte	.LFE13-.LFB13
 4247 0078 00000000 		.4byte	.LFB14
 4248 007c 24000000 		.4byte	.LFE14-.LFB14
 4249 0080 00000000 		.4byte	.LFB15
 4250 0084 18000000 		.4byte	.LFE15-.LFB15
 4251 0088 00000000 		.4byte	.LFB16
 4252 008c 48000000 		.4byte	.LFE16-.LFB16
 4253 0090 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 109


 4254 0094 34000000 		.4byte	.LFE17-.LFB17
 4255 0098 00000000 		.4byte	.LFB18
 4256 009c 4C000000 		.4byte	.LFE18-.LFB18
 4257 00a0 00000000 		.4byte	.LFB19
 4258 00a4 36000000 		.4byte	.LFE19-.LFB19
 4259 00a8 00000000 		.4byte	.LFB20
 4260 00ac A8000000 		.4byte	.LFE20-.LFB20
 4261 00b0 00000000 		.4byte	.LFB21
 4262 00b4 58000000 		.4byte	.LFE21-.LFB21
 4263 00b8 00000000 		.4byte	.LFB22
 4264 00bc 2C000000 		.4byte	.LFE22-.LFB22
 4265 00c0 00000000 		.4byte	.LFB23
 4266 00c4 34000000 		.4byte	.LFE23-.LFB23
 4267 00c8 00000000 		.4byte	.LFB24
 4268 00cc 2C000000 		.4byte	.LFE24-.LFB24
 4269 00d0 00000000 		.4byte	.LFB25
 4270 00d4 2C000000 		.4byte	.LFE25-.LFB25
 4271 00d8 00000000 		.4byte	.LFB26
 4272 00dc 2C000000 		.4byte	.LFE26-.LFB26
 4273 00e0 00000000 		.4byte	.LFB27
 4274 00e4 14000000 		.4byte	.LFE27-.LFB27
 4275 00e8 00000000 		.4byte	.LFB28
 4276 00ec 20000000 		.4byte	.LFE28-.LFB28
 4277 00f0 00000000 		.4byte	.LFB29
 4278 00f4 48000000 		.4byte	.LFE29-.LFB29
 4279 00f8 00000000 		.4byte	.LFB30
 4280 00fc 28000000 		.4byte	.LFE30-.LFB30
 4281 0100 00000000 		.4byte	.LFB31
 4282 0104 80000000 		.4byte	.LFE31-.LFB31
 4283 0108 00000000 		.4byte	.LFB32
 4284 010c 24000000 		.4byte	.LFE32-.LFB32
 4285 0110 00000000 		.4byte	.LFB33
 4286 0114 64000000 		.4byte	.LFE33-.LFB33
 4287 0118 00000000 		.4byte	.LFB34
 4288 011c 1C000000 		.4byte	.LFE34-.LFB34
 4289 0120 00000000 		.4byte	.LFB35
 4290 0124 18000000 		.4byte	.LFE35-.LFB35
 4291 0128 00000000 		.4byte	.LFB36
 4292 012c 18000000 		.4byte	.LFE36-.LFB36
 4293 0130 00000000 		.4byte	.LFB37
 4294 0134 18000000 		.4byte	.LFE37-.LFB37
 4295 0138 00000000 		.4byte	.LFB38
 4296 013c 1C000000 		.4byte	.LFE38-.LFB38
 4297 0140 00000000 		.4byte	.LFB39
 4298 0144 18000000 		.4byte	.LFE39-.LFB39
 4299 0148 00000000 		.4byte	.LFB40
 4300 014c 18000000 		.4byte	.LFE40-.LFB40
 4301 0150 00000000 		.4byte	.LFB41
 4302 0154 34000000 		.4byte	.LFE41-.LFB41
 4303 0158 00000000 		.4byte	.LFB42
 4304 015c 18000000 		.4byte	.LFE42-.LFB42
 4305 0160 00000000 		.4byte	.LFB43
 4306 0164 14000000 		.4byte	.LFE43-.LFB43
 4307 0168 00000000 		.4byte	.LFB44
 4308 016c 2C000000 		.4byte	.LFE44-.LFB44
 4309 0170 00000000 		.4byte	.LFB45
 4310 0174 1C000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 110


 4311 0178 00000000 		.4byte	.LFB46
 4312 017c 44000000 		.4byte	.LFE46-.LFB46
 4313 0180 00000000 		.4byte	.LFB47
 4314 0184 C0000000 		.4byte	.LFE47-.LFB47
 4315 0188 00000000 		.4byte	0
 4316 018c 00000000 		.4byte	0
 4317              		.section	.debug_ranges,"",%progbits
 4318              	.Ldebug_ranges0:
 4319 0000 00000000 		.4byte	.LFB1
 4320 0004 1C000000 		.4byte	.LFE1
 4321 0008 00000000 		.4byte	.LFB2
 4322 000c 1C000000 		.4byte	.LFE2
 4323 0010 00000000 		.4byte	.LFB3
 4324 0014 FC000000 		.4byte	.LFE3
 4325 0018 00000000 		.4byte	.LFB4
 4326 001c 1C000000 		.4byte	.LFE4
 4327 0020 00000000 		.4byte	.LFB5
 4328 0024 20000000 		.4byte	.LFE5
 4329 0028 00000000 		.4byte	.LFB6
 4330 002c 44000000 		.4byte	.LFE6
 4331 0030 00000000 		.4byte	.LFB7
 4332 0034 44000000 		.4byte	.LFE7
 4333 0038 00000000 		.4byte	.LFB8
 4334 003c B8000000 		.4byte	.LFE8
 4335 0040 00000000 		.4byte	.LFB9
 4336 0044 64000000 		.4byte	.LFE9
 4337 0048 00000000 		.4byte	.LFB10
 4338 004c 28000000 		.4byte	.LFE10
 4339 0050 00000000 		.4byte	.LFB11
 4340 0054 18000000 		.4byte	.LFE11
 4341 0058 00000000 		.4byte	.LFB12
 4342 005c 14000000 		.4byte	.LFE12
 4343 0060 00000000 		.4byte	.LFB13
 4344 0064 30000000 		.4byte	.LFE13
 4345 0068 00000000 		.4byte	.LFB14
 4346 006c 24000000 		.4byte	.LFE14
 4347 0070 00000000 		.4byte	.LFB15
 4348 0074 18000000 		.4byte	.LFE15
 4349 0078 00000000 		.4byte	.LFB16
 4350 007c 48000000 		.4byte	.LFE16
 4351 0080 00000000 		.4byte	.LFB17
 4352 0084 34000000 		.4byte	.LFE17
 4353 0088 00000000 		.4byte	.LFB18
 4354 008c 4C000000 		.4byte	.LFE18
 4355 0090 00000000 		.4byte	.LFB19
 4356 0094 36000000 		.4byte	.LFE19
 4357 0098 00000000 		.4byte	.LFB20
 4358 009c A8000000 		.4byte	.LFE20
 4359 00a0 00000000 		.4byte	.LFB21
 4360 00a4 58000000 		.4byte	.LFE21
 4361 00a8 00000000 		.4byte	.LFB22
 4362 00ac 2C000000 		.4byte	.LFE22
 4363 00b0 00000000 		.4byte	.LFB23
 4364 00b4 34000000 		.4byte	.LFE23
 4365 00b8 00000000 		.4byte	.LFB24
 4366 00bc 2C000000 		.4byte	.LFE24
 4367 00c0 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 111


 4368 00c4 2C000000 		.4byte	.LFE25
 4369 00c8 00000000 		.4byte	.LFB26
 4370 00cc 2C000000 		.4byte	.LFE26
 4371 00d0 00000000 		.4byte	.LFB27
 4372 00d4 14000000 		.4byte	.LFE27
 4373 00d8 00000000 		.4byte	.LFB28
 4374 00dc 20000000 		.4byte	.LFE28
 4375 00e0 00000000 		.4byte	.LFB29
 4376 00e4 48000000 		.4byte	.LFE29
 4377 00e8 00000000 		.4byte	.LFB30
 4378 00ec 28000000 		.4byte	.LFE30
 4379 00f0 00000000 		.4byte	.LFB31
 4380 00f4 80000000 		.4byte	.LFE31
 4381 00f8 00000000 		.4byte	.LFB32
 4382 00fc 24000000 		.4byte	.LFE32
 4383 0100 00000000 		.4byte	.LFB33
 4384 0104 64000000 		.4byte	.LFE33
 4385 0108 00000000 		.4byte	.LFB34
 4386 010c 1C000000 		.4byte	.LFE34
 4387 0110 00000000 		.4byte	.LFB35
 4388 0114 18000000 		.4byte	.LFE35
 4389 0118 00000000 		.4byte	.LFB36
 4390 011c 18000000 		.4byte	.LFE36
 4391 0120 00000000 		.4byte	.LFB37
 4392 0124 18000000 		.4byte	.LFE37
 4393 0128 00000000 		.4byte	.LFB38
 4394 012c 1C000000 		.4byte	.LFE38
 4395 0130 00000000 		.4byte	.LFB39
 4396 0134 18000000 		.4byte	.LFE39
 4397 0138 00000000 		.4byte	.LFB40
 4398 013c 18000000 		.4byte	.LFE40
 4399 0140 00000000 		.4byte	.LFB41
 4400 0144 34000000 		.4byte	.LFE41
 4401 0148 00000000 		.4byte	.LFB42
 4402 014c 18000000 		.4byte	.LFE42
 4403 0150 00000000 		.4byte	.LFB43
 4404 0154 14000000 		.4byte	.LFE43
 4405 0158 00000000 		.4byte	.LFB44
 4406 015c 2C000000 		.4byte	.LFE44
 4407 0160 00000000 		.4byte	.LFB45
 4408 0164 1C000000 		.4byte	.LFE45
 4409 0168 00000000 		.4byte	.LFB46
 4410 016c 44000000 		.4byte	.LFE46
 4411 0170 00000000 		.4byte	.LFB47
 4412 0174 C0000000 		.4byte	.LFE47
 4413 0178 00000000 		.4byte	0
 4414 017c 00000000 		.4byte	0
 4415              		.section	.debug_line,"",%progbits
 4416              	.Ldebug_line0:
 4417 0000 87040000 		.section	.debug_str,"MS",%progbits,1
 4417      02004F00 
 4417      00000201 
 4417      FB0E0D00 
 4417      01010101 
 4418              	.LASF51:
 4419 0000 72616D56 		.ascii	"ramVectorTable\000"
 4419      6563746F 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 112


 4419      72546162 
 4419      6C6500
 4420              	.LASF10:
 4421 000f 75696E74 		.ascii	"uint16\000"
 4421      313600
 4422              	.LASF44:
 4423 0016 696E7453 		.ascii	"intState\000"
 4423      74617465 
 4423      00
 4424              	.LASF28:
 4425 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4425      73436C6B 
 4425      57726974 
 4425      65486663 
 4425      6C6B4469 
 4426              	.LASF101:
 4427 0038 433A5C55 		.ascii	"C:\\Users\\Matty\\Documents\\PSoC Creator\\RF_Switc"
 4427      73657273 
 4427      5C4D6174 
 4427      74795C44 
 4427      6F63756D 
 4428 0066 685F4D61 		.ascii	"h_Matrix\\RF_Switch_Matrix.cydsn\000"
 4428      74726978 
 4428      5C52465F 
 4428      53776974 
 4428      63685F4D 
 4429              	.LASF50:
 4430 0086 6F6C6449 		.ascii	"oldIsr\000"
 4430      737200
 4431              	.LASF43:
 4432 008d 43794469 		.ascii	"CyDisableInts\000"
 4432      7361626C 
 4432      65496E74 
 4432      7300
 4433              	.LASF7:
 4434 009b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4434      206C6F6E 
 4434      6720756E 
 4434      7369676E 
 4434      65642069 
 4435              	.LASF33:
 4436 00b2 70617261 		.ascii	"parameters\000"
 4436      6D657465 
 4436      727300
 4437              	.LASF45:
 4438 00bd 4379456E 		.ascii	"CyEnableInts\000"
 4438      61626C65 
 4438      496E7473 
 4438      00
 4439              	.LASF66:
 4440 00ca 4379536F 		.ascii	"CySoftwareReset\000"
 4440      66747761 
 4440      72655265 
 4440      73657400 
 4441              	.LASF76:
 4442 00da 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4442      73546963 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 113


 4442      6B456E61 
 4442      626C6549 
 4442      6E746572 
 4443              	.LASF61:
 4444 00f3 4379496E 		.ascii	"CyIntGetState\000"
 4444      74476574 
 4444      53746174 
 4444      6500
 4445              	.LASF6:
 4446 0101 6C6F6E67 		.ascii	"long long int\000"
 4446      206C6F6E 
 4446      6720696E 
 4446      7400
 4447              	.LASF0:
 4448 010f 7369676E 		.ascii	"signed char\000"
 4448      65642063 
 4448      68617200 
 4449              	.LASF22:
 4450 011b 66726571 		.ascii	"freq\000"
 4450      00
 4451              	.LASF71:
 4452 0120 43794465 		.ascii	"CyDelayFreq\000"
 4452      6C617946 
 4452      72657100 
 4453              	.LASF23:
 4454 012c 696E7465 		.ascii	"interruptState\000"
 4454      72727570 
 4454      74537461 
 4454      746500
 4455              	.LASF80:
 4456 013b 43795379 		.ascii	"CySysTickGetReload\000"
 4456      73546963 
 4456      6B476574 
 4456      52656C6F 
 4456      616400
 4457              	.LASF102:
 4458 014e 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 4458      73436C6B 
 4458      496D6F47 
 4458      65745763 
 4458      6F4C6F63 
 4459              	.LASF35:
 4460 0164 77636F4C 		.ascii	"wcoLock\000"
 4460      6F636B00 
 4461              	.LASF4:
 4462 016c 6C6F6E67 		.ascii	"long int\000"
 4462      20696E74 
 4462      00
 4463              	.LASF62:
 4464 0175 4379496E 		.ascii	"CyIntDisable\000"
 4464      74446973 
 4464      61626C65 
 4464      00
 4465              	.LASF34:
 4466 0182 72656756 		.ascii	"regValues\000"
 4466      616C7565 
 4466      7300
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 114


 4467              	.LASF9:
 4468 018c 75696E74 		.ascii	"uint8\000"
 4468      3800
 4469              	.LASF95:
 4470 0192 63796465 		.ascii	"cydelayFreqKhz\000"
 4470      6C617946 
 4470      7265714B 
 4470      687A00
 4471              	.LASF69:
 4472 01a1 43794465 		.ascii	"CyDelayUs\000"
 4472      6C617955 
 4472      7300
 4473              	.LASF13:
 4474 01ab 646F7562 		.ascii	"double\000"
 4474      6C6500
 4475              	.LASF57:
 4476 01b2 73686966 		.ascii	"shift\000"
 4476      7400
 4477              	.LASF39:
 4478 01b8 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4478      734C7664 
 4478      436C6561 
 4478      72496E74 
 4478      65727275 
 4479              	.LASF11:
 4480 01cf 75696E74 		.ascii	"uint32\000"
 4480      333200
 4481              	.LASF48:
 4482 01d6 6E756D62 		.ascii	"number\000"
 4482      657200
 4483              	.LASF46:
 4484 01dd 6D61736B 		.ascii	"mask\000"
 4484      00
 4485              	.LASF36:
 4486 01e2 43795379 		.ascii	"CySysLvdEnable\000"
 4486      734C7664 
 4486      456E6162 
 4486      6C6500
 4487              	.LASF27:
 4488 01f1 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 4488      73436C6B 
 4488      496D6F45 
 4488      6E61626C 
 4488      6557636F 
 4489              	.LASF59:
 4490 020a 4379496E 		.ascii	"CyIntGetPriority\000"
 4490      74476574 
 4490      5072696F 
 4490      72697479 
 4490      00
 4491              	.LASF97:
 4492 021b 63796465 		.ascii	"cydelay32kMs\000"
 4492      6C617933 
 4492      326B4D73 
 4492      00
 4493              	.LASF73:
 4494 0228 43795379 		.ascii	"CySysTickInit\000"
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 115


 4494      73546963 
 4494      6B496E69 
 4494      7400
 4495              	.LASF58:
 4496 0236 76616C75 		.ascii	"value\000"
 4496      6500
 4497              	.LASF83:
 4498 023c 636C6F63 		.ascii	"clockSource\000"
 4498      6B536F75 
 4498      72636500 
 4499              	.LASF90:
 4500 0248 43794765 		.ascii	"CyGetUniqueId\000"
 4500      74556E69 
 4500      71756549 
 4500      6400
 4501              	.LASF84:
 4502 0256 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4502      73546963 
 4502      6B476574 
 4502      436F756E 
 4502      74466C61 
 4503              	.LASF8:
 4504 026c 756E7369 		.ascii	"unsigned int\000"
 4504      676E6564 
 4504      20696E74 
 4504      00
 4505              	.LASF85:
 4506 0279 43795379 		.ascii	"CySysTickClear\000"
 4506      73546963 
 4506      6B436C65 
 4506      617200
 4507              	.LASF5:
 4508 0288 6C6F6E67 		.ascii	"long unsigned int\000"
 4508      20756E73 
 4508      69676E65 
 4508      6420696E 
 4508      7400
 4509              	.LASF79:
 4510 029a 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4510      734C7664 
 4510      47657449 
 4510      6E746572 
 4510      72757074 
 4511              	.LASF21:
 4512 02b5 43795379 		.ascii	"CySysClkImoStop\000"
 4512      73436C6B 
 4512      496D6F53 
 4512      746F7000 
 4513              	.LASF63:
 4514 02c5 4379496E 		.ascii	"CyIntSetPending\000"
 4514      74536574 
 4514      50656E64 
 4514      696E6700 
 4515              	.LASF89:
 4516 02d5 43795379 		.ascii	"CySysTickGetCallback\000"
 4516      73546963 
 4516      6B476574 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 116


 4516      43616C6C 
 4516      6261636B 
 4517              	.LASF42:
 4518 02ea 43795379 		.ascii	"CySysGetResetReason\000"
 4518      73476574 
 4518      52657365 
 4518      74526561 
 4518      736F6E00 
 4519              	.LASF3:
 4520 02fe 73686F72 		.ascii	"short unsigned int\000"
 4520      7420756E 
 4520      7369676E 
 4520      65642069 
 4520      6E7400
 4521              	.LASF24:
 4522 0311 72656754 		.ascii	"regTmp\000"
 4522      6D7000
 4523              	.LASF82:
 4524 0318 43795379 		.ascii	"CySysTickSetClockSource\000"
 4524      73546963 
 4524      6B536574 
 4524      436C6F63 
 4524      6B536F75 
 4525              	.LASF53:
 4526 0330 4379496E 		.ascii	"CyIntSetVector\000"
 4526      74536574 
 4526      56656374 
 4526      6F7200
 4527              	.LASF100:
 4528 033f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4528      6E657261 
 4528      7465645F 
 4528      536F7572 
 4528      63655C50 
 4529              	.LASF56:
 4530 0360 7072696F 		.ascii	"priority\000"
 4530      72697479 
 4530      00
 4531              	.LASF32:
 4532 0369 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4532      73436C6B 
 4532      57726974 
 4532      65496D6F 
 4532      46726571 
 4533              	.LASF47:
 4534 037e 4379496E 		.ascii	"CyIntSetSysVector\000"
 4534      74536574 
 4534      53797356 
 4534      6563746F 
 4534      7200
 4535              	.LASF26:
 4536 0390 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 4536      73436C6B 
 4536      496D6F44 
 4536      69736162 
 4536      6C655763 
 4537              	.LASF16:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 117


 4538 03aa 72656733 		.ascii	"reg32\000"
 4538      3200
 4539              	.LASF72:
 4540 03b0 43795379 		.ascii	"CySysTickStart\000"
 4540      73546963 
 4540      6B537461 
 4540      727400
 4541              	.LASF18:
 4542 03bf 73697A65 		.ascii	"sizetype\000"
 4542      74797065 
 4542      00
 4543              	.LASF93:
 4544 03c8 43795379 		.ascii	"CySysTickInitVar\000"
 4544      73546963 
 4544      6B496E69 
 4544      74566172 
 4544      00
 4545              	.LASF64:
 4546 03d9 4379496E 		.ascii	"CyIntClearPending\000"
 4546      74436C65 
 4546      61725065 
 4546      6E64696E 
 4546      6700
 4547              	.LASF49:
 4548 03eb 61646472 		.ascii	"address\000"
 4548      65737300 
 4549              	.LASF88:
 4550 03f3 72657456 		.ascii	"retVal\000"
 4550      616C00
 4551              	.LASF87:
 4552 03fa 66756E63 		.ascii	"function\000"
 4552      74696F6E 
 4552      00
 4553              	.LASF98:
 4554 0403 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4554      6F467265 
 4554      714D687A 
 4554      32526567 
 4554      00
 4555              	.LASF81:
 4556 0414 43795379 		.ascii	"CySysTickGetValue\000"
 4556      73546963 
 4556      6B476574 
 4556      56616C75 
 4556      6500
 4557              	.LASF94:
 4558 0426 63796465 		.ascii	"cydelayFreqHz\000"
 4558      6C617946 
 4558      72657148 
 4558      7A00
 4559              	.LASF55:
 4560 0434 4379496E 		.ascii	"CyIntSetPriority\000"
 4560      74536574 
 4560      5072696F 
 4560      72697479 
 4560      00
 4561              	.LASF12:
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 118


 4562 0445 666C6F61 		.ascii	"float\000"
 4562      7400
 4563              	.LASF99:
 4564 044b 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4564      4320342E 
 4564      382E3420 
 4564      32303134 
 4564      30353236 
 4565 047e 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4565      20726576 
 4565      6973696F 
 4565      6E203231 
 4565      31333538 
 4566 04b1 30202D66 		.ascii	"0 -ffunction-sections\000"
 4566      66756E63 
 4566      74696F6E 
 4566      2D736563 
 4566      74696F6E 
 4567              	.LASF19:
 4568 04c7 63795379 		.ascii	"cySysTickCallback\000"
 4568      73546963 
 4568      6B43616C 
 4568      6C626163 
 4568      6B00
 4569              	.LASF54:
 4570 04d9 4379496E 		.ascii	"CyIntGetVector\000"
 4570      74476574 
 4570      56656374 
 4570      6F7200
 4571              	.LASF68:
 4572 04e8 6D696C6C 		.ascii	"milliseconds\000"
 4572      69736563 
 4572      6F6E6473 
 4572      00
 4573              	.LASF15:
 4574 04f5 72656738 		.ascii	"reg8\000"
 4574      00
 4575              	.LASF37:
 4576 04fa 74687265 		.ascii	"threshold\000"
 4576      73686F6C 
 4576      6400
 4577              	.LASF65:
 4578 0504 43794861 		.ascii	"CyHalt\000"
 4578      6C7400
 4579              	.LASF1:
 4580 050b 756E7369 		.ascii	"unsigned char\000"
 4580      676E6564 
 4580      20636861 
 4580      7200
 4581              	.LASF2:
 4582 0519 73686F72 		.ascii	"short int\000"
 4582      7420696E 
 4582      7400
 4583              	.LASF60:
 4584 0523 4379496E 		.ascii	"CyIntEnable\000"
 4584      74456E61 
 4584      626C6500 
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 119


 4585              	.LASF52:
 4586 052f 4379496E 		.ascii	"CyIntGetSysVector\000"
 4586      74476574 
 4586      53797356 
 4586      6563746F 
 4586      7200
 4587              	.LASF30:
 4588 0541 636C6B53 		.ascii	"clkSelect\000"
 4588      656C6563 
 4588      7400
 4589              	.LASF40:
 4590 054b 72656173 		.ascii	"reason\000"
 4590      6F6E00
 4591              	.LASF14:
 4592 0552 63686172 		.ascii	"char\000"
 4592      00
 4593              	.LASF17:
 4594 0557 63796973 		.ascii	"cyisraddress\000"
 4594      72616464 
 4594      72657373 
 4594      00
 4595              	.LASF74:
 4596 0564 43795379 		.ascii	"CySysTickEnable\000"
 4596      73546963 
 4596      6B456E61 
 4596      626C6500 
 4597              	.LASF29:
 4598 0574 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4598      73436C6B 
 4598      57726974 
 4598      65537973 
 4598      636C6B44 
 4599              	.LASF86:
 4600 058b 43795379 		.ascii	"CySysTickSetCallback\000"
 4600      73546963 
 4600      6B536574 
 4600      43616C6C 
 4600      6261636B 
 4601              	.LASF92:
 4602 05a0 43795379 		.ascii	"CySysTickCallbacks\000"
 4602      73546963 
 4602      6B43616C 
 4602      6C626163 
 4602      6B7300
 4603              	.LASF91:
 4604 05b3 756E6971 		.ascii	"uniqueId\000"
 4604      75654964 
 4604      00
 4605              	.LASF25:
 4606 05bc 666C6173 		.ascii	"flashCtlReg\000"
 4606      6843746C 
 4606      52656700 
 4607              	.LASF67:
 4608 05c8 43794465 		.ascii	"CyDelay\000"
 4608      6C617900 
 4609              	.LASF77:
 4610 05d0 43795379 		.ascii	"CySysTickDisableInterrupt\000"
ARM GAS  C:\Users\Matty\AppData\Local\Temp\cctwm5N3.s 			page 120


 4610      73546963 
 4610      6B446973 
 4610      61626C65 
 4610      496E7465 
 4611              	.LASF38:
 4612 05ea 43795379 		.ascii	"CySysLvdDisable\000"
 4612      734C7664 
 4612      44697361 
 4612      626C6500 
 4613              	.LASF96:
 4614 05fa 63796465 		.ascii	"cydelayFreqMhz\000"
 4614      6C617946 
 4614      7265714D 
 4614      687A00
 4615              	.LASF41:
 4616 0609 73746174 		.ascii	"status\000"
 4616      757300
 4617              	.LASF75:
 4618 0610 43795379 		.ascii	"CySysTickStop\000"
 4618      73546963 
 4618      6B53746F 
 4618      7000
 4619              	.LASF31:
 4620 061e 64697669 		.ascii	"divider\000"
 4620      64657200 
 4621              	.LASF20:
 4622 0626 43795379 		.ascii	"CySysClkImoStart\000"
 4622      73436C6B 
 4622      496D6F53 
 4622      74617274 
 4622      00
 4623              	.LASF70:
 4624 0637 6D696372 		.ascii	"microseconds\000"
 4624      6F736563 
 4624      6F6E6473 
 4624      00
 4625              	.LASF78:
 4626 0644 43795379 		.ascii	"CySysTickSetReload\000"
 4626      73546963 
 4626      6B536574 
 4626      52656C6F 
 4626      616400
 4627              	.LASF103:
 4628 0657 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4628      73546963 
 4628      6B536572 
 4628      76696365 
 4628      43616C6C 
 4629              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
